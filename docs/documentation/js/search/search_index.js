var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/classes/AbstractNavigator.html",[0,0.019,1,1.263]],["body/classes/AbstractNavigator.html",[0,0.034,1,2.174,2,0.205,3,2.545,4,0.345,5,0.164,6,1.514,7,0.342,8,2.716,9,1.926,10,0.724,11,1.208,12,2.398,13,1.926,14,4.139,15,2.904,16,3.537,17,1.504,18,0.908,19,3.537,20,3.537,21,2.904,22,2.904,23,1.926,24,2.904,25,1.341,26,2.175,27,2.175,28,2.487,29,0.294,30,1.281,31,3.369,32,2.904,33,3.475,34,1.804,35,2.463,36,2.464,37,4.139,38,2.329,39,4.139,40,2.012,41,2.014,42,0.042,43,2.329,44,1.157,45,1.063,46,2.463,47,1.719,48,1.248,49,0.422,50,1.386,51,1.542,52,1.972,53,2.904,54,2.463,55,3.067,56,2.175,57,0.54,58,2.946,59,2.904,60,2.904,61,0.074,62,0.953,63,2.463,64,1.804,65,1.622,66,2.487,67,1.542,68,2.464,69,2.545,70,3.398,71,2.175,72,2.175,73,1.514,74,1.731,75,2.545,76,1.731,77,3.398,78,2.463,79,0.399,80,2.487,81,4.525,82,0.965,83,0.422,84,1.184,85,4.792,86,3.537,87,2.904,88,1.461,89,2.904,90,2.175,91,1.184,92,3.537,93,3.537,94,2.175,95,2.904,96,1.926,97,2.463,98,2.022,99,2.463,100,1.514,101,2.022,102,0.641,103,2.487,104,0.813,105,2.463,106,1.926,107,2.904,108,2.463,109,4.139,110,2.463,111,2.463,112,2.463,113,1.341,114,2.199,115,1.248,116,1.294,117,0.965,118,1.514,119,2.487,120,0.422,121,2.463,122,2.022,123,0.704,124,0.301,125,2.463,126,1.731,127,2.463,128,1.926,129,2.463,130,2.463,131,0.965,132,2.463,133,2.463,134,2.463,135,0.783,136,2.022,137,1.731,138,2.022,139,1.514,140,1.731,141,1.514,142,2.463,143,2.487,144,2.904,145,2.487,146,1.542,147,2.463,148,2.463,149,2.022,150,2.463,151,2.463,152,2.463,153,2.463,154,2.463,155,0.024,156,0.024]],["title/directives/AnchorDirective.html",[61,0.06,157,1.136]],["body/directives/AnchorDirective.html",[0,0.018,2,0.227,4,0.227,5,0.181,7,0.527,10,0.968,13,2.066,15,3.115,18,1.323,26,2.333,27,2.333,29,0.324,30,0.974,34,2.061,42,0.042,44,0.557,45,1.323,47,1.844,48,1.339,49,0.593,50,1.066,52,2.061,55,2.908,57,0.383,61,0.11,62,0.493,68,3.022,79,0.364,83,0.654,84,0.778,88,1.819,100,2.333,101,3.115,102,0.688,106,2.066,120,0.324,124,0.181,140,2.667,141,2.333,155,0.026,156,0.026,157,1.854,158,2.232,159,3.794,160,3.794,161,3.794,162,3.115,163,1.567,164,2.066,165,3.794,166,2.333,167,1.542,168,3.794,169,3.072,170,2.333,171,3.143,172,2.333,173,1.066,174,0.688,175,3.794,176,1.321,177,0.96,178,1.085,179,2.333,180,0.974,181,3.588,182,5.152,183,4.729,184,4.729,185,3.317,186,3.588,187,4.974,188,2.719,189,4.729,190,2.879,191,4.37,192,1.854,193,3.794,194,3.794,195,2.719,196,3.794,197,1.352,198,5.288,199,2.719,200,3.794,201,3.882,202,4.729,203,2.667,204,2.719,205,1.339,206,2.333,207,2.667,208,3.794,209,3.794,210,3.794,211,1.654,212,2.333,213,3.588,214,2.333,215,2.719,216,1.066,217,2.719,218,2.719,219,3.794,220,1.911,221,1.481,222,1.481,223,1.672,224,0.96,225,3.794,226,2.719,227,2.719,228,3.794,229,2.719,230,1.185,231,2.719,232,1.911,233,2.719,234,2.719,235,3.794,236,2.719,237,4.37,238,2.719,239,2.719,240,2.719,241,2.719,242,2.719,243,2.719,244,2.719,245,2.719,246,2.719]],["title/directives/DateCellControlValueAccessor.html",[61,0.06,247,1.263]],["body/directives/DateCellControlValueAccessor.html",[0,0.019,2,0.24,4,0.24,5,0.192,7,0.399,8,1.567,10,0.808,11,0.906,18,1.404,29,0.343,30,1.013,42,0.042,44,0.922,45,0.739,49,0.343,51,1.719,57,0.454,61,0.106,62,0.816,64,1.719,65,1.765,67,1.719,73,1.769,79,0.404,82,1.128,83,0.641,84,0.823,96,2.148,102,0.951,104,0.906,106,2.638,115,1.015,116,1.288,118,2.426,120,0.343,123,0.823,124,0.192,128,2.638,135,0.914,155,0.027,156,0.027,163,1.564,164,2.148,166,2.426,167,1.499,170,2.426,172,2.426,174,0.816,177,1.015,178,1.128,179,2.426,197,1.288,205,1.392,211,2.111,224,1.851,247,1.962,248,1.917,249,0.745,250,2.426,251,1.128,252,1.567,253,2.773,254,2.426,255,3.945,256,2.773,257,2.773,258,3.406,259,2.773,260,3.406,261,2.773,262,2.426,263,2.773,264,2.773,265,2.773,266,1.917,267,2.773,268,2.426,269,1.719,270,2.773,271,2.426,272,2.773,273,3.165,274,3.945,275,4.167,276,4.503,277,2.426,278,2.979,279,3.945,280,3.945,281,1.546,282,4.845,283,4.845,284,4.845,285,3.945,286,4.845,287,2.877,288,1.719,289,1.719,290,1.398,291,2.022,292,1.254,293,1.254,294,2.022,295,2.022,296,2.877,297,2.877,298,2.877,299,2.877,300,2.548,301,1.769,302,1.769,303,1.769,304,1.769,305,1.769,306,2.362,307,1.769,308,0.914,309,3.945,310,2.877,311,1.769]],["title/interfaces/HTMLInputElementStyle.html",[312,0.829,313,1.782]],["body/interfaces/HTMLInputElementStyle.html",[0,0.034,2,0.274,4,0.274,5,0.219,10,1.047,11,0.755,18,0.844,26,2.021,28,2.31,29,0.392,30,0.844,42,0.042,48,1.16,49,0.61,52,2.228,57,0.535,58,2.652,61,0.068,62,0.873,68,2.622,72,2.021,79,0.274,83,0.575,104,1.106,113,1.79,116,0.94,120,0.392,124,0.287,126,2.31,146,2.375,155,0.029,156,0.029,167,1.377,173,1.288,174,0.873,180,1.236,197,0.94,205,1.16,207,2.31,211,1.88,221,1.79,230,1.88,249,0.771,251,1.234,269,1.88,277,2.021,278,2.961,281,1.691,312,1.234,313,3.351,314,2.31,315,4.474,316,2.967,317,4.474,318,3.587,319,2.698,320,2.698,321,2.652,322,2.698,323,2.698,324,1.432,325,2.698,326,2.698,327,1.88,328,2.34,329,3.033,330,2.698,331,2.698,332,2.698,333,3.541,334,3.541,335,2.31,336,2.698,337,2.698,338,2.698,339,1.79,340,2.31,341,2.698,342,1.79,343,2.698,344,2.698,345,2.31,346,1.79,347,2.698,348,2.698,349,2.698,350,2.698,351,2.021,352,2.021,353,2.31,354,2.021,355,2.698,356,2.698,357,2.698,358,2.698,359,2.698,360,2.698,361,2.698,362,2.698,363,1.597]],["title/components/InputTemplateComponent.html",[216,1.136,324,1.263]],["body/components/InputTemplateComponent.html",[0,0.033,2,0.268,4,0.268,5,0.214,7,0.446,9,1.751,10,1.079,11,0.739,13,1.751,17,0.919,29,0.384,30,1.092,42,0.042,44,0.87,45,1.302,48,1.681,49,0.507,57,0.429,61,0.089,62,0.864,79,0.397,82,1.667,83,0.605,88,1.912,94,3.242,95,2.64,102,0.864,120,0.507,124,0.283,135,1.352,155,0.029,156,0.029,157,1.26,167,1.216,171,3.008,173,1.26,174,0.771,177,1.135,178,1.652,180,1.092,197,1.45,205,1.501,206,3.49,212,1.977,214,1.977,216,1.987,220,2.26,221,1.751,247,1.401,249,0.446,281,1.26,293,1.853,324,2.473,364,3.215,365,2.26,366,3.491,367,3.397,368,3.911,369,4.162,370,4.162,371,4.162,372,3.215,373,3.349,374,3.215,375,2.64,376,3.491,377,3.215,378,4.447,379,3.215,380,3.491,381,1.563,382,1.751,383,2.64,384,2.64,385,2.64,386,2.64,387,2.64,388,2.64,389,1.977,390,5.069,391,3.215,392,3.215,393,3.215,394,1.401,395,3.215,396,1.401,397,3.215,398,3.215,399,0.919,400,3.215,401,1.401,402,3.215,403,1.563,404,2.64,405,3.215]],["title/classes/KeyboardNavigator.html",[0,0.019,25,1.578]],["body/classes/KeyboardNavigator.html",[0,0.027,1,2.442,2,0.252,3,1.857,4,0.252,5,0.201,7,0.419,8,2.22,11,1.136,12,2.318,13,2.22,17,0.863,18,1.047,25,2.22,29,0.36,30,1.185,31,2.866,32,3.347,33,3.446,36,1.644,38,1.467,40,2.643,41,1.937,42,0.042,43,2.243,44,1.113,45,1.325,47,1.981,48,1.439,49,0.551,50,1.598,52,1.316,53,2.479,55,2.507,56,2.838,57,0.304,58,1.857,59,2.479,60,2.479,61,0.063,62,0.936,64,1.316,65,1.183,66,2.123,67,1.316,68,1.644,69,1.857,70,2.479,72,2.507,79,0.34,82,1.598,83,0.635,84,1.166,87,2.479,88,1.629,89,3.347,91,1.166,94,2.507,120,0.36,124,0.201,149,2.479,155,0.028,156,0.028,180,1.047,197,1.166,249,0.419,281,1.183,406,4.058,407,2.479,408,4.077,409,4.077,410,4.077,411,4.077,412,4.077,413,4.943,414,4.077,415,3.79,416,3.79,417,3.79,418,3.79,419,3.79,420,3.019,421,3.245,422,3.019,423,3.019,424,3.019,425,3.019,426,4.077,427,3.019,428,4.077,429,4.077,430,3.019,431,4.077,432,4.077,433,4.077,434,4.077,435,3.019,436,5.162,437,3.019,438,2.123,439,2.123,440,2.123,441,2.123,442,2.123,443,3.019]],["title/directives/NumberCellControlValueAccessor.html",[61,0.06,394,1.263]],["body/directives/NumberCellControlValueAccessor.html",[0,0.021,2,0.262,4,0.262,5,0.21,7,0.437,8,1.714,11,0.963,18,1.433,42,0.042,44,0.965,51,1.827,57,0.475,61,0.109,62,0.855,64,1.827,65,1.847,67,1.827,73,1.935,79,0.393,82,1.234,83,0.642,84,0.9,96,2.283,102,0.976,104,0.963,106,2.283,115,1.111,116,1.348,118,2.578,120,0.375,123,0.9,124,0.21,128,2.737,155,0.029,156,0.029,163,1.596,164,2.283,166,2.578,167,1.54,170,2.578,172,2.578,174,0.76,177,1.111,178,1.199,179,2.578,205,1.48,224,1.9,248,1.529,249,0.763,251,0.9,252,1.714,253,2.947,254,2.578,256,2.947,257,2.947,258,3.534,259,2.947,260,3.534,261,2.947,262,2.578,263,2.947,264,2.947,265,2.947,266,2.037,267,2.947,268,2.578,269,1.827,270,2.947,271,2.578,272,2.947,288,1.827,289,1.827,290,1.529,292,1.372,293,1.372,294,2.212,295,2.212,300,2.616,301,1.935,302,1.935,303,1.935,304,1.935,305,1.935,307,1.935,308,1,311,1.935,318,1.935,394,2.054,444,1.935,445,4.192,446,3.314,447,4.192]],["title/directives/OnInitDirective.html",[61,0.06,396,1.263]],["body/directives/OnInitDirective.html",[0,0.026,2,0.327,4,0.327,5,0.261,7,0.544,10,0.988,11,1.109,24,3.962,29,0.468,30,1.239,34,1.708,38,2.652,42,0.041,44,0.988,45,1.342,47,1.905,48,1.384,49,0.576,50,1.536,61,0.117,62,0.711,65,2.196,66,3.393,79,0.327,83,0.468,102,0.875,107,3.962,120,0.468,124,0.261,155,0.033,156,0.033,177,1.384,178,1.38,197,1.495,201,3.962,206,2.967,232,2.756,382,2.628,396,2.103,448,4.479,449,3.218,450,4.826,451,4.826,452,4.826,453,5.603,454,3.355,455,3.92,456,4.826,457,4.826,458,3.92,459,3.92,460,3.92,461,3.92]],["title/interfaces/RowChangeContext.html",[312,0.829,462,1.782]],["body/interfaces/RowChangeContext.html",[0,0.023,2,0.295,4,0.295,5,0.236,12,1.545,29,0.423,40,2.427,41,2.063,42,0.042,49,0.596,67,1.545,74,2.493,79,0.378,83,0.596,91,1.014,102,0.643,124,0.302,131,1.39,155,0.031,156,0.031,180,1.163,224,1.763,230,1.545,308,1.917,312,1.296,342,3.079,399,1.617,462,3.42,463,2.493,464,2.493,465,3.148,466,4.321,467,2.493,468,1.931,469,2.911,470,4.1,471,2.911,472,2.911,473,2.493,474,1.776,475,3.72,476,2.911,477,2.911,478,2.911,479,2.911,480,3.071,481,3.72,482,2.911,483,2.911,484,2.911,485,2.911,486,2.911,487,2.911,488,2.911]],["title/classes/RowChangeEvent.html",[0,0.019,474,1.136]],["body/classes/RowChangeEvent.html",[0,0.028,2,0.271,4,0.271,5,0.217,7,0.452,12,1.868,29,0.388,40,2.693,41,2.13,42,0.042,45,1.231,49,0.608,67,1.868,74,3.013,79,0.357,83,0.679,91,1.226,102,0.59,124,0.286,131,1.996,155,0.029,156,0.029,176,1.582,180,1.101,224,1.692,230,1.419,249,0.595,281,1.68,308,1.91,312,0.931,342,2.96,399,1.554,462,3.559,463,3.581,464,2.288,465,3.151,466,3.519,467,2.288,468,1.772,469,3.519,470,4.462,471,3.519,472,2.672,473,2.288,474,1.996,475,4.182,476,4.182,477,4.182,478,2.672,479,2.672,480,2.947,481,3.519,482,2.672,483,2.672,484,2.672,485,2.672,486,2.672,487,2.672,488,2.672,489,3.255,490,3.255,491,3.255]],["title/injectables/TableEditorConfig.html",[104,0.666,327,1.263]],["body/injectables/TableEditorConfig.html",[0,0.036,2,0.239,4,0.239,5,0.191,7,0.547,10,1.098,11,0.905,18,0.737,26,1.765,28,2.018,29,0.342,30,1.243,42,0.042,45,1.155,47,1.914,48,1.708,49,0.536,50,1.125,52,2.445,57,0.559,58,2.976,61,0.082,62,0.878,68,2.853,72,2.422,79,0.239,83,0.661,104,1.165,113,2.145,116,1.126,120,0.342,124,0.262,126,2.769,146,1.96,155,0.027,156,0.027,167,1.286,173,1.125,174,0.92,180,1.243,197,0.821,205,1.39,207,2.769,211,1.96,221,1.563,230,1.717,249,0.803,251,1.384,269,2.109,277,1.765,278,2.976,281,1.988,312,1.126,313,3.36,314,2.018,315,3.692,316,2.449,317,3.692,318,2.976,319,3.233,320,3.233,321,2.976,322,3.233,323,3.233,324,1.717,325,3.233,326,3.233,327,2.109,328,2.608,329,3.161,330,2.356,331,3.233,332,3.233,333,3.973,334,3.692,335,2.769,336,3.233,337,3.233,338,3.233,339,2.145,340,2.769,341,3.233,342,2.145,343,3.233,344,3.233,345,2.769,346,1.563,347,2.356,348,3.973,349,3.233,350,2.356,351,2.422,352,1.765,353,2.018,354,1.765,355,2.356,356,2.356,357,2.356,358,3.233,359,2.356,360,2.356,361,2.356,362,2.356,363,1.395,492,3.939,493,2.87,494,2.87,495,2.87,496,2.87]],["title/directives/TableEditorDirective.html",[17,0.829,61,0.06]],["body/directives/TableEditorDirective.html",[0,0.012,1,0.772,2,0.148,3,1.7,4,0.148,5,0.118,7,0.246,9,0.965,10,0.786,11,0.882,12,1.481,17,0.972,18,1.132,27,1.09,29,0.211,30,1.132,33,1.7,34,0.772,36,1.505,38,1.343,40,2.608,41,1.728,42,0.042,43,1.343,44,0.786,45,0.71,47,0.861,48,0.626,49,0.405,50,1.083,51,0.772,56,2.559,57,0.42,61,0.106,62,0.799,64,0.772,65,1.332,69,1.09,71,1.7,75,1.09,76,1.246,79,0.367,83,0.458,84,1.549,88,1.911,91,0.791,100,1.09,102,0.997,103,1.246,104,0.407,113,0.965,114,0.861,120,0.211,123,0.791,124,0.184,131,0.695,135,0.879,139,2.089,146,1.205,155,0.019,156,0.019,163,0.972,167,1.098,169,1.246,173,0.695,174,0.799,176,1.651,177,0.626,178,0.791,185,1.09,190,1.505,203,1.246,211,1.673,222,0.965,223,1.09,224,0.976,230,1.673,249,0.384,251,0.972,266,1.343,269,0.772,293,0.772,308,1.748,312,0.791,316,1.505,328,1.865,346,1.85,352,1.09,354,1.7,363,1.651,381,0.861,399,1.098,438,2.389,439,1.246,440,2.389,441,1.943,442,1.246,454,1.09,465,2.776,468,0.965,474,1.332,480,2.36,497,1.246,498,3.237,499,2.269,500,1.7,501,1.943,502,2.269,503,1.773,504,2.389,505,2.089,506,2.269,507,2.79,508,3.416,509,1.943,510,2.269,511,2.089,512,1.773,513,2.269,514,2.892,515,1.773,516,2.79,517,1.246,518,2.389,519,3.151,520,1.455,521,1.246,522,0.861,523,1.7,524,1.246,525,2.269,526,2.79,527,1.455,528,1.455,529,1.455,530,1.246,531,1.455,532,1.455,533,1.455,534,1.455,535,1.246,536,1.455,537,1.455,538,1.455,539,1.455,540,3.416,541,2.269,542,2.269,543,1.455,544,1.455,545,1.943,546,1.455,547,2.269,548,2.79,549,1.455,550,1.246,551,1.455,552,1.455,553,1.455,554,1.455,555,1.455,556,1.455,557,3.416,558,3.416,559,1.455,560,1.455,561,1.455,562,1.943,563,1.09,564,1.455,565,2.269,566,1.455,567,4.018,568,2.269,569,1.455,570,2.269,571,1.455,572,1.455,573,1.455,574,2.269,575,1.455,576,1.455,577,1.455,578,2.79,579,2.79,580,1.246,581,1.455,582,2.269,583,2.269,584,2.79,585,1.455,586,3.151,587,1.455,588,2.79,589,2.269,590,1.455,591,2.269,592,4.018,593,2.269,594,3.151,595,1.455,596,1.455,597,2.389,598,2.389,599,3.151,600,1.7,601,1.455,602,1.455,603,1.455,604,1.455,605,1.246,606,1.455,607,1.455,608,1.455,609,1.455,610,1.455,611,1.455,612,1.455,613,1.455,614,1.455,615,1.455,616,1.455,617,1.455,618,1.246,619,1.09,620,1.246,621,1.246,622,1.455,623,1.455,624,1.246,625,1.455,626,1.455,627,1.455,628,1.455,629,1.246,630,1.455,631,1.455,632,1.455,633,1.455,634,1.455,635,1.455,636,1.455,637,1.455,638,1.455,639,1.455,640,1.455,641,1.455,642,1.455,643,1.455,644,1.455,645,1.455,646,1.455,647,1.455,648,1.246,649,1.455]],["title/modules/TableEditorModule.html",[117,1.136,650,1.782]],["body/modules/TableEditorModule.html",[0,0.019,1,1.698,2,0.235,4,0.235,5,0.188,12,1.231,17,1.641,23,1.539,25,2.429,34,1.231,41,1.527,42,0.042,57,0.285,79,0.49,84,1.114,91,0.808,114,2.168,115,0.997,116,1.375,117,1.527,119,2.739,120,0.337,122,2.32,123,0.808,124,0.32,131,1.107,155,0.027,156,0.027,157,2.233,163,1.114,174,0.872,192,2.134,216,2.262,247,2.5,249,0.742,250,1.737,251,1.528,290,1.373,291,1.986,327,2.329,339,2.429,389,1.737,394,2.5,396,2.482,399,1.641,401,2.5,444,1.737,467,1.986,468,1.539,474,1.527,522,1.373,524,1.986,650,3.721,651,1.737,652,1.737,653,2.32,654,2.32,655,2.32,656,2.32,657,2.739,658,1.986,659,1.737,660,1.986,661,3.199,662,3.897,663,3.897,664,1.737,665,4.46,666,2.826,667,2.826,668,2.826,669,2.826,670,2.826,671,3.199,672,2.826,673,2.826,674,2.826,675,2.739,676,2.739]],["title/directives/TableEditorRowDirective.html",[61,0.06,399,0.829]],["body/directives/TableEditorRowDirective.html",[0,0.019,2,0.238,4,0.238,5,0.191,7,0.397,10,1.118,11,0.903,17,1.382,18,1.009,29,0.341,30,1.009,42,0.042,44,0.585,45,1.009,49,0.469,55,2.416,57,0.453,61,0.12,71,2.416,79,0.422,83,0.681,84,1.284,88,1.387,91,1.124,102,1.026,120,0.341,124,0.191,135,1.249,141,2.416,155,0.027,156,0.027,163,1.497,167,1.124,173,1.121,174,0.949,176,1.39,177,1.009,178,1.124,180,1.009,185,1.758,190,2.139,197,1.449,212,2.416,222,1.557,223,1.758,224,1.788,232,2.01,249,0.397,251,0.818,266,1.909,269,1.246,290,1.39,293,1.246,308,1.249,328,1.39,329,2.762,342,2.444,381,1.39,399,1.124,465,2.444,474,1.54,498,3.679,500,2.416,501,2.762,504,3.155,505,2.76,511,3.296,514,2.139,517,2.01,518,2.762,522,1.39,523,2.416,535,2.01,563,1.758,580,2.01,597,2.01,598,2.01,619,1.758,620,2.01,621,2.01,624,2.01,629,2.01,677,2.348,678,3.929,679,4.833,680,2.86,681,3.929,682,3.929,683,3.929,684,3.929,685,2.416,686,2.86,687,2.86,688,3.929,689,2.86,690,3.225,691,2.86,692,2.86,693,3.929,694,3.929,695,2.86,696,2.86,697,2.86,698,2.86,699,2.86,700,2.86,701,2.86,702,2.86,703,2.86,704,2.86,705,2.86,706,2.86,707,2.86,708,2.86,709,2.348,710,2.86,711,2.86,712,2.86,713,2.86,714,3.929,715,3.929,716,2.86,717,2.86]],["title/interfaces/TeExecutor.html",[312,0.829,514,1.578]],["body/interfaces/TeExecutor.html",[0,0.012,1,0.782,2,0.15,3,1.104,4,0.15,5,0.12,7,0.249,9,0.978,10,0.701,11,0.888,12,1.493,17,0.98,18,0.88,29,0.214,30,0.88,33,1.104,34,0.782,36,1.52,38,1.357,40,2.615,41,1.737,42,0.042,43,1.357,44,0.701,49,0.409,50,1.094,51,0.782,56,2.845,57,0.345,61,0.092,62,0.759,64,0.782,65,1.094,69,1.104,71,1.104,75,1.717,76,1.262,79,0.369,83,0.333,84,1.552,88,1.916,91,0.513,100,1.104,102,0.999,103,1.262,104,0.412,113,0.978,114,0.872,120,0.214,123,0.798,124,0.186,131,0.704,135,0.887,139,2.106,146,1.684,155,0.019,156,0.019,163,1.197,167,0.98,169,1.262,173,0.704,174,0.942,176,0.872,178,0.513,180,0.717,185,1.104,190,1.52,203,1.262,211,1.932,222,0.978,223,1.104,224,0.985,230,1.684,249,0.387,251,0.798,266,0.872,293,0.782,308,1.792,312,1.105,316,0.978,328,1.878,346,0.978,352,1.104,354,1.104,363,1.665,381,0.872,399,1.267,438,2.408,439,1.262,440,2.408,441,1.963,442,1.262,454,1.104,465,2.98,468,0.978,474,1.094,480,2.376,497,1.262,498,2.717,499,1.474,500,1.104,501,1.262,502,1.474,504,1.963,505,1.717,506,1.474,507,2.292,508,2.292,509,1.262,510,1.474,511,1.717,513,1.474,514,2.867,516,2.292,517,1.262,518,2.408,519,3.173,520,1.474,521,1.262,522,0.872,523,1.717,524,1.262,525,3.173,526,3.639,527,2.292,528,2.292,529,2.292,530,1.963,531,2.292,532,2.292,533,2.292,534,2.292,535,1.262,536,1.474,537,1.474,538,1.474,539,1.474,540,3.437,541,2.292,542,2.292,543,1.474,544,1.474,545,1.963,546,1.474,547,2.292,548,2.812,549,1.474,550,1.262,551,1.474,552,1.474,553,1.474,554,1.474,555,1.474,556,1.474,557,3.437,558,3.437,559,1.474,560,1.474,561,1.474,562,1.963,563,1.104,564,1.474,565,2.292,566,1.474,567,4.034,568,2.292,569,1.474,570,2.292,571,1.474,572,1.474,573,1.474,574,2.292,575,1.474,576,1.474,577,1.474,578,2.812,579,2.812,580,1.262,581,1.474,582,2.292,583,2.292,584,2.812,585,1.474,586,3.173,587,1.474,588,2.812,589,2.292,590,1.474,591,2.292,592,4.034,593,2.292,594,3.173,595,1.474,596,1.474,597,2.408,598,2.408,599,3.173,600,1.717,601,1.474,602,1.474,603,1.474,604,1.474,605,1.262,606,1.474,607,1.474,608,1.474,609,1.474,610,1.474,611,1.474,612,1.474,613,1.474,614,1.474,615,1.474,616,1.474,617,1.474,618,1.262,619,1.104,620,1.262,621,1.262,622,1.474,623,1.474,624,1.262,625,1.474,626,1.474,627,1.474,628,1.474,629,1.262,630,1.474,631,1.474,632,1.474,633,1.474,634,1.474,635,1.474,636,1.474,637,1.474,638,1.474,639,1.474,640,1.474,641,1.474,642,1.474,643,1.474,644,1.474,645,1.474,646,1.474,647,1.474,648,1.262,649,1.474]],["title/classes/TemplateExtractor.html",[0,0.019,367,1.782]],["body/classes/TemplateExtractor.html",[0,0.037,2,0.293,4,0.293,5,0.234,7,0.488,9,2.454,10,1.074,11,1.035,13,2.454,29,0.419,30,1.157,42,0.042,44,0.922,45,1.347,49,0.538,57,0.354,62,0.902,79,0.414,82,1.378,83,0.647,88,1.959,94,2.771,102,0.902,120,0.538,124,0.3,135,1.432,155,0.031,156,0.031,171,3.073,174,0.637,178,1.005,180,1.157,197,1.422,205,1.24,206,3.412,212,2.771,214,2.771,216,1.378,220,2.471,221,1.914,249,0.488,281,1.378,324,2.459,365,2.471,366,2.885,367,3.058,368,2.885,369,4.306,370,4.306,371,4.306,373,3.496,375,2.885,376,3.699,378,4.556,380,4.083,381,1.708,382,2.454,383,3.699,384,2.885,385,2.885,386,2.885,387,2.885,388,2.885,718,3.515,719,3.515,720,3.515,721,3.515]],["title/injectables/TemplateService.html",[104,0.666,192,1.136]],["body/injectables/TemplateService.html",[0,0.028,2,0.352,4,0.352,5,0.282,7,0.587,10,1.034,29,0.504,42,0.041,44,0.865,45,1.085,49,0.504,52,2.201,57,0.509,79,0.352,83,0.645,102,0.916,104,1.241,120,0.504,124,0.282,155,0.034,156,0.034,157,1.657,162,4.147,163,1.209,164,2.302,171,3.048,174,0.766,180,1.297,192,1.98,213,3.47,321,3.106,382,2.751,722,3.47,723,5.051,724,5.597,725,4.227,726,4.227,727,4.227]],["title/directives/TextCellControlValueAccessor.html",[61,0.06,401,1.263]],["body/directives/TextCellControlValueAccessor.html",[0,0.02,2,0.253,4,0.253,5,0.203,7,0.422,8,1.657,18,1.441,42,0.042,44,1.091,49,0.489,51,1.786,57,0.467,61,0.108,62,0.84,64,1.786,67,1.786,73,1.871,79,0.386,82,1.192,83,0.65,84,0.87,96,2.232,102,0.988,104,0.942,106,2.232,115,1.074,116,1.325,118,2.52,120,0.363,123,0.87,124,0.203,128,2.7,155,0.028,156,0.028,163,1.605,164,2.232,166,2.52,167,1.525,170,2.52,172,2.52,174,0.743,177,1.074,178,1.172,179,2.52,197,0.87,205,1.446,224,1.923,248,1.479,249,0.756,251,0.87,252,1.657,253,2.881,254,2.52,256,2.881,257,2.881,258,3.486,259,2.881,260,3.486,261,2.881,262,2.52,263,2.881,264,2.881,265,2.881,266,1.992,267,2.881,268,2.52,269,1.786,270,2.881,271,2.52,272,2.881,288,1.786,289,1.786,290,1.479,292,1.326,293,1.326,294,2.139,295,2.139,300,2.648,301,1.871,302,1.871,303,1.871,304,1.871,305,1.871,307,1.871,308,0.967,311,1.871,401,2.02,664,1.871,728,4.098,729,4.098,730,3.258,731,4.098,732,2.498,733,3.043,734,3.043,735,4.098,736,3.043,737,4.098,738,3.043]],["title/directives/TypeaheadCellControlValueAccessor.html",[61,0.06,403,1.408]],["body/directives/TypeaheadCellControlValueAccessor.html",[0,0.008,2,0.105,4,0.105,5,0.084,7,0.175,10,0.645,11,0.483,18,0.54,21,1.038,22,2.587,23,1.716,27,1.294,31,3.316,34,0.551,36,1.146,38,1.022,42,0.042,43,1.314,44,1.072,48,0.446,50,0.495,51,0.917,52,0.551,57,0.127,61,0.056,62,0.964,65,1.059,77,1.038,79,0.384,80,2.46,82,0.495,83,0.451,84,1.455,88,1.414,90,1.294,91,0.901,96,1.146,98,1.038,102,0.229,115,0.743,116,0.901,120,0.151,123,1.081,124,0.084,131,0.495,135,1.334,143,0.888,145,0.888,146,0.917,155,0.014,156,0.029,163,0.773,167,0.602,171,1.472,176,0.614,177,0.446,178,0.602,180,0.324,186,1.038,190,1.716,192,1.059,197,1.485,205,0.743,211,0.917,214,0.777,222,0.688,249,0.698,254,1.662,262,0.777,268,0.777,271,0.777,275,1.038,278,2.763,288,1.178,289,1.178,290,0.614,292,0.917,300,1.022,301,0.777,302,0.777,303,0.777,304,0.777,305,0.777,306,1.038,307,0.777,308,1.002,311,0.777,316,0.688,318,2.152,321,0.777,327,1.178,328,1.314,335,0.888,340,0.888,345,1.479,346,1.906,351,1.938,353,1.479,363,0.614,373,1.9,381,0.614,382,0.688,403,1.532,404,1.727,415,1.038,416,1.038,417,1.038,418,1.727,419,1.038,454,0.777,473,0.888,500,0.777,505,1.662,509,1.479,511,2.463,523,1.294,545,2.95,550,1.9,562,4.125,600,2.763,618,0.888,619,0.777,651,0.777,652,1.938,659,0.777,690,1.727,709,2.873,732,1.038,739,1.038,740,2.104,741,3.445,742,2.104,743,2.104,744,2.104,745,2.104,746,2.104,747,2.104,748,1.264,749,3.151,750,2.104,751,1.727,752,1.727,753,1.264,754,1.727,755,1.038,756,1.727,757,2.219,758,1.038,759,3.151,760,1.264,761,1.264,762,1.264,763,1.264,764,1.264,765,1.264,766,1.264,767,2.104,768,2.104,769,1.264,770,1.264,771,1.264,772,1.264,773,1.264,774,1.264,775,1.264,776,1.264,777,1.264,778,1.264,779,1.264,780,1.264,781,1.264,782,1.264,783,1.264,784,1.264,785,1.264,786,1.264,787,1.264,788,1.264,789,1.264,790,1.264,791,1.264,792,1.264,793,1.264,794,1.264,795,1.264,796,1.264,797,1.264,798,1.264,799,1.264,800,1.264,801,1.264,802,1.264,803,1.264,804,1.264,805,1.264,806,1.264,807,1.264,808,1.264,809,2.104,810,1.264,811,1.264,812,1.264,813,1.264,814,2.104,815,2.104,816,1.264,817,1.264,818,1.264,819,1.264,820,1.264,821,2.104,822,1.264,823,1.264,824,1.264,825,1.264,826,1.264,827,1.264,828,2.703,829,1.038,830,3.778,831,2.104,832,1.264,833,3.151,834,2.703,835,2.104,836,1.264,837,1.264,838,1.264,839,1.264,840,2.104,841,2.104,842,4.196,843,2.703,844,2.104,845,1.264,846,2.104,847,1.264,848,1.264,849,1.264,850,1.264,851,1.264,852,2.104,853,1.264,854,1.264,855,1.264,856,1.038,857,1.264,858,1.264,859,2.104,860,3.151,861,1.264,862,2.104,863,2.104,864,1.264,865,1.264,866,2.104,867,1.264,868,2.104,869,1.264,870,3.5,871,1.264,872,1.264,873,3.778,874,1.264,875,1.264,876,2.104,877,2.104,878,2.104,879,2.104,880,2.104,881,1.264,882,2.104,883,1.264,884,1.264,885,2.104,886,1.264,887,1.264,888,1.264,889,1.264,890,1.264,891,1.264,892,1.264,893,3.5,894,2.104,895,1.264,896,1.264,897,1.264,898,2.104,899,1.038,900,1.264,901,1.264,902,2.104,903,1.264,904,1.264,905,1.264,906,1.264,907,1.264,908,3.5,909,1.264,910,1.264,911,1.264,912,1.264,913,2.703,914,1.264,915,1.264,916,1.264,917,2.104,918,2.104,919,1.264,920,1.264,921,2.703,922,1.264,923,1.264,924,1.727,925,1.264,926,2.104,927,1.264,928,1.264,929,1.264,930,2.104,931,1.264,932,1.264,933,1.264,934,1.264,935,1.264,936,1.264,937,2.104,938,2.104,939,2.104,940,3.151,941,2.104,942,2.703,943,2.104,944,4.494,945,3.151,946,2.104,947,1.264,948,2.104,949,2.703,950,2.703,951,2.703,952,2.703,953,2.104,954,1.264,955,1.264,956,1.264,957,1.264,958,1.264,959,1.264,960,1.264,961,1.264,962,1.264,963,1.264,964,2.104,965,2.104,966,2.104,967,2.104,968,2.104,969,2.104,970,1.264,971,1.264,972,1.264,973,1.264,974,2.104,975,1.264,976,1.264,977,2.104,978,3.5,979,2.703,980,1.264,981,1.264,982,1.264,983,1.264,984,1.264,985,1.264,986,1.264,987,1.264,988,1.264,989,1.264,990,1.264,991,1.264,992,2.104,993,2.104,994,1.727,995,1.264,996,1.264,997,1.264,998,1.264,999,1.264,1000,1.264,1001,1.264,1002,1.264,1003,1.264,1004,1.264,1005,2.703,1006,1.264,1007,3.778,1008,2.104,1009,1.264,1010,1.264,1011,1.264,1012,1.264,1013,1.264,1014,1.264,1015,1.264,1016,2.104,1017,1.264,1018,1.264,1019,1.264,1020,1.264,1021,2.703,1022,1.264]],["title/modules/TypeaheadModule.html",[117,1.136,1023,1.782]],["body/modules/TypeaheadModule.html",[0,0.022,2,0.284,4,0.284,5,0.227,7,0.474,10,0.905,23,1.859,42,0.042,57,0.523,62,0.619,79,0.491,80,3.647,115,1.897,116,1.537,117,2.158,119,3.448,120,0.407,123,1.537,124,0.346,155,0.03,156,0.03,181,2.802,277,2.719,288,2.138,289,2.138,291,2.4,292,2.138,339,2.671,389,2.099,403,2.921,648,3.109,651,2.099,652,2.099,657,3.109,658,2.4,661,3.63,671,3.63,741,4.027,751,2.802,752,2.802,754,3.63,755,2.802,756,4.412,757,2.802,758,2.802,1023,3.493,1024,2.802,1025,2.802,1026,2.802,1027,2.802,1028,3.414,1029,4.422,1030,4.905,1031,4.422,1032,4.422,1033,4.422,1034,4.422,1035,3.414,1036,4.422,1037,4.422,1038,3.414,1039,4.422,1040,3.414,1041,3.414,1042,3.414]],["title/coverage.html",[1043,3.255]],["body/coverage.html",[0,0.032,1,1.275,5,0.195,6,2.454,17,0.837,25,1.594,42,0.042,49,0.349,57,0.403,61,0.114,90,1.799,91,0.837,104,1.044,114,1.422,131,1.564,135,0.93,155,0.027,156,0.027,157,1.147,158,2.402,163,0.837,174,0.956,192,1.147,216,1.147,247,1.275,248,2.621,249,0.8,250,2.454,251,1.507,252,2.87,273,2.057,300,1.94,312,1.299,313,1.799,314,2.806,324,1.275,327,1.275,365,2.806,367,1.799,394,1.275,396,1.275,399,0.837,401,1.275,403,1.422,406,2.402,407,2.402,421,2.057,444,2.454,446,2.057,448,2.402,449,2.402,462,1.799,463,2.806,464,2.806,474,1.147,497,2.806,514,1.594,522,1.422,600,3.676,659,2.454,660,2.806,664,2.454,675,2.057,676,2.057,677,2.402,685,3.659,722,2.402,730,2.057,739,2.402,829,3.277,1043,2.402,1044,2.926,1045,2.926,1046,2.402,1047,2.926,1048,2.926,1049,5.394,1050,2.926,1051,5.951,1052,4.543,1053,3.992,1054,2.926,1055,3.992,1056,3.992,1057,3.992,1058,2.926,1059,2.926,1060,2.926,1061,2.926,1062,2.926,1063,3.992,1064,2.926,1065,2.926,1066,2.926,1067,2.926,1068,2.926,1069,4.787,1070,2.402,1071,2.402,1072,2.402,1073,4.703,1074,2.402,1075,2.402,1076,2.402,1077,2.402,1078,3.277,1079,2.402,1080,2.402,1081,2.402,1082,2.402,1083,2.402,1084,2.402,1085,2.402,1086,2.926]],["title/miscellaneous/enumerations.html",[137,2.452,1087,1.485]],["body/miscellaneous/enumerations.html",[6,2.651,29,0.514,41,2.003,42,0.04,57,0.568,75,3.143,128,2.348,137,3.593,138,3.539,139,2.651,140,3.031,141,2.651,143,3.593,144,4.196,145,3.593,146,2.227,155,0.035,156,0.035,173,1.69,248,2.095,249,0.809,521,3.593,522,2.095,530,3.031,563,2.651,605,3.031,1046,4.473,1087,2.651,1088,5.111,1089,5.111,1090,3.539]],["title/index.html",[29,0.346,1091,2.379]],["body/index.html",[0,0.022,17,1.603,23,1.859,42,0.042,61,0.071,104,0.784,115,1.897,116,1.484,117,1.733,123,1.537,124,0.227,155,0.03,156,0.03,157,2.197,192,1.922,216,2.197,247,2.443,288,2.138,289,2.138,292,2.138,312,0.976,324,1.488,327,2.138,339,1.859,363,1.659,389,2.099,394,2.443,396,2.443,399,1.603,401,2.443,403,2.878,650,3.754,651,2.099,652,2.099,653,2.802,654,2.802,655,2.802,656,2.802,657,3.109,658,2.4,1023,3.305,1024,2.802,1025,2.802,1026,2.802,1027,2.802,1091,2.802,1092,3.414,1093,3.414,1094,4.422,1095,3.414]],["title/modules.html",[117,1.554]],["body/modules.html",[42,0.036,117,1.829,155,0.036,156,0.036,650,2.869,856,4.394,1023,2.869,1096,5.353,1097,5.353,1098,5.353]],["title/miscellaneous/variables.html",[685,2.145,1087,1.485]],["body/miscellaneous/variables.html",[6,1.778,17,1.132,29,0.345,42,0.042,43,1.405,49,0.641,90,2.776,91,1.291,114,2.194,115,1.593,116,1.291,123,1.291,135,1.258,136,2.373,155,0.027,156,0.027,157,1.551,174,0.952,192,1.133,216,1.551,247,1.967,248,2.194,249,0.837,250,1.778,251,1.502,252,2.859,273,3.173,281,2.324,288,1.967,289,1.967,292,1.967,300,2.194,308,1.258,351,3.366,394,1.967,396,1.725,399,1.132,401,1.967,421,3.173,444,1.778,446,3.173,659,1.778,660,3.173,664,1.778,675,3.173,676,3.173,685,1.778,730,3.173,899,2.373,924,2.373,994,2.373,1069,3.985,1070,2.373,1071,3.25,1072,3.706,1073,2.373,1074,3.706,1075,3.706,1076,3.706,1077,3.706,1078,4.311,1079,3.706,1080,3.706,1081,2.373,1082,3.25,1083,3.706,1084,2.373,1085,3.706,1087,1.778,1090,2.373,1099,2.891,1100,5.718,1101,2.891,1102,2.891,1103,3.958,1104,2.891,1105,2.891,1106,2.891,1107,2.891,1108,2.891,1109,2.891,1110,2.891,1111,2.891,1112,2.891,1113,2.891,1114,2.891,1115,2.891,1116,3.958,1117,2.891,1118,2.891,1119,2.891,1120,2.891,1121,2.891,1122,3.958,1123,3.958,1124,3.958,1125,3.958]]],"invertedIndex":[["",{"_index":42,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/OnInitDirective.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"injectables/TemplateService.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":600,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"coverage.html":{}}}],["0/1",{"_index":1051,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1067,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1062,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":363,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"index.html":{}}}],["1/1",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1068,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1059,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1065,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1063,"title":{},"body":{"coverage.html":{}}}],["10/17",{"_index":1048,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1049,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":418,"title":{},"body":{"classes/KeyboardNavigator.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["2",{"_index":1092,"title":{},"body":{"index.html":{}}}],["2/2",{"_index":1050,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":829,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{},"coverage.html":{}}}],["25",{"_index":1064,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":419,"title":{},"body":{"classes/KeyboardNavigator.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["3",{"_index":1094,"title":{},"body":{"index.html":{}}}],["3/3",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":1054,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1058,"title":{},"body":{"coverage.html":{}}}],["38",{"_index":415,"title":{},"body":{"classes/KeyboardNavigator.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["4",{"_index":1095,"title":{},"body":{"index.html":{}}}],["4/4",{"_index":1066,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":416,"title":{},"body":{"classes/KeyboardNavigator.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["5",{"_index":804,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["5/7",{"_index":1061,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1053,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":1047,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":1060,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1055,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1093,"title":{},"body":{"index.html":{}}}],["9",{"_index":417,"title":{},"body":{"classes/KeyboardNavigator.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["_",{"_index":735,"title":{},"body":{"directives/TextCellControlValueAccessor.html":{}}}],["_action",{"_index":578,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["_blocknavig",{"_index":544,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["_cell",{"_index":698,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["_contain",{"_index":810,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["_controlvalu",{"_index":1001,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["_controlvalue.tostring().tolowercas",{"_index":1002,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["_match",{"_index":813,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["_onchange(",{"_index":872,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["_outsideclicklisten",{"_index":819,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["_subscript",{"_index":818,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["_typeahead",{"_index":817,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["a.indexof(v",{"_index":1010,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["absoluteidx",{"_index":586,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["abstract",{"_index":8,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/DateCellControlValueAccessor.html":{},"classes/KeyboardNavigator.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["abstractnavig",{"_index":1,"title":{"classes/AbstractNavigator.html":{}},"body":{"classes/AbstractNavigator.html":{},"classes/KeyboardNavigator.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"interfaces/TeExecutor.html":{},"coverage.html":{}}}],["abstractnavigator:29",{"_index":424,"title":{},"body":{"classes/KeyboardNavigator.html":{}}}],["abstractnavigator:36",{"_index":425,"title":{},"body":{"classes/KeyboardNavigator.html":{}}}],["abstractnavigator]{@link",{"_index":426,"title":{},"body":{"classes/KeyboardNavigator.html":{}}}],["abstracttablecel",{"_index":163,"title":{},"body":{"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"injectables/TemplateService.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"coverage.html":{}}}],["abstracttablecell#constructor",{"_index":229,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["abstracttablecell#formatcel",{"_index":357,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["abstracttablecell]{@link",{"_index":219,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["accept",{"_index":743,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["access",{"_index":110,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["accessor",{"_index":333,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["accessor.direct",{"_index":665,"title":{},"body":{"modules/TableEditorModule.html":{}}}],["accessor.directive.t",{"_index":252,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accessor.directive.ts:34",{"_index":287,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{}}}],["accessors/abstract",{"_index":522,"title":{},"body":{"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["accessors/d",{"_index":250,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"modules/TableEditorModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accessors/numb",{"_index":444,"title":{},"body":{"directives/NumberCellControlValueAccessor.html":{},"modules/TableEditorModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accessors/text",{"_index":664,"title":{},"body":{"modules/TableEditorModule.html":{},"directives/TextCellControlValueAccessor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["acquir",{"_index":366,"title":{},"body":{"components/InputTemplateComponent.html":{},"classes/TemplateExtractor.html":{}}}],["action",{"_index":40,"title":{},"body":{"classes/AbstractNavigator.html":{},"classes/KeyboardNavigator.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["action]{@link",{"_index":478,"title":{},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{}}}],["actiongener",{"_index":414,"title":{},"body":{"classes/KeyboardNavigator.html":{}}}],["actiongenerator(ev",{"_index":89,"title":{},"body":{"classes/AbstractNavigator.html":{},"classes/KeyboardNavigator.html":{}}}],["actionpars",{"_index":39,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["actionparser(act",{"_index":577,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["activ",{"_index":878,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["actual_compon",{"_index":405,"title":{},"body":{"components/InputTemplateComponent.html":{}}}],["ad",{"_index":113,"title":{},"body":{"classes/AbstractNavigator.html":{},"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["add",{"_index":921,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["adjust",{"_index":742,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["aftercontentinit",{"_index":504,"title":{},"body":{"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{}}}],["afterviewinit",{"_index":380,"title":{},"body":{"components/InputTemplateComponent.html":{},"classes/TemplateExtractor.html":{}}}],["allow",{"_index":13,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"classes/TemplateExtractor.html":{}}}],["along",{"_index":684,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["anchor",{"_index":723,"title":{},"body":{"injectables/TemplateService.html":{}}}],["anchordirect",{"_index":157,"title":{"directives/AnchorDirective.html":{}},"body":{"directives/AnchorDirective.html":{},"components/InputTemplateComponent.html":{},"modules/TableEditorModule.html":{},"injectables/TemplateService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["anchordirective#constructor",{"_index":225,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["anchordirective#resolvetempl",{"_index":227,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["anchordirective.inputtemplatecomponenttemplatepromis",{"_index":237,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["anchordirective.inputtemplatecomponenttemplatepromise.then",{"_index":241,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["angular",{"_index":106,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["angular/common",{"_index":291,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"modules/TableEditorModule.html":{},"modules/TypeaheadModule.html":{}}}],["angular/cor",{"_index":120,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/OnInitDirective.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"injectables/TemplateService.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{}}}],["angular/form",{"_index":290,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"modules/TableEditorModule.html":{},"directives/TableEditorRowDirective.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["anim",{"_index":929,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["anoth",{"_index":261,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["any(this)._compositionend($event.target.valu",{"_index":789,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["any(this)._compositionstart",{"_index":787,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["any(this)._handleinput($event.target.valu",{"_index":783,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["any(this).onchange($event.target.valu",{"_index":733,"title":{},"body":{"directives/TextCellControlValueAccessor.html":{}}}],["any).contains(e.target",{"_index":933,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["any).path.includes(this.tableelementref.nativeel",{"_index":92,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["append",{"_index":262,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["applic",{"_index":326,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["appropi",{"_index":99,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["array",{"_index":328,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["arrow",{"_index":341,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["assign",{"_index":331,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["associ",{"_index":67,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/DateCellControlValueAccessor.html":{},"classes/KeyboardNavigator.html":{},"directives/NumberCellControlValueAccessor.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["assur",{"_index":602,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["async",{"_index":186,"title":{},"body":{"directives/AnchorDirective.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["asyncact",{"_index":963,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["attach",{"_index":98,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["attach(typeaheadcontainercompon",{"_index":919,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["attribrut",{"_index":510,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["attribut",{"_index":329,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorRowDirective.html":{}}}],["avail",{"_index":209,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["await",{"_index":245,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["awar",{"_index":337,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["base",{"_index":9,"title":{},"body":{"classes/AbstractNavigator.html":{},"components/InputTemplateComponent.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{}}}],["be",{"_index":475,"title":{},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{}}}],["becom",{"_index":208,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["between",{"_index":15,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{}}}],["bind",{"_index":509,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["blank",{"_index":526,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["blocknavig",{"_index":546,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["blocknavigation(valu",{"_index":549,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["blocksubscrib",{"_index":707,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["blur",{"_index":784,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["bodi",{"_index":922,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["boolean",{"_index":550,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["bootstrap",{"_index":652,"title":{},"body":{"modules/TableEditorModule.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{},"index.html":{}}}],["bootstrap/#/typeahead",{"_index":775,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["bootstrap/issues/1894",{"_index":779,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["both",{"_index":525,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["bottom",{"_index":815,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["break",{"_index":618,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["brows",{"_index":1098,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1096,"title":{},"body":{"modules.html":{}}}],["bs",{"_index":782,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["bs3",{"_index":1124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bs4",{"_index":1125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["c.cellifi",{"_index":717,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["c.disabl",{"_index":582,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["c.inputifi",{"_index":716,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["c.valueaccessor",{"_index":701,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["call",{"_index":55,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"classes/KeyboardNavigator.html":{},"directives/TableEditorRowDirective.html":{}}}],["callback",{"_index":210,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["case",{"_index":832,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["caus",{"_index":74,"title":{},"body":{"classes/AbstractNavigator.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{}}}],["cell",{"_index":174,"title":{},"body":{"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"directives/NumberCellControlValueAccessor.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"injectables/TemplateService.html":{},"directives/TextCellControlValueAccessor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cell.t",{"_index":1046,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["cell.teblocknavigationeventemitter.subscrib",{"_index":708,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["cell.tecellclick.subscribe((triggeredcel",{"_index":704,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["cell]{@link",{"_index":727,"title":{},"body":{"injectables/TemplateService.html":{}}}],["cellcontrolvalueaccessor",{"_index":688,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["celldisabledst",{"_index":521,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"miscellaneous/enumerations.html":{}}}],["celldisabledstate.dis",{"_index":614,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["celldisabledstate.en",{"_index":583,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["cellel",{"_index":349,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["cellelement.offsetheight",{"_index":359,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["cellelement.offsetleft",{"_index":362,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["cellelement.offsettop",{"_index":361,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["cellelement.offsetwidth",{"_index":360,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["cellidx",{"_index":584,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["cellifi",{"_index":563,"title":{},"body":{"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"miscellaneous/enumerations.html":{}}}],["cellstat",{"_index":1089,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cellvalueformatt",{"_index":348,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["cellvalueformatter(valu",{"_index":307,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["certain",{"_index":60,"title":{},"body":{"classes/AbstractNavigator.html":{},"classes/KeyboardNavigator.html":{}}}],["cfr",{"_index":194,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["chang",{"_index":131,"title":{},"body":{"classes/AbstractNavigator.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"coverage.html":{}}}],["changedetect",{"_index":823,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["changedetectorref",{"_index":747,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["changemodel(match",{"_index":900,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["changessubscript",{"_index":637,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["check",{"_index":22,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["ci",{"_index":822,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractNavigator.html":{},"classes/KeyboardNavigator.html":{},"classes/RowChangeEvent.html":{},"classes/TemplateExtractor.html":{}},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/OnInitDirective.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"injectables/TemplateService.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{},"coverage.html":{},"index.html":{}}}],["click",{"_index":77,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["clicksubscrib",{"_index":703,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["cluster_tableeditormodul",{"_index":653,"title":{},"body":{"modules/TableEditorModule.html":{},"index.html":{}}}],["cluster_tableeditormodule_declar",{"_index":654,"title":{},"body":{"modules/TableEditorModule.html":{},"index.html":{}}}],["cluster_tableeditormodule_export",{"_index":655,"title":{},"body":{"modules/TableEditorModule.html":{},"index.html":{}}}],["cluster_tableeditormodule_provid",{"_index":656,"title":{},"body":{"modules/TableEditorModule.html":{},"index.html":{}}}],["cluster_typeaheadmodul",{"_index":1024,"title":{},"body":{"modules/TypeaheadModule.html":{},"index.html":{}}}],["cluster_typeaheadmodule_declar",{"_index":1025,"title":{},"body":{"modules/TypeaheadModule.html":{},"index.html":{}}}],["cluster_typeaheadmodule_export",{"_index":1027,"title":{},"body":{"modules/TypeaheadModule.html":{},"index.html":{}}}],["cluster_typeaheadmodule_typeaheadcellcontrolvalueaccessor_provid",{"_index":1026,"title":{},"body":{"modules/TypeaheadModule.html":{},"index.html":{}}}],["code",{"_index":24,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/OnInitDirective.html":{}}}],["combin",{"_index":501,"title":{},"body":{"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{}}}],["command",{"_index":528,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["commonmodul",{"_index":671,"title":{},"body":{"modules/TableEditorModule.html":{},"modules/TypeaheadModule.html":{}}}],["commun",{"_index":162,"title":{},"body":{"directives/AnchorDirective.html":{},"injectables/TemplateService.html":{}}}],["compon",{"_index":324,"title":{"components/InputTemplateComponent.html":{}},"body":{"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"injectables/TableEditorConfig.html":{},"classes/TemplateExtractor.html":{},"coverage.html":{},"index.html":{}}}],["component_templ",{"_index":391,"title":{},"body":{"components/InputTemplateComponent.html":{}}}],["componentfactoryresolv",{"_index":189,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["componentload",{"_index":750,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["componentloaderfactori",{"_index":754,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{}}}],["compositionend",{"_index":788,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["compositionstart",{"_index":786,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["config",{"_index":821,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["config.cellvalueformatt",{"_index":343,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["configur",{"_index":320,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["consol",{"_index":1041,"title":{},"body":{"modules/TypeaheadModule.html":{}}}],["const",{"_index":84,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"classes/KeyboardNavigator.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["constructor",{"_index":34,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/OnInitDirective.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["constructor(cfr",{"_index":188,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["constructor(el",{"_index":455,"title":{},"body":{"directives/OnInitDirective.html":{}}}],["constructor(prevrow",{"_index":479,"title":{},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{}}}],["constructor(priv",{"_index":232,"title":{},"body":{"directives/AnchorDirective.html":{},"directives/OnInitDirective.html":{},"directives/TableEditorRowDirective.html":{}}}],["constructor(render",{"_index":35,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["constructor]{@link",{"_index":231,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["contain",{"_index":353,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["container.compon",{"_index":758,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{}}}],["contentchildren",{"_index":517,"title":{},"body":{"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{}}}],["contentchildren(ngcontrol",{"_index":697,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["contentchildren(tableeditorrowdirect",{"_index":551,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["context",{"_index":342,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorRowDirective.html":{}}}],["contexttyp",{"_index":472,"title":{},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{}}}],["control",{"_index":251,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"directives/NumberCellControlValueAccessor.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TextCellControlValueAccessor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["controlvalueaccessor",{"_index":253,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["convert",{"_index":576,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["core/.../abstract",{"_index":1088,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["core/.../d",{"_index":1104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["core/.../navigator.t",{"_index":1090,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["core/.../numb",{"_index":1105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["core/.../t",{"_index":1103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["core/.../text",{"_index":1106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["core/src/control",{"_index":248,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["core/src/navigators/keyboard",{"_index":406,"title":{},"body":{"classes/KeyboardNavigator.html":{},"coverage.html":{}}}],["core/src/navigators/navigator.t",{"_index":6,"title":{},"body":{"classes/AbstractNavigator.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["core/src/navigators/navigator.ts:18",{"_index":46,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["core/src/navigators/navigator.ts:29",{"_index":54,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["core/src/navigators/navigator.ts:36",{"_index":63,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["core/src/t",{"_index":659,"title":{},"body":{"modules/TableEditorModule.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["core/src/table/row.directive.t",{"_index":677,"title":{},"body":{"directives/TableEditorRowDirective.html":{},"coverage.html":{}}}],["core/src/table/row.directive.ts:26",{"_index":686,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["core/src/table/row.directive.ts:30",{"_index":687,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["core/src/table/table.directive.t",{"_index":497,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"coverage.html":{}}}],["core/src/table/table.directive.ts:49",{"_index":512,"title":{},"body":{"directives/TableEditorDirective.html":{}}}],["core/src/table/table.directive.ts:91",{"_index":515,"title":{},"body":{"directives/TableEditorDirective.html":{}}}],["core/src/utils/anchor.directive.t",{"_index":158,"title":{},"body":{"directives/AnchorDirective.html":{},"coverage.html":{}}}],["core/src/utils/anchor.directive.ts:19",{"_index":199,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["core/src/utils/anchor.directive.ts:20",{"_index":215,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["core/src/utils/anchor.directive.ts:24",{"_index":204,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["core/src/utils/anchor.directive.ts:29",{"_index":193,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["core/src/utils/anchor.directive.ts:44",{"_index":195,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["core/src/utils/config.service.t",{"_index":314,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{},"coverage.html":{}}}],["core/src/utils/config.service.ts:21",{"_index":495,"title":{},"body":{"injectables/TableEditorConfig.html":{}}}],["core/src/utils/config.service.ts:28",{"_index":494,"title":{},"body":{"injectables/TableEditorConfig.html":{}}}],["core/src/utils/config.service.ts:34",{"_index":493,"title":{},"body":{"injectables/TableEditorConfig.html":{}}}],["core/src/utils/input.component.t",{"_index":365,"title":{},"body":{"components/InputTemplateComponent.html":{},"classes/TemplateExtractor.html":{},"coverage.html":{}}}],["core/src/utils/input.component.ts:11",{"_index":718,"title":{},"body":{"classes/TemplateExtractor.html":{}}}],["core/src/utils/input.component.ts:12",{"_index":719,"title":{},"body":{"classes/TemplateExtractor.html":{}}}],["core/src/utils/input.component.ts:13",{"_index":720,"title":{},"body":{"classes/TemplateExtractor.html":{}}}],["core/src/utils/input.component.ts:16",{"_index":721,"title":{},"body":{"classes/TemplateExtractor.html":{}}}],["core/src/utils/on",{"_index":448,"title":{},"body":{"directives/OnInitDirective.html":{},"coverage.html":{}}}],["core/src/utils/row",{"_index":463,"title":{},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"coverage.html":{}}}],["core/src/utils/template.service.t",{"_index":722,"title":{},"body":{"injectables/TemplateService.html":{},"coverage.html":{}}}],["core/src/utils/template.service.ts:8",{"_index":725,"title":{},"body":{"injectables/TemplateService.html":{}}}],["coverag",{"_index":1043,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":170,"title":{},"body":{"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["ctor(render",{"_index":555,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["current",{"_index":127,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["currentcel",{"_index":541,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["currentcells.indexof(this.currentcel",{"_index":585,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["currentcells[nextcellidx",{"_index":596,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["currentrow",{"_index":540,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["currentrow.cells.filter(c",{"_index":581,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["currentrow.cells.indexof(this.currentcel",{"_index":587,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["currentrow.cells.length",{"_index":601,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["currentrows.indexof(currentrow",{"_index":590,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["currentrows[nextrowidx",{"_index":607,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["custom",{"_index":72,"title":{},"body":{"classes/AbstractNavigator.html":{},"interfaces/HTMLInputElementStyle.html":{},"classes/KeyboardNavigator.html":{},"injectables/TableEditorConfig.html":{}}}],["date",{"_index":275,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["date(valu",{"_index":306,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["datecellcontrolvalueaccessor",{"_index":247,"title":{"directives/DateCellControlValueAccessor.html":{}},"body":{"directives/DateCellControlValueAccessor.html":{},"components/InputTemplateComponent.html":{},"modules/TableEditorModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dateformat",{"_index":299,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{}}}],["dd",{"_index":284,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{}}}],["debouncetim",{"_index":764,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["debouncetime(this.typeaheadwaitm",{"_index":967,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["declar",{"_index":339,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{},"modules/TableEditorModule.html":{},"modules/TypeaheadModule.html":{},"index.html":{}}}],["decor",{"_index":375,"title":{},"body":{"components/InputTemplateComponent.html":{},"classes/TemplateExtractor.html":{}}}],["default",{"_index":281,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"classes/RowChangeEvent.html":{},"injectables/TableEditorConfig.html":{},"classes/TemplateExtractor.html":{},"miscellaneous/variables.html":{}}}],["default_alias",{"_index":1085,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":45,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/OnInitDirective.html":{},"classes/RowChangeEvent.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"classes/TemplateExtractor.html":{},"injectables/TemplateService.html":{}}}],["delet",{"_index":236,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["demo/#/examples/bas",{"_index":223,"title":{},"body":{"directives/AnchorDirective.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{}}}],["demo/#/examples/support",{"_index":780,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["depend",{"_index":651,"title":{},"body":{"modules/TableEditorModule.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{},"index.html":{}}}],["dependencies/compon",{"_index":751,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{}}}],["dependencies/positioning/ng",{"_index":1070,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dependencies/positioning/positioning.servic",{"_index":1040,"title":{},"body":{"modules/TypeaheadModule.html":{}}}],["dependencies/typeahead",{"_index":757,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{}}}],["dependencies/utils/facade/browser.t",{"_index":1073,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dependencies/utils/them",{"_index":1081,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dependencies/utils/triggers.t",{"_index":1084,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["descript",{"_index":7,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/OnInitDirective.html":{},"classes/RowChangeEvent.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"injectables/TemplateService.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{}}}],["desir",{"_index":277,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{},"modules/TypeaheadModule.html":{}}}],["destroy",{"_index":103,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["detail",{"_index":27,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/TableEditorDirective.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["details]{@link",{"_index":538,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["di",{"_index":129,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["diff",{"_index":640,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["diff.foreachaddeditem(r",{"_index":642,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["differ",{"_index":542,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["dimens",{"_index":356,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["direct",{"_index":61,"title":{"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/OnInitDirective.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/OnInitDirective.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"coverage.html":{},"index.html":{}}}],["directive]{@link",{"_index":228,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["disabl",{"_index":605,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"miscellaneous/enumerations.html":{}}}],["discuss",{"_index":73,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["discussion]{@link",{"_index":294,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["display",{"_index":334,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["do",{"_index":986,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["document",{"_index":300,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["documentation/classes/abstractnavigator.html#readm",{"_index":149,"title":{},"body":{"classes/AbstractNavigator.html":{},"classes/KeyboardNavigator.html":{}}}],["documentation/classes/keyboardnavigator.html#sourc",{"_index":151,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["documentation/injectables/abstracttablecell.html#sourc",{"_index":221,"title":{},"body":{"directives/AnchorDirective.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"injectables/TableEditorConfig.html":{},"classes/TemplateExtractor.html":{}}}],["dom",{"_index":95,"title":{},"body":{"classes/AbstractNavigator.html":{},"components/InputTemplateComponent.html":{}}}],["don't",{"_index":852,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["done",{"_index":96,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["down",{"_index":145,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"miscellaneous/enumerations.html":{}}}],["driven",{"_index":450,"title":{},"body":{"directives/OnInitDirective.html":{}}}],["dropup",{"_index":809,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["dure",{"_index":452,"title":{},"body":{"directives/OnInitDirective.html":{}}}],["dynam",{"_index":169,"title":{},"body":{"directives/AnchorDirective.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["e",{"_index":846,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["e.keycod",{"_index":873,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["e.preventdefault",{"_index":898,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["e.target.innertext",{"_index":864,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["e.target.textcont",{"_index":863,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["e.target.valu",{"_index":862,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["each",{"_index":940,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["easier",{"_index":647,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["editor",{"_index":58,"title":{},"body":{"classes/AbstractNavigator.html":{},"interfaces/HTMLInputElementStyle.html":{},"classes/KeyboardNavigator.html":{},"injectables/TableEditorConfig.html":{}}}],["editor.modul",{"_index":771,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["editor.module.t",{"_index":660,"title":{},"body":{"modules/TableEditorModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor/cor",{"_index":770,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["editor/extra",{"_index":1030,"title":{},"body":{"modules/TypeaheadModule.html":{}}}],["editor/extrasand",{"_index":1035,"title":{},"body":{"modules/TypeaheadModule.html":{}}}],["el",{"_index":457,"title":{},"body":{"directives/OnInitDirective.html":{}}}],["element",{"_index":167,"title":{},"body":{"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"directives/NumberCellControlValueAccessor.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["elementref",{"_index":38,"title":{},"body":{"classes/AbstractNavigator.html":{},"classes/KeyboardNavigator.html":{},"directives/OnInitDirective.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["emit",{"_index":469,"title":{},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{}}}],["en",{"_index":286,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{}}}],["enabl",{"_index":530,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"miscellaneous/enumerations.html":{}}}],["enter",{"_index":876,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["entrycompon",{"_index":661,"title":{},"body":{"modules/TableEditorModule.html":{},"modules/TypeaheadModule.html":{}}}],["enum",{"_index":142,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["enumer",{"_index":137,"title":{"miscellaneous/enumerations.html":{}},"body":{"classes/AbstractNavigator.html":{},"miscellaneous/enumerations.html":{}}}],["error",{"_index":534,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["eval('nextcellidx",{"_index":595,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["eval('nextrowidx",{"_index":606,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["event",{"_index":91,"title":{},"body":{"classes/AbstractNavigator.html":{},"classes/KeyboardNavigator.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["event.preventdefault",{"_index":432,"title":{},"body":{"classes/KeyboardNavigator.html":{}}}],["event.shiftkey",{"_index":437,"title":{},"body":{"classes/KeyboardNavigator.html":{}}}],["event.stoppropag",{"_index":433,"title":{},"body":{"classes/KeyboardNavigator.html":{}}}],["event.t",{"_index":464,"title":{},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"coverage.html":{}}}],["event.ts:11",{"_index":490,"title":{},"body":{"classes/RowChangeEvent.html":{}}}],["event.ts:13",{"_index":489,"title":{},"body":{"classes/RowChangeEvent.html":{}}}],["event.ts:9",{"_index":491,"title":{},"body":{"classes/RowChangeEvent.html":{}}}],["event.which",{"_index":436,"title":{},"body":{"classes/KeyboardNavigator.html":{}}}],["eventemitt",{"_index":511,"title":{},"body":{"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["eventlisten",{"_index":1074,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventtarget",{"_index":1075,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["everyth",{"_index":648,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"modules/TypeaheadModule.html":{}}}],["exampl",{"_index":176,"title":{},"body":{"directives/AnchorDirective.html":{},"classes/RowChangeEvent.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["examples]{@link",{"_index":222,"title":{},"body":{"directives/AnchorDirective.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["excel",{"_index":412,"title":{},"body":{"classes/KeyboardNavigator.html":{}}}],["execut",{"_index":32,"title":{},"body":{"classes/AbstractNavigator.html":{},"classes/KeyboardNavigator.html":{}}}],["execute(act",{"_index":53,"title":{},"body":{"classes/AbstractNavigator.html":{},"classes/KeyboardNavigator.html":{}}}],["executefor(target",{"_index":566,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["executor",{"_index":580,"title":{},"body":{"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{}}}],["executor.cel",{"_index":597,"title":{},"body":{"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{}}}],["executor.row",{"_index":598,"title":{},"body":{"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{}}}],["exit",{"_index":75,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"miscellaneous/enumerations.html":{}}}],["export",{"_index":124,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/OnInitDirective.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"injectables/TemplateService.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{},"index.html":{}}}],["exporta",{"_index":781,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["expos",{"_index":212,"title":{},"body":{"directives/AnchorDirective.html":{},"components/InputTemplateComponent.html":{},"directives/TableEditorRowDirective.html":{},"classes/TemplateExtractor.html":{}}}],["extend",{"_index":82,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/DateCellControlValueAccessor.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/NumberCellControlValueAccessor.html":{},"classes/TemplateExtractor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["extra",{"_index":987,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["extract",{"_index":214,"title":{},"body":{"directives/AnchorDirective.html":{},"components/InputTemplateComponent.html":{},"classes/TemplateExtractor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["extras/.../browser.t",{"_index":1100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extras/.../ng",{"_index":1102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extras/.../them",{"_index":1101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extras/.../triggers.t",{"_index":1099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extras/src/typeahead/typeahead",{"_index":1069,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["extras/src/typeahead/typeahead.directive.t",{"_index":739,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{},"coverage.html":{}}}],["extras/src/typeahead/typeahead.module.t",{"_index":1028,"title":{},"body":{"modules/TypeaheadModule.html":{}}}],["fals",{"_index":545,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["field",{"_index":473,"title":{},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/OnInitDirective.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"injectables/TemplateService.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{},"coverage.html":{}}}],["filter",{"_index":765,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["filter((opt",{"_index":974,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["filter((v",{"_index":1009,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["finalizeasynccall(match",{"_index":997,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["fire",{"_index":107,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/OnInitDirective.html":{}}}],["firefox",{"_index":857,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["first",{"_index":529,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["firstli",{"_index":161,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["fix",{"_index":885,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["fn",{"_index":737,"title":{},"body":{"directives/TextCellControlValueAccessor.html":{}}}],["focu",{"_index":899,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{},"miscellaneous/variables.html":{}}}],["focusev",{"_index":839,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["focusin",{"_index":1110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["focusout",{"_index":1111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["follow",{"_index":118,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["forget",{"_index":256,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["fork",{"_index":740,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["form",{"_index":896,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["format",{"_index":276,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{}}}],["formatd",{"_index":280,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{}}}],["formatdate(valu",{"_index":309,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{}}}],["formatdate]{@link",{"_index":296,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{}}}],["formsmodul",{"_index":662,"title":{},"body":{"modules/TableEditorModule.html":{}}}],["forroot",{"_index":1042,"title":{},"body":{"modules/TypeaheadModule.html":{}}}],["forwardref",{"_index":288,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["from(this.typeahead).pip",{"_index":973,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["function",{"_index":52,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"interfaces/HTMLInputElementStyle.html":{},"classes/KeyboardNavigator.html":{},"injectables/TableEditorConfig.html":{},"injectables/TemplateService.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["gc",{"_index":1076,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getoptionfromobject(ngcontrolvalu",{"_index":1020,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["gettemplateref",{"_index":370,"title":{},"body":{"components/InputTemplateComponent.html":{},"classes/TemplateExtractor.html":{}}}],["getvaluefromobject",{"_index":761,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["getvaluefromobject(opt",{"_index":978,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["global",{"_index":319,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["group",{"_index":1007,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["groups.foreach((group",{"_index":1011,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["guessedvers",{"_index":1083,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["guid",{"_index":71,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{}}}],["happen",{"_index":140,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"miscellaneous/enumerations.html":{}}}],["hasmatch",{"_index":1018,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["header",{"_index":1012,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["height",{"_index":315,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["here",{"_index":985,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["hide",{"_index":955,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["histori",{"_index":1077,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["hook",{"_index":108,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["host",{"_index":732,"title":{},"body":{"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["hostlisten",{"_index":748,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["hostlistener('blur",{"_index":887,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["hostlistener('click",{"_index":882,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["hostlistener('focu",{"_index":883,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["hostlistener('input",{"_index":848,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["hostlistener('keydown",{"_index":890,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["hostlistener('keyup",{"_index":871,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["hover",{"_index":1107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":293,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"components/InputTemplateComponent.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["htmlinputel",{"_index":207,"title":{},"body":{"directives/AnchorDirective.html":{},"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["htmlinputelementstyl",{"_index":313,"title":{"interfaces/HTMLInputElementStyle.html":{}},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{},"coverage.html":{}}}],["htmltablecellel",{"_index":269,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"directives/NumberCellControlValueAccessor.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["htmltablecellelement`",{"_index":535,"title":{},"body":{"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{}}}],["htmltableel",{"_index":175,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["htmltablel",{"_index":680,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["htmltablelement`",{"_index":691,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["htmltablerowel",{"_index":503,"title":{},"body":{"directives/TableEditorDirective.html":{}}}],["htmltablerowelement`",{"_index":536,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["https://angular.io/api/common/formatd",{"_index":297,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{}}}],["https://github.com/angular/angular/issues/9035",{"_index":295,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["https://github.com/valor",{"_index":777,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["https://valor",{"_index":773,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["i.",{"_index":340,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["identifi",{"_index":1044,"title":{},"body":{"coverage.html":{}}}],["ie",{"_index":858,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["ignor",{"_index":562,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["implement",{"_index":11,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/OnInitDirective.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["import",{"_index":79,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/OnInitDirective.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"injectables/TemplateService.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{}}}],["improv",{"_index":937,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["index",{"_index":29,"title":{"index.html":{}},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/OnInitDirective.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"injectables/TemplateService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexoper",{"_index":594,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/OnInitDirective.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"injectables/TemplateService.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{}}}],["inform",{"_index":28,"title":{},"body":{"classes/AbstractNavigator.html":{},"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["inherit",{"_index":94,"title":{},"body":{"classes/AbstractNavigator.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"classes/TemplateExtractor.html":{}}}],["init.direct",{"_index":670,"title":{},"body":{"modules/TableEditorModule.html":{}}}],["init.directive.t",{"_index":449,"title":{},"body":{"directives/OnInitDirective.html":{},"coverage.html":{}}}],["init.directive.ts:10",{"_index":458,"title":{},"body":{"directives/OnInitDirective.html":{}}}],["init.directive.ts:8",{"_index":456,"title":{},"body":{"directives/OnInitDirective.html":{}}}],["inject",{"_index":104,"title":{"injectables/TableEditorConfig.html":{},"injectables/TemplateService.html":{}},"body":{"classes/AbstractNavigator.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"directives/NumberCellControlValueAccessor.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"injectables/TemplateService.html":{},"directives/TextCellControlValueAccessor.html":{},"coverage.html":{},"index.html":{}}}],["inject(te_navig",{"_index":552,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["injectiontoken",{"_index":134,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["injectiontoken('tenavig",{"_index":136,"title":{},"body":{"classes/AbstractNavigator.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":749,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["inner",{"_index":165,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["innertempl",{"_index":369,"title":{},"body":{"components/InputTemplateComponent.html":{},"classes/TemplateExtractor.html":{}}}],["innertext",{"_index":855,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["input",{"_index":197,"title":{},"body":{"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/OnInitDirective.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorRowDirective.html":{},"classes/TemplateExtractor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["input('d",{"_index":298,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{}}}],["input('tecontext",{"_index":692,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["input('teoninit",{"_index":460,"title":{},"body":{"directives/OnInitDirective.html":{}}}],["input.compon",{"_index":217,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["inputcompon",{"_index":201,"title":{},"body":{"directives/AnchorDirective.html":{},"directives/OnInitDirective.html":{}}}],["inputcomponent]{@link",{"_index":459,"title":{},"body":{"directives/OnInitDirective.html":{}}}],["inputelementformatt",{"_index":492,"title":{},"body":{"injectables/TableEditorConfig.html":{}}}],["inputelementformatter(cellel",{"_index":358,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["inputifi",{"_index":173,"title":{},"body":{"directives/AnchorDirective.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"miscellaneous/enumerations.html":{}}}],["inputify]{@link",{"_index":220,"title":{},"body":{"directives/AnchorDirective.html":{},"components/InputTemplateComponent.html":{},"classes/TemplateExtractor.html":{}}}],["inputitif",{"_index":496,"title":{},"body":{"injectables/TableEditorConfig.html":{}}}],["inputitifed]{@link",{"_index":330,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["inputtemplatecompon",{"_index":216,"title":{"components/InputTemplateComponent.html":{}},"body":{"directives/AnchorDirective.html":{},"components/InputTemplateComponent.html":{},"modules/TableEditorModule.html":{},"classes/TemplateExtractor.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["inputtemplatecomponentref",{"_index":238,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["inputtemplatecomponentref.destroy",{"_index":242,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["inputtemplatecomponentref.instance.gettemplateref().topromis",{"_index":240,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["inputtemplatecomponenttemplatepromis",{"_index":182,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["inputtemplatecomponenttemplateref",{"_index":183,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["inputvalueformatter(valu",{"_index":311,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["insert",{"_index":260,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["insid",{"_index":258,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["inspect",{"_index":200,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["instal",{"_index":1033,"title":{},"body":{"modules/TypeaheadModule.html":{}}}],["instanc",{"_index":68,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"interfaces/HTMLInputElementStyle.html":{},"classes/KeyboardNavigator.html":{},"injectables/TableEditorConfig.html":{}}}],["instanceof",{"_index":835,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["instanti",{"_index":64,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/DateCellControlValueAccessor.html":{},"classes/KeyboardNavigator.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["instead",{"_index":744,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["instruct",{"_index":56,"title":{},"body":{"classes/AbstractNavigator.html":{},"classes/KeyboardNavigator.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["interact",{"_index":14,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["interfac",{"_index":312,"title":{"interfaces/HTMLInputElementStyle.html":{},"interfaces/RowChangeContext.html":{},"interfaces/TeExecutor.html":{}},"body":{"interfaces/HTMLInputElementStyle.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"coverage.html":{},"index.html":{}}}],["interface]{@link",{"_index":352,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["intern",{"_index":102,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"components/InputTemplateComponent.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/OnInitDirective.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"injectables/TemplateService.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["interpret",{"_index":527,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["issu",{"_index":271,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["issue]{@link",{"_index":776,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["istypeaheadoptionslistact",{"_index":811,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["item",{"_index":893,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["iter",{"_index":988,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["iterablediff",{"_index":519,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["jump",{"_index":603,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["keep",{"_index":645,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["keyboard",{"_index":410,"title":{},"body":{"classes/KeyboardNavigator.html":{}}}],["keyboardev",{"_index":421,"title":{},"body":{"classes/KeyboardNavigator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["keyboardnavig",{"_index":25,"title":{"classes/KeyboardNavigator.html":{}},"body":{"classes/AbstractNavigator.html":{},"classes/KeyboardNavigator.html":{},"modules/TableEditorModule.html":{},"coverage.html":{}}}],["keyboardnavigator]{@link",{"_index":150,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["keycod",{"_index":413,"title":{},"body":{"classes/KeyboardNavigator.html":{}}}],["keydown",{"_index":430,"title":{},"body":{"classes/KeyboardNavigator.html":{}}}],["keyup",{"_index":435,"title":{},"body":{"classes/KeyboardNavigator.html":{}}}],["keyupeventemitt",{"_index":812,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["lastli",{"_index":112,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["later",{"_index":132,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["latin",{"_index":762,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["latinize(normalizedvalu",{"_index":946,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["latinize(optionvalu",{"_index":981,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["latinize(valu",{"_index":989,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["leav",{"_index":532,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["left",{"_index":146,"title":{},"body":{"classes/AbstractNavigator.html":{},"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"miscellaneous/enumerations.html":{}}}],["legend",{"_index":389,"title":{},"body":{"components/InputTemplateComponent.html":{},"modules/TableEditorModule.html":{},"modules/TypeaheadModule.html":{},"index.html":{}}}],["lengthi",{"_index":272,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["level",{"_index":499,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["lifecycl",{"_index":66,"title":{},"body":{"classes/AbstractNavigator.html":{},"classes/KeyboardNavigator.html":{},"directives/OnInitDirective.html":{}}}],["lifecycle]{@link",{"_index":153,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["limit",{"_index":1005,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["limited.map((opt",{"_index":1017,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["link",{"_index":224,"title":{},"body":{"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["list",{"_index":941,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["listen",{"_index":33,"title":{},"body":{"classes/AbstractNavigator.html":{},"classes/KeyboardNavigator.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["live",{"_index":350,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["loader.class",{"_index":753,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["loader.factori",{"_index":755,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{}}}],["loader/compon",{"_index":752,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{}}}],["local",{"_index":285,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{}}}],["locat",{"_index":1078,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["make",{"_index":100,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["manag",{"_index":628,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["manual",{"_index":714,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["map((opt",{"_index":1008,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["match",{"_index":156,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/OnInitDirective.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"injectables/TemplateService.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["match.class",{"_index":760,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["match.indexof(test[i",{"_index":996,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["match.valu",{"_index":902,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["matches.concat",{"_index":1015,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["matches.push(new",{"_index":1013,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["mergemap",{"_index":766,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["mergemap((valu",{"_index":971,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["metadata",{"_index":177,"title":{},"body":{"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"components/InputTemplateComponent.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/OnInitDirective.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["method",{"_index":30,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/OnInitDirective.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{}}}],["miscellan",{"_index":1087,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":283,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{}}}],["model",{"_index":335,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["modul",{"_index":117,"title":{"modules/TableEditorModule.html":{},"modules/TypeaheadModule.html":{},"modules.html":{}},"body":{"classes/AbstractNavigator.html":{},"modules/TableEditorModule.html":{},"modules/TypeaheadModule.html":{},"index.html":{},"modules.html":{}}}],["modulewithprovid",{"_index":1037,"title":{},"body":{"modules/TypeaheadModule.html":{}}}],["moment",{"_index":259,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["more",{"_index":26,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["mous",{"_index":121,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["mouseev",{"_index":90,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mousenavig",{"_index":81,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["mouseout",{"_index":1109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mouseov",{"_index":1108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["move",{"_index":59,"title":{},"body":{"classes/AbstractNavigator.html":{},"classes/KeyboardNavigator.html":{}}}],["movement",{"_index":139,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"miscellaneous/enumerations.html":{}}}],["multi",{"_index":115,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"modules/TableEditorModule.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mymodul",{"_index":125,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["name",{"_index":48,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/OnInitDirective.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["nativeel",{"_index":265,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["navig",{"_index":12,"title":{},"body":{"classes/AbstractNavigator.html":{},"classes/KeyboardNavigator.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"interfaces/TeExecutor.html":{}}}],["navigationact",{"_index":41,"title":{},"body":{"classes/AbstractNavigator.html":{},"classes/KeyboardNavigator.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"interfaces/TeExecutor.html":{},"miscellaneous/enumerations.html":{}}}],["navigationaction.down",{"_index":441,"title":{},"body":{"classes/KeyboardNavigator.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["navigationaction.exit",{"_index":442,"title":{},"body":{"classes/KeyboardNavigator.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["navigationaction.left",{"_index":438,"title":{},"body":{"classes/KeyboardNavigator.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["navigationaction.right",{"_index":439,"title":{},"body":{"classes/KeyboardNavigator.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["navigationaction.up",{"_index":440,"title":{},"body":{"classes/KeyboardNavigator.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["navigator.t",{"_index":407,"title":{},"body":{"classes/KeyboardNavigator.html":{},"coverage.html":{}}}],["navigator.ts:11",{"_index":420,"title":{},"body":{"classes/KeyboardNavigator.html":{}}}],["navigator.ts:12",{"_index":423,"title":{},"body":{"classes/KeyboardNavigator.html":{}}}],["navigator.ts:25",{"_index":422,"title":{},"body":{"classes/KeyboardNavigator.html":{}}}],["navigators.map(ctor",{"_index":554,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["navigators/keyboard",{"_index":672,"title":{},"body":{"modules/TableEditorModule.html":{}}}],["navigators/navig",{"_index":468,"title":{},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"interfaces/TeExecutor.html":{}}}],["need",{"_index":268,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["new",{"_index":135,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/DateCellControlValueAccessor.html":{},"components/InputTemplateComponent.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newrow",{"_index":639,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["next",{"_index":477,"title":{},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{}}}],["nextcel",{"_index":592,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["nextcell.dis",{"_index":613,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["nextcellidx",{"_index":591,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["nextrow",{"_index":480,"title":{},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["nextrow.cel",{"_index":609,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["nextrow.context",{"_index":487,"title":{},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{}}}],["nextrowallcel",{"_index":608,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["nextrowallcells.filter(c",{"_index":611,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["nextrowallcells[absoluteidx",{"_index":612,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["nextrowenabledcel",{"_index":610,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["nextrowenabledcells.length",{"_index":615,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["nextrowenabledcells[absoluteidx",{"_index":617,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["nextrowenabledcells[nextrowenabledcells.length",{"_index":616,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["nextrowidx",{"_index":593,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["ng_value_accessor",{"_index":289,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ngaftercontentinit",{"_index":629,"title":{},"body":{"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{}}}],["ngafterviewinit",{"_index":371,"title":{},"body":{"components/InputTemplateComponent.html":{},"classes/TemplateExtractor.html":{}}}],["ngcontain",{"_index":166,"title":{},"body":{"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["ngcontrol",{"_index":690,"title":{},"body":{"directives/TableEditorRowDirective.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["ngcontrolvalu",{"_index":1021,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["ngcontrolvalue[this.typeaheadoptionfield",{"_index":1022,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["ngmodel",{"_index":345,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["ngmodul",{"_index":119,"title":{},"body":{"classes/AbstractNavigator.html":{},"modules/TableEditorModule.html":{},"modules/TypeaheadModule.html":{}}}],["ngondestroy",{"_index":619,"title":{},"body":{"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["ngoninit",{"_index":454,"title":{},"body":{"directives/OnInitDirective.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["ngx",{"_index":80,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{}}}],["normal",{"_index":338,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["normalizedopt",{"_index":980,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["normalizedoption.tolowercas",{"_index":982,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["normalizedqueri",{"_index":944,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["normalizedvalu",{"_index":942,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["normalizedvalue).tostring().tolowercas",{"_index":947,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["normalizeoption(opt",{"_index":976,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["normalizequery(valu",{"_index":983,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["note",{"_index":126,"title":{},"body":{"classes/AbstractNavigator.html":{},"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["npm",{"_index":1032,"title":{},"body":{"modules/TypeaheadModule.html":{}}}],["null",{"_index":308,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":318,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"directives/NumberCellControlValueAccessor.html":{},"injectables/TableEditorConfig.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["numbercellcontrolvalueaccessor",{"_index":394,"title":{"directives/NumberCellControlValueAccessor.html":{}},"body":{"components/InputTemplateComponent.html":{},"directives/NumberCellControlValueAccessor.html":{},"modules/TableEditorModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":351,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":373,"title":{},"body":{"components/InputTemplateComponent.html":{},"classes/TemplateExtractor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["occur",{"_index":471,"title":{},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{}}}],["offset",{"_index":355,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["omit",{"_index":729,"title":{},"body":{"directives/TextCellControlValueAccessor.html":{}}}],["on",{"_index":21,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["onblur",{"_index":888,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["onc",{"_index":203,"title":{},"body":{"directives/AnchorDirective.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["onchang",{"_index":734,"title":{},"body":{"directives/TextCellControlValueAccessor.html":{}}}],["onclick(ev",{"_index":909,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["ondestroy",{"_index":505,"title":{},"body":{"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["onfocu",{"_index":884,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["oninit",{"_index":65,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/DateCellControlValueAccessor.html":{},"classes/KeyboardNavigator.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/OnInitDirective.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["oninitdirect",{"_index":396,"title":{"directives/OnInitDirective.html":{}},"body":{"components/InputTemplateComponent.html":{},"directives/OnInitDirective.html":{},"modules/TableEditorModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["oninput(",{"_index":849,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["onkeydown(",{"_index":891,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["onoutsideclick",{"_index":958,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["ontouch",{"_index":785,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["option",{"_index":50,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"classes/KeyboardNavigator.html":{},"directives/OnInitDirective.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["options.slice(0",{"_index":1006,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["optionslisttempl",{"_index":801,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["optionvalu",{"_index":977,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["order",{"_index":325,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["other",{"_index":851,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["out",{"_index":23,"title":{},"body":{"classes/AbstractNavigator.html":{},"modules/TableEditorModule.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{},"index.html":{}}}],["output",{"_index":346,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["output('rowchang",{"_index":539,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["outsid",{"_index":78,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["over",{"_index":604,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["overrid",{"_index":332,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["overview",{"_index":1091,"title":{"index.html":{}},"body":{"index.html":{}}}],["page",{"_index":20,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["param",{"_index":230,"title":{},"body":{"directives/AnchorDirective.html":{},"interfaces/HTMLInputElementStyle.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["paramet",{"_index":47,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"classes/KeyboardNavigator.html":{},"directives/OnInitDirective.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{}}}],["pars",{"_index":409,"title":{},"body":{"classes/KeyboardNavigator.html":{}}}],["parser(valu",{"_index":305,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["part",{"_index":1029,"title":{},"body":{"modules/TypeaheadModule.html":{}}}],["pass",{"_index":683,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["perform",{"_index":1079,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":966,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["place",{"_index":498,"title":{},"body":{"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{}}}],["placement",{"_index":814,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["plain",{"_index":745,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["popup:componentref",{"_index":816,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["posit",{"_index":924,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{},"miscellaneous/variables.html":{}}}],["positioning.t",{"_index":1071,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["positioningservic",{"_index":1039,"title":{},"body":{"modules/TypeaheadModule.html":{}}}],["positionservic",{"_index":1072,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["possibl",{"_index":128,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{},"miscellaneous/enumerations.html":{}}}],["preparematches(opt",{"_index":1004,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["prevent",{"_index":895,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["previou",{"_index":476,"title":{},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{}}}],["prevrow",{"_index":481,"title":{},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{}}}],["prevrow.context",{"_index":484,"title":{},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{}}}],["privat",{"_index":88,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["probabl",{"_index":130,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["problem",{"_index":892,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["progag",{"_index":693,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["programat",{"_index":354,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["programmat",{"_index":383,"title":{},"body":{"components/InputTemplateComponent.html":{},"classes/TemplateExtractor.html":{}}}],["promis",{"_index":198,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["properti",{"_index":180,"title":{},"body":{"directives/AnchorDirective.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"injectables/TemplateService.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["protect",{"_index":31,"title":{},"body":{"classes/AbstractNavigator.html":{},"classes/KeyboardNavigator.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["provid",{"_index":116,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"directives/NumberCellControlValueAccessor.html":{},"injectables/TableEditorConfig.html":{},"modules/TableEditorModule.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["provider.t",{"_index":1082,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":83,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/OnInitDirective.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"injectables/TemplateService.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["purpos",{"_index":160,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["put",{"_index":257,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["querylist",{"_index":518,"title":{},"body":{"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{}}}],["r.item.teblocknavigationeventemitter.subscrib",{"_index":644,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["r.item.tecellclick.subscribe((executor",{"_index":643,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["reactiveformsmodul",{"_index":663,"title":{},"body":{"modules/TableEditorModule.html":{}}}],["readm",{"_index":3,"title":{},"body":{"classes/AbstractNavigator.html":{},"classes/KeyboardNavigator.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["readme]{@link",{"_index":427,"title":{},"body":{"classes/KeyboardNavigator.html":{}}}],["reason",{"_index":267,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["refer",{"_index":205,"title":{},"body":{"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"directives/NumberCellControlValueAccessor.html":{},"injectables/TableEditorConfig.html":{},"classes/TemplateExtractor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["reflect",{"_index":138,"title":{},"body":{"classes/AbstractNavigator.html":{},"miscellaneous/enumerations.html":{}}}],["regist",{"_index":70,"title":{},"body":{"classes/AbstractNavigator.html":{},"classes/KeyboardNavigator.html":{}}}],["registeronchange(fn",{"_index":303,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["registerontouched(fn",{"_index":304,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["reli",{"_index":336,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["remov",{"_index":1000,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["render",{"_index":51,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["renderer2",{"_index":36,"title":{},"body":{"classes/AbstractNavigator.html":{},"classes/KeyboardNavigator.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["represent",{"_index":279,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{}}}],["requir",{"_index":172,"title":{},"body":{"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["reset",{"_index":658,"title":{},"body":{"modules/TableEditorModule.html":{},"modules/TypeaheadModule.html":{},"index.html":{}}}],["resolv",{"_index":202,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["resolvetempl",{"_index":187,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["resolvetemplate]{@link",{"_index":226,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["respec",{"_index":270,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["respons",{"_index":408,"title":{},"body":{"classes/KeyboardNavigator.html":{}}}],["result",{"_index":155,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/OnInitDirective.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"injectables/TemplateService.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":196,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["return",{"_index":62,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/OnInitDirective.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{}}}],["right",{"_index":144,"title":{},"body":{"classes/AbstractNavigator.html":{},"miscellaneous/enumerations.html":{}}}],["root",{"_index":323,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["row",{"_index":465,"title":{},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{}}}],["row.direct",{"_index":520,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["row.teblocknavigationeventemitter.subscrib",{"_index":633,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["rowchang",{"_index":508,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["rowchangecontext",{"_index":462,"title":{"interfaces/RowChangeContext.html":{}},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"coverage.html":{}}}],["rowchangeev",{"_index":474,"title":{"classes/RowChangeEvent.html":{}},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"coverage.html":{}}}],["rowchangeevent(currentrow",{"_index":571,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["rowchangeevent(this.currentrow",{"_index":573,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["rowchangeevent`",{"_index":537,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["rowidx",{"_index":589,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["rows.foreach(row",{"_index":630,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["run",{"_index":1031,"title":{},"body":{"modules/TypeaheadModule.html":{}}}],["rv",{"_index":547,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["rxj",{"_index":381,"title":{},"body":{"components/InputTemplateComponent.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["rxjs/oper",{"_index":769,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["s",{"_index":850,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["s.unsubscrib",{"_index":621,"title":{},"body":{"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{}}}],["save",{"_index":1034,"title":{},"body":{"modules/TypeaheadModule.html":{}}}],["scroll",{"_index":97,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["secondli",{"_index":168,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["section",{"_index":19,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["section]{@link",{"_index":148,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["see",{"_index":18,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"classes/KeyboardNavigator.html":{},"directives/NumberCellControlValueAccessor.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["select",{"_index":531,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["selector",{"_index":178,"title":{},"body":{"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"components/InputTemplateComponent.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/OnInitDirective.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["servic",{"_index":321,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{},"injectables/TemplateService.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["set",{"_index":211,"title":{},"body":{"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["set]{@link",{"_index":565,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["setter",{"_index":724,"title":{},"body":{"injectables/TemplateService.html":{}}}],["show",{"_index":918,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["sibl",{"_index":263,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["similar",{"_index":411,"title":{},"body":{"classes/KeyboardNavigator.html":{}}}],["singleword",{"_index":984,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["software.com/ngx",{"_index":774,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["software/ngx",{"_index":778,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["soon",{"_index":105,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["sourc",{"_index":4,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/OnInitDirective.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"injectables/TemplateService.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{}}}],["spacelength",{"_index":993,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["specif",{"_index":564,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["speed",{"_index":938,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["statement",{"_index":1045,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":181,"title":{},"body":{"directives/AnchorDirective.html":{},"modules/TypeaheadModule.html":{}}}],["store",{"_index":344,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["string",{"_index":278,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["sub",{"_index":959,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["sub.unsubscrib",{"_index":961,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["subcrib",{"_index":627,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["subject",{"_index":378,"title":{},"body":{"components/InputTemplateComponent.html":{},"classes/TemplateExtractor.html":{}}}],["submiss",{"_index":897,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["subscribe((match",{"_index":968,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["subscript",{"_index":523,"title":{},"body":{"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["subsript",{"_index":646,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["such",{"_index":853,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["super(templatebridg",{"_index":824,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["super.ngoninit",{"_index":825,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["super.onchange(e.target.valu",{"_index":861,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["super.onclick(ev",{"_index":910,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["super.setcellvalue(modelv",{"_index":302,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["support",{"_index":856,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{},"modules.html":{}}}],["sure",{"_index":101,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{}}}],["svg",{"_index":1097,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":767,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["syncact",{"_index":970,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["t",{"_index":466,"title":{},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{}}}],["tab",{"_index":877,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["tabl",{"_index":57,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/NumberCellControlValueAccessor.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"injectables/TemplateService.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["table.direct",{"_index":689,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["table/row.direct",{"_index":467,"title":{},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"modules/TableEditorModule.html":{}}}],["table/table.direct",{"_index":666,"title":{},"body":{"modules/TableEditorModule.html":{}}}],["table[tableeditor",{"_index":506,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["table[tableeditor]'},{'nam",{"_index":398,"title":{},"body":{"components/InputTemplateComponent.html":{}}}],["table_editor_directive_declar",{"_index":675,"title":{},"body":{"modules/TableEditorModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table_editor_directive_export",{"_index":676,"title":{},"body":{"modules/TableEditorModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tableeditor",{"_index":679,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["tableeditorconfig",{"_index":327,"title":{"injectables/TableEditorConfig.html":{}},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{},"modules/TableEditorModule.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"coverage.html":{},"index.html":{}}}],["tableeditordirect",{"_index":17,"title":{"directives/TableEditorDirective.html":{}},"body":{"classes/AbstractNavigator.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tableeditordirective#ngoninit",{"_index":154,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["tableeditordirective]{@link",{"_index":147,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["tableeditorextrasmodul",{"_index":1036,"title":{},"body":{"modules/TypeaheadModule.html":{}}}],["tableeditormodul",{"_index":650,"title":{"modules/TableEditorModule.html":{}},"body":{"modules/TableEditorModule.html":{},"index.html":{},"modules.html":{}}}],["tableeditorrowdirect",{"_index":399,"title":{"directives/TableEditorRowDirective.html":{}},"body":{"components/InputTemplateComponent.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tableelementref",{"_index":37,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1086,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":516,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["target.cel",{"_index":558,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["target.cell.focu",{"_index":575,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["target.row",{"_index":557,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["target.row!.cells.length",{"_index":559,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["target.row.cells[0",{"_index":560,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["target.row.inputifi",{"_index":569,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["td",{"_index":347,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["td[type=date][tecell][ngmodel],td[type=date][tecell][formcontrol],td[type=date][tecell][formcontrolnam",{"_index":274,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{}}}],["td[type=date][tecell][ngmodel],td[type=date][tecell][formcontrol],td[type=date][tecell][formcontrolname]'},{'nam",{"_index":393,"title":{},"body":{"components/InputTemplateComponent.html":{}}}],["td[type=number][tecell][ngmodel],td[type=number][tecell][formcontrol],td[type=number][tecell][formcontrolnam",{"_index":447,"title":{},"body":{"directives/NumberCellControlValueAccessor.html":{}}}],["td[type=number][tecell][ngmodel],td[type=number][tecell][formcontrol],td[type=number][tecell][formcontrolname]'},{'nam",{"_index":395,"title":{},"body":{"components/InputTemplateComponent.html":{}}}],["td[type=text][tecell][ngmodel],td:not([type])[tecell][ngmodel],td[type=text][tecell][formcontrol],td:not([type])[tecell][formcontrol],td[type=text][tecell][formcontrolname],td:not([type])[tecell][formcontrolnam",{"_index":731,"title":{},"body":{"directives/TextCellControlValueAccessor.html":{}}}],["td[type=text][tecell][ngmodel],td:not([type])[tecell][ngmodel],td[type=text][tecell][formcontrol],td:not([type])[tecell][formcontrol],td[type=text][tecell][formcontrolname],td:not([type])[tecell][formcontrolname]'},{'nam",{"_index":402,"title":{},"body":{"components/InputTemplateComponent.html":{}}}],["td[type=typeahead][ngmodel",{"_index":404,"title":{},"body":{"components/InputTemplateComponent.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["te",{"_index":368,"title":{},"body":{"components/InputTemplateComponent.html":{},"classes/TemplateExtractor.html":{}}}],["te_date_cell_accessor",{"_index":273,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["te_navig",{"_index":114,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"interfaces/TeExecutor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["te_number_cell_accessor",{"_index":446,"title":{},"body":{"directives/NumberCellControlValueAccessor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["te_text_cell_accessor",{"_index":730,"title":{},"body":{"directives/TextCellControlValueAccessor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teafterinputifi",{"_index":912,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["teanchor",{"_index":179,"title":{},"body":{"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["teanchor]'},{'nam",{"_index":392,"title":{},"body":{"components/InputTemplateComponent.html":{}}}],["teblocknavig",{"_index":695,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["teblocknavigationeventemitt",{"_index":696,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["tecel",{"_index":266,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["tecellclick",{"_index":694,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["tecontext",{"_index":682,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["teexecutor",{"_index":514,"title":{"interfaces/TeExecutor.html":{}},"body":{"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"coverage.html":{}}}],["templat",{"_index":206,"title":{},"body":{"directives/AnchorDirective.html":{},"components/InputTemplateComponent.html":{},"directives/OnInitDirective.html":{},"classes/TemplateExtractor.html":{}}}],["template.servic",{"_index":218,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["templatebridg",{"_index":820,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["templateextractor",{"_index":367,"title":{"classes/TemplateExtractor.html":{}},"body":{"components/InputTemplateComponent.html":{},"classes/TemplateExtractor.html":{},"coverage.html":{}}}],["templateextractor:11",{"_index":377,"title":{},"body":{"components/InputTemplateComponent.html":{}}}],["templateextractor:12",{"_index":379,"title":{},"body":{"components/InputTemplateComponent.html":{}}}],["templateextractor:13",{"_index":372,"title":{},"body":{"components/InputTemplateComponent.html":{}}}],["templateextractor:16",{"_index":374,"title":{},"body":{"components/InputTemplateComponent.html":{}}}],["templateref",{"_index":171,"title":{},"body":{"directives/AnchorDirective.html":{},"components/InputTemplateComponent.html":{},"classes/TemplateExtractor.html":{},"injectables/TemplateService.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["templateservic",{"_index":192,"title":{"injectables/TemplateService.html":{}},"body":{"directives/AnchorDirective.html":{},"modules/TableEditorModule.html":{},"injectables/TemplateService.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["templatesett",{"_index":184,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["teoninit",{"_index":453,"title":{},"body":{"directives/OnInitDirective.html":{}}}],["teoninit]'},{'nam",{"_index":397,"title":{},"body":{"components/InputTemplateComponent.html":{}}}],["terow",{"_index":502,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["test",{"_index":992,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["test.length",{"_index":995,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["testmatch(match",{"_index":991,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["textcellcontrolvalueaccessor",{"_index":401,"title":{"directives/TextCellControlValueAccessor.html":{}},"body":{"components/InputTemplateComponent.html":{},"modules/TableEditorModule.html":{},"directives/TextCellControlValueAccessor.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["textcont",{"_index":854,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this._blocknavig",{"_index":548,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["this._cells.toarray().map((c",{"_index":700,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["this._contain",{"_index":842,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this._container.act",{"_index":879,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this._container.isfocus",{"_index":843,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this._container.match",{"_index":953,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this._container.nextactivematch",{"_index":875,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this._container.par",{"_index":936,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this._container.prevactivematch",{"_index":874,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this._container.queri",{"_index":948,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this._container.selectmatch(act",{"_index":881,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this._match",{"_index":908,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this._matches.length",{"_index":1019,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this._onchange(",{"_index":847,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this._outsideclicklisten",{"_index":930,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this._subscript",{"_index":960,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this._subscriptions.push",{"_index":964,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this._typeahead",{"_index":913,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this._typeahead.dispos",{"_index":962,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this._typeahead.hid",{"_index":957,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this._typeahead.inst",{"_index":935,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this._typeahead.isshown",{"_index":956,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.act",{"_index":488,"title":{},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{}}}],["this.actiongenerator.bind(thi",{"_index":87,"title":{},"body":{"classes/AbstractNavigator.html":{},"classes/KeyboardNavigator.html":{}}}],["this.actionparser(act",{"_index":152,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["this.actionparser.bind(thi",{"_index":556,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["this.asyncact",{"_index":836,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.blocknavig",{"_index":579,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["this.cel",{"_index":699,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["this.cells.foreach(c",{"_index":715,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["this.cells.foreach(cel",{"_index":702,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["this.changedetection.markforcheck",{"_index":907,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.changemodel(act",{"_index":880,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.cis.createloader(this.el",{"_index":914,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.currentcel",{"_index":574,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["this.currentrow",{"_index":567,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["this.currentrow!.cellifi",{"_index":572,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["this.currentrow.cellifi",{"_index":568,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["this.dateformat",{"_index":310,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{}}}],["this.diff",{"_index":634,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["this.differ.diff(newrow",{"_index":641,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["this.differ.diff(row",{"_index":636,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["this.differs.find(rows).cr",{"_index":635,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["this.dropup",{"_index":926,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.element.nativeel",{"_index":932,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.element.nativeelement.focu",{"_index":954,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.execute(act",{"_index":443,"title":{},"body":{"classes/KeyboardNavigator.html":{}}}],["this.execute(navigationaction.exit",{"_index":93,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["this.executefor(executor",{"_index":599,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["this.executefor(target",{"_index":561,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["this.finalizeasynccall(match",{"_index":969,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.getoptionfromobject(this.ngcontrol.control.valu",{"_index":943,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.getoptionfromobject(valu",{"_index":917,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.hasmatch",{"_index":859,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.hid",{"_index":870,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.injector.get(ngcontrol",{"_index":827,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.innertempl",{"_index":386,"title":{},"body":{"components/InputTemplateComponent.html":{},"classes/TemplateExtractor.html":{}}}],["this.inputtemplatecomponenttemplateref",{"_index":244,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["this.inputvalueformatter(this.ngcontrol.control.valu",{"_index":840,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.keycodes.includes(event.which",{"_index":431,"title":{},"body":{"classes/KeyboardNavigator.html":{}}}],["this.keyupeventemitt",{"_index":965,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.keyupeventemitter.emit(e.target.valu",{"_index":867,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.keyupeventemitter.emit(this.element.nativeelement.valu",{"_index":886,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.navig",{"_index":553,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["this.navigators.foreach(nav",{"_index":625,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["this.next.context",{"_index":486,"title":{},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{}}}],["this.next.row",{"_index":485,"title":{},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{}}}],["this.ngcontrol",{"_index":826,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.ngcontrol.control.setvalue(match.item",{"_index":906,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.ngcontrol.control.valu",{"_index":911,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.ngcontrol.viewtomodelupdate(match.item",{"_index":905,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.normalizequery(valu",{"_index":972,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.onblureventemitter.subscribe((",{"_index":838,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.onchang",{"_index":736,"title":{},"body":{"directives/TextCellControlValueAccessor.html":{}}}],["this.onkeyupeventemitter.subscrib",{"_index":845,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.onoutsideclick",{"_index":934,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.ontouch",{"_index":738,"title":{},"body":{"directives/TextCellControlValueAccessor.html":{}}}],["this.plac",{"_index":928,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.preparematches(match",{"_index":998,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.previous.context",{"_index":483,"title":{},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{}}}],["this.previous.row",{"_index":482,"title":{},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{}}}],["this.render",{"_index":916,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.renderer.listen('docu",{"_index":931,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.renderer.listen(docu",{"_index":86,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["this.renderer.listen(this.tableelementref.nativeel",{"_index":429,"title":{},"body":{"classes/KeyboardNavigator.html":{}}}],["this.renderer.setproperty(this['inputelement'].nativeel",{"_index":903,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.resolvetempl",{"_index":243,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["this.rowchange.emit(new",{"_index":570,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["this.rows.changes.subscribe((chang",{"_index":638,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["this.rows.toarray",{"_index":588,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["this.setinputvalue(match.valu",{"_index":904,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.setinputvalue(valu",{"_index":841,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.show",{"_index":1003,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.subscript",{"_index":712,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["this.subscriptions.foreach(",{"_index":620,"title":{},"body":{"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{}}}],["this.subscriptions.push",{"_index":632,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["this.subscriptions.push(blocksubscrib",{"_index":711,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["this.subscriptions.push(changessubscript",{"_index":649,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["this.subscriptions.push(clicksubscrib",{"_index":710,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["this.subscriptions.push(row.tecellclick.subscribe((executor",{"_index":631,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["this.syncact",{"_index":837,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.tableelementref",{"_index":111,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["this.teblocknavigationeventemitter.emit",{"_index":709,"title":{},"body":{"directives/TableEditorRowDirective.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.tecellclick.complet",{"_index":713,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["this.tecellclick.emit(executor",{"_index":706,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["this.template.asobserv",{"_index":385,"title":{},"body":{"components/InputTemplateComponent.html":{},"classes/TemplateExtractor.html":{}}}],["this.template.complet",{"_index":388,"title":{},"body":{"components/InputTemplateComponent.html":{},"classes/TemplateExtractor.html":{}}}],["this.template.next(this.innertempl",{"_index":387,"title":{},"body":{"components/InputTemplateComponent.html":{},"classes/TemplateExtractor.html":{}}}],["this.templatesett",{"_index":234,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["this.templatesetter(this.inputtemplatecomponenttemplateref",{"_index":246,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["this.teoninit(this.el",{"_index":461,"title":{},"body":{"directives/OnInitDirective.html":{}}}],["this.testmatch(this.normalizeoption(opt",{"_index":975,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.typeahead",{"_index":834,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.typeaheadasync",{"_index":833,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.typeaheadgroupfield",{"_index":860,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.typeaheadlatin",{"_index":945,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.typeaheadloading.emit(fals",{"_index":868,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.typeaheadloading.emit(tru",{"_index":866,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.typeaheadminlength",{"_index":830,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.typeaheadnoresults.emit(!this.hasmatch",{"_index":999,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.typeaheadnoresults.emit(fals",{"_index":869,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.typeaheadonblur.emit(this._container.act",{"_index":844,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.typeaheadoptionfield",{"_index":979,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.typeaheadoptionslimit",{"_index":828,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.typeaheadphrasedelimit",{"_index":952,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.typeaheadsingleword",{"_index":949,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.typeaheadwaitm",{"_index":831,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.typeaheadworddelimit",{"_index":951,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this.unlistennavigators.foreach(un",{"_index":622,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["this.unlistennavigators.push(nav.listen",{"_index":626,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["this.vc",{"_index":233,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["this.vc.clear",{"_index":624,"title":{},"body":{"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{}}}],["this.vc.createcomponent(this.cfr.resolvecomponentfactory(inputtemplatecompon",{"_index":239,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["this.writevalue(this.ngcontrol.control.valu",{"_index":889,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["this['innerviewcontain",{"_index":915,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["through",{"_index":109,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["throw",{"_index":533,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["thu",{"_index":264,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["to(this.el",{"_index":925,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["toarray",{"_index":768,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["todo",{"_index":920,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["token",{"_index":763,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["tokenize(normalizedqueri",{"_index":950,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["top",{"_index":316,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["tpl",{"_index":213,"title":{},"body":{"directives/AnchorDirective.html":{},"injectables/TemplateService.html":{}}}],["tr",{"_index":678,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["tr[terow",{"_index":681,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["tr[terow]'},{'nam",{"_index":400,"title":{},"body":{"components/InputTemplateComponent.html":{}}}],["transit",{"_index":470,"title":{},"body":{"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{}}}],["tree",{"_index":364,"title":{},"body":{"components/InputTemplateComponent.html":{}}}],["trigger",{"_index":507,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["trigger(target",{"_index":513,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["triggeredcel",{"_index":705,"title":{},"body":{"directives/TableEditorRowDirective.html":{}}}],["true",{"_index":123,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"interfaces/TeExecutor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":191,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["ts.setter",{"_index":235,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["two",{"_index":159,"title":{},"body":{"directives/AnchorDirective.html":{}}}],["type",{"_index":49,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/OnInitDirective.html":{},"interfaces/RowChangeContext.html":{},"classes/RowChangeEvent.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"injectables/TemplateService.html":{},"directives/TextCellControlValueAccessor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type='d",{"_index":255,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{}}}],["type='numb",{"_index":445,"title":{},"body":{"directives/NumberCellControlValueAccessor.html":{}}}],["type='text",{"_index":728,"title":{},"body":{"directives/TextCellControlValueAccessor.html":{}}}],["typeahead",{"_index":741,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{}}}],["typeahead.direct",{"_index":1038,"title":{},"body":{"modules/TypeaheadModule.html":{}}}],["typeahead]{@link",{"_index":772,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["typeaheadasync",{"_index":795,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["typeaheadcellcontrolvalueaccessor",{"_index":403,"title":{"directives/TypeaheadCellControlValueAccessor.html":{}},"body":{"components/InputTemplateComponent.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{},"coverage.html":{},"index.html":{}}}],["typeaheadcontainercompon",{"_index":756,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{}}}],["typeaheadedit",{"_index":746,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["typeaheadgroupfield",{"_index":794,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["typeaheaditemtempl",{"_index":800,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["typeaheadlatin",{"_index":796,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["typeaheadload",{"_index":805,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["typeaheadmatch",{"_index":759,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["typeaheadmatch(group",{"_index":1014,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["typeaheadmatch(opt",{"_index":1016,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["typeaheadminlength",{"_index":790,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["typeaheadmodul",{"_index":1023,"title":{"modules/TypeaheadModule.html":{}},"body":{"modules/TypeaheadModule.html":{},"index.html":{},"modules.html":{}}}],["typeaheadnoresult",{"_index":806,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["typeaheadonblur",{"_index":808,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["typeaheadonselect",{"_index":807,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["typeaheadoptionfield",{"_index":793,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["typeaheadoptionsinscrollableview",{"_index":803,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["typeaheadoptionslimit",{"_index":792,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["typeaheadphrasedelimit",{"_index":799,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["typeaheadref",{"_index":927,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["typeaheadscrol",{"_index":802,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["typeaheadsingleword",{"_index":797,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["typeaheadwaitm",{"_index":791,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["typeaheadworddelimit",{"_index":798,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["typeof",{"_index":994,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{},"miscellaneous/variables.html":{}}}],["typic",{"_index":322,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["ui",{"_index":16,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["un",{"_index":623,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["undefin",{"_index":43,"title":{},"body":{"classes/AbstractNavigator.html":{},"classes/KeyboardNavigator.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"miscellaneous/variables.html":{}}}],["unlistenkeydown",{"_index":428,"title":{},"body":{"classes/KeyboardNavigator.html":{}}}],["unlistenkeyup",{"_index":434,"title":{},"body":{"classes/KeyboardNavigator.html":{}}}],["unlistennavig",{"_index":543,"title":{},"body":{"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["unregist",{"_index":69,"title":{},"body":{"classes/AbstractNavigator.html":{},"classes/KeyboardNavigator.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["unregisterfn",{"_index":85,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["up",{"_index":143,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"miscellaneous/enumerations.html":{}}}],["updat",{"_index":923,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["upon",{"_index":76,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/TableEditorDirective.html":{},"interfaces/TeExecutor.html":{}}}],["us",{"_index":10,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"directives/OnInitDirective.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"injectables/TemplateService.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{}}}],["usag",{"_index":254,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["useexist",{"_index":292,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"modules/TypeaheadModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["usevalu",{"_index":122,"title":{},"body":{"classes/AbstractNavigator.html":{},"modules/TableEditorModule.html":{}}}],["util",{"_index":382,"title":{},"body":{"components/InputTemplateComponent.html":{},"directives/OnInitDirective.html":{},"classes/TemplateExtractor.html":{},"injectables/TemplateService.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["utils/anchor.direct",{"_index":668,"title":{},"body":{"modules/TableEditorModule.html":{}}}],["utils/config.servic",{"_index":674,"title":{},"body":{"modules/TableEditorModule.html":{}}}],["utils/input.compon",{"_index":667,"title":{},"body":{"modules/TableEditorModule.html":{}}}],["utils/on",{"_index":669,"title":{},"body":{"modules/TableEditorModule.html":{}}}],["utils/row",{"_index":524,"title":{},"body":{"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"interfaces/TeExecutor.html":{}}}],["utils/template.servic",{"_index":673,"title":{},"body":{"modules/TableEditorModule.html":{}}}],["valu",{"_index":249,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"interfaces/HTMLInputElementStyle.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/NumberCellControlValueAccessor.html":{},"classes/RowChangeEvent.html":{},"injectables/TableEditorConfig.html":{},"directives/TableEditorDirective.html":{},"modules/TableEditorModule.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value).tostring().tolowercas",{"_index":990,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["value.trim().length",{"_index":865,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["valuestr",{"_index":901,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["var",{"_index":390,"title":{},"body":{"components/InputTemplateComponent.html":{}}}],["variabl",{"_index":685,"title":{"miscellaneous/variables.html":{}},"body":{"directives/TableEditorRowDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["vc",{"_index":185,"title":{},"body":{"directives/AnchorDirective.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{}}}],["version",{"_index":133,"title":{},"body":{"classes/AbstractNavigator.html":{}}}],["viewchild",{"_index":376,"title":{},"body":{"components/InputTemplateComponent.html":{},"classes/TemplateExtractor.html":{}}}],["viewchild(templateref",{"_index":384,"title":{},"body":{"components/InputTemplateComponent.html":{},"classes/TemplateExtractor.html":{}}}],["viewcontain",{"_index":164,"title":{},"body":{"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"injectables/TemplateService.html":{},"directives/TextCellControlValueAccessor.html":{}}}],["viewcontainer]{@link",{"_index":726,"title":{},"body":{"injectables/TemplateService.html":{}}}],["viewcontainerref",{"_index":190,"title":{},"body":{"directives/AnchorDirective.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["visibl",{"_index":894,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["void",{"_index":44,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/DateCellControlValueAccessor.html":{},"components/InputTemplateComponent.html":{},"classes/KeyboardNavigator.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/OnInitDirective.html":{},"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"classes/TemplateExtractor.html":{},"injectables/TemplateService.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["way",{"_index":451,"title":{},"body":{"directives/OnInitDirective.html":{}}}],["width",{"_index":317,"title":{},"body":{"interfaces/HTMLInputElementStyle.html":{},"injectables/TableEditorConfig.html":{}}}],["win",{"_index":1080,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["win.docu",{"_index":1112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["win.loc",{"_index":1119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["win['ev",{"_index":1113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["win['eventlisten",{"_index":1114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["win['eventtarget",{"_index":1115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["win['gc",{"_index":1116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["win['histori",{"_index":1117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["win['keyboardev",{"_index":1118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["win['loc",{"_index":1120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["win['mouseev",{"_index":1121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["win['perform",{"_index":1122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window",{"_index":1123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":141,"title":{},"body":{"classes/AbstractNavigator.html":{},"directives/AnchorDirective.html":{},"directives/TableEditorRowDirective.html":{},"miscellaneous/enumerations.html":{}}}],["won't",{"_index":939,"title":{},"body":{"directives/TypeaheadCellControlValueAccessor.html":{}}}],["work",{"_index":500,"title":{},"body":{"directives/TableEditorDirective.html":{},"directives/TableEditorRowDirective.html":{},"interfaces/TeExecutor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["writevalue(modelv",{"_index":301,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{},"directives/NumberCellControlValueAccessor.html":{},"directives/TextCellControlValueAccessor.html":{},"directives/TypeaheadCellControlValueAccessor.html":{}}}],["yyyi",{"_index":282,"title":{},"body":{"directives/DateCellControlValueAccessor.html":{}}}],["zoom",{"_index":657,"title":{},"body":{"modules/TableEditorModule.html":{},"modules/TypeaheadModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractNavigator.html":{"url":"classes/AbstractNavigator.html","title":"class - AbstractNavigator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractNavigator\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            core/src/navigators/navigator.ts\n        \n\n            \n                Description\n            \n            \n                An abstract base class that can be used to implement a navigator, allowing for interactions between the UI and TableEditorDirective. See the README section on this page on how to implement one, or check out the source code of KeyboardNavigator for more detailed information.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                execute\n                            \n                            \n                                    Abstract\n                                listener\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, tableElementRef: ElementRef, actionParser: (action: NavigationAction | undefined) => void)\n                    \n                \n                        \n                            \n                                Defined in core/src/navigators/navigator.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tableElementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionParser\n                                                  \n                                                        \n                                                                    function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            execute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        execute(action: NavigationAction | undefined)\n                    \n                \n\n\n                        \n                            \n                                    Defined in core/src/navigators/navigator.ts:29\n                            \n                        \n\n\n                \n                    \n                            A method that should be called to instruct the Table Editor to move in a certain direction.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                        \n                                                                    NavigationAction | undefined\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    void\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            listener\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        listener()\n                    \n                \n\n\n                        \n                            \n                                    Defined in core/src/navigators/navigator.ts:36\n                            \n                        \n\n\n                \n                    \n                            When a TableEditorDirective is instantiated, it will call (in the onInit lifecycle) listener of all navigators associated with the instance.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    () => void the unregister function for the listeners that have been registered.\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Guide: implementing a custom Navigator\nThis guide will discuss how to implement a custom navigator that causes the table editor to exit upon a click outside of the table.\nThe implementation\nimport { NavigationAction, AbstractNavigator } from 'ngx-table-editor'\n\nclass MouseNavigator extends AbstractNavigator {\n    public listener(): () => void {\n        const unregisterFn = this.renderer.listen(document, 'click', this.actionGenerator.bind(this));\n        return unregisterFn\n    }\n    private actionGenerator(event: MouseEvent): void {\n        if (!(event as any).path.includes(this.tableElementRef.nativeElement)) {\n            this.execute(NavigationAction.Exit);\n        }\n    }\n}Any class that inherits from AbstractNavigator must implement a listener method, in which any interaction with the DOM is done (listening to scrolling events):\n    public listener(): () => void {\n        // attach the appropiate listener to the dom.\n        const unregisterFn = this.renderer.listen(document, 'click', this.actionGenerator.bind(this));\n        // make sure to return the unregisterFn. It is called internally when the table is destroyed.\n        return unregisterFn;\n    }Internally, the navigator will be injected in the TableEditorDirective constructor, and the listener method will be called by the instance of TableEditorDirective as soon as angular fires the OnInit lifecycle hook. It must return a unregister function which will be fired when the TableEditorDirective is destroyed.\n    private actionGenerator(event: MouseEvent): void {\n        // Through the inheritance of `AbstractNavigator`, instances of the MouseNavigator class have access to the `ElementRef` of the table, through `this.tableElementRef`.\n        if (!(event as any).path.includes(this.tableElementRef.nativeElement)) {\n            this.execute(NavigationAction.Exit);\n        }\n    }Lastly, the navigator must be added to the TE_NAVIGATORS multi provider, which is done by registering it in the providers section in your module as follows:\nimport { NgModule } from '@angular/core';\nimport { TE_NAVIGATORS } from 'ngx-table-editor'\nimport { MouseNavigator } from './mouse-navigator'\n\n@NgModule({\n    providers: [\n        { provide: TE_NAVIGATORS, useValue: MouseNavigator, multi: true },\n    ]\n})\nexport class MyModule {}Notes\n\nInjection in the navigators is currently not possible because the navigators are instantiated by TableEditorDirective, not through Angular DI. This should probably be changed in a later version.\n\n\n    \n\n    \n        import { ElementRef, Renderer2, InjectionToken } from '@angular/core';\n\nexport const TE_NAVIGATORS = new InjectionToken('TeNavigators');\n\n/**\n * An enumerator that reflect the possible movements that happen within a table.\n */\nexport enum NavigationAction {\n\tUp = 'up',\n\tRight = 'right',\n\tDown = 'down',\n\tLeft = 'left',\n\tExit = 'exit'\n}\n/**\n * An abstract base class that can be used to implement a navigator, allowing for interactions between the UI and [TableEditorDirective]{@link TableEditorDirective}. See the [README section]{@link /documentation/classes/AbstractNavigator.html#readme} on this page on how to implement one, or check out the source code of [KeyboardNavigator]{@link documentation/classes/KeyboardNavigator.html#source} for more detailed information.\n */\nexport abstract class AbstractNavigator {\n\tconstructor(\n\t\tprotected renderer: Renderer2,\n\t\tprotected tableElementRef: ElementRef,\n\t\tprivate actionParser: (action: NavigationAction | undefined) => void\n\t) {}\n\n\t/**\n\t * A method that should be called to instruct the Table Editor to move in a certain direction.\n\t * @returns void\n\t */\n\tprotected execute(action: NavigationAction | undefined): void {\n\t\tthis.actionParser(action);\n\t}\n\t/**\n\t * When a TableEditorDirective is instantiated, it will call ([in the onInit lifecycle]{@link TableEditorDirective#ngOnInit}) `listener` of all navigators associated with the instance.\n\t * @returns () => void the unregister function for the listeners that have been registered.\n\t */\n\tabstract listener(): () => void;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AnchorDirective.html":{"url":"directives/AnchorDirective.html","title":"directive - AnchorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AnchorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            core/src/utils/anchor.directive.ts\n        \n\n            \n                Description\n            \n            \n                This directive is used internally for two purposes. Firstly, to allow for communication between an instance of AbstractTableCell and the ViewContainer of the inner NgContainer element. Secondly, to dynamically create a TemplateRef that is required by the AbstractTableCell instance to inputify a table cell\n  Should only be used in a  element, within a HTMLTableElement, see the examples for for more detail.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [teAnchor]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                InputTemplateComponentTemplatePromise\n                            \n                            \n                                    Public\n                                InputTemplateComponentTemplateRef\n                            \n                            \n                                    Private\n                                templateSetter\n                            \n                            \n                                    Public\n                                vc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                resolveTemplate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cfr: ComponentFactoryResolver, vc: ViewContainerRef, ts: TemplateService)\n                    \n                \n                        \n                            \n                                Defined in core/src/utils/anchor.directive.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cfr\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vc\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ts\n                                                  \n                                                        \n                                                                    TemplateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            resolveTemplate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolveTemplate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in core/src/utils/anchor.directive.ts:44\n                            \n                        \n\n\n                \n                    \n                            Called by instances of AbstractTableCell directive to retrieve the TemplateRef of the input element.\n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            InputTemplateComponentTemplatePromise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        InputTemplateComponentTemplatePromise:     Promise>\n\n                    \n                \n                    \n                        \n                            Type :     Promise>\n\n                        \n                    \n                        \n                            \n                                    Defined in core/src/utils/anchor.directive.ts:19\n                            \n                        \n\n                \n                    \n                        A promise that is inspected by all instancs of AnchorDirective to make sure InputComponent is only resolved once see the constructor .\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            InputTemplateComponentTemplateRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        InputTemplateComponentTemplateRef:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in core/src/utils/anchor.directive.ts:24\n                            \n                        \n\n                \n                    \n                        A reference to the angular template of HTMLInputElement. It becomes available only after InputTemplateComponentTemplatePromise has been resolved, which happens when resolveTemplate has been called.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            templateSetter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        templateSetter:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in core/src/utils/anchor.directive.ts:29\n                            \n                        \n\n                \n                    \n                        A callback function set by instances of AbstractTableCell directive to expose the input element TemplateRef.\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        TemplateRef\n                                                        \n                                                                 tpl The TemplateRef as extracted from the InputComponent, [see the constructor]{\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            vc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        vc:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in core/src/utils/anchor.directive.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef, ComponentFactoryResolver, TemplateRef } from '@angular/core';\nimport { InputTemplateComponent } from './input.component';\nimport { TemplateService } from './template.service';\n\n/**\n * This directive is used internally for two purposes. Firstly, to allow for communication between an instance of [AbstractTableCell]{@link AbstractTableCell} and the `ViewContainer` of the inner `NgContainer` element. Secondly, to dynamically create a `TemplateRef` that is required by the [AbstractTableCell]{@link AbstractTableCell} instance to [inputify]{@link documentation/injectables/AbstractTableCell.html#source} a table cell\n *\n *  Should only be used in a `` element, within a `HTMLTableElement`, see [the examples]{@link /demo/#/examples/basic} for for more detail.\n *\n */\n// @dynamic\n@Directive({\n\tselector: '[teAnchor]'\n})\nexport class AnchorDirective {\n\t/**\n\t * A promise that is inspected by all instancs of `AnchorDirective` to make sure `InputComponent` is only resolved once [see the constructor ]{@link AnchorDirective#constructor}.\n\t */\n\tprivate static InputTemplateComponentTemplatePromise: Promise>;\n\tpublic vc: ViewContainerRef;\n\t/**\n\t * A reference to the angular template of `HTMLInputElement`. It becomes available only after `InputTemplateComponentTemplatePromise` has been resolved, which happens when [resolveTemplate]{@link AnchorDirective#resolveTemplate} has been called.\n\t */\n\tpublic InputTemplateComponentTemplateRef: TemplateRef;\n\t/**\n\t * A callback function set by instances of [AbstractTableCell directive]{@link AbstractTableCell#constructor} to expose the input element `TemplateRef`.\n\t * @param  TemplateRef tpl The `TemplateRef` as extracted from the InputComponent, [see the constructor]{@link AnchorDirective#constructor}.\n\t */\n\tprivate templateSetter: (tpl: TemplateRef) => void;\n\tconstructor(private cfr: ComponentFactoryResolver, vc: ViewContainerRef, ts: TemplateService) {\n\t\tthis.vc = vc;\n\t\tthis.templateSetter = ts.setter;\n\t\tdelete ts.setter;\n\t\tif (!AnchorDirective.InputTemplateComponentTemplatePromise) {\n\t\t\tconst InputTemplateComponentRef = this.vc.createComponent(this.cfr.resolveComponentFactory(InputTemplateComponent));\n\t\t\tAnchorDirective.InputTemplateComponentTemplatePromise = InputTemplateComponentRef.instance.getTemplateRef().toPromise();\n\t\t\tAnchorDirective.InputTemplateComponentTemplatePromise.then(() => InputTemplateComponentRef.destroy());\n\t\t}\n\t\tthis.resolveTemplate();\n\t}\n\t/**\n\t * Called by instances of [AbstractTableCell directive]{@link AbstractTableCell} to retrieve the `TemplateRef` of the input element.\n\t */\n\tpublic async resolveTemplate(): Promise {\n\t\tthis.InputTemplateComponentTemplateRef = await AnchorDirective.InputTemplateComponentTemplatePromise;\n\t\tthis.templateSetter(this.InputTemplateComponentTemplateRef);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DateCellControlValueAccessor.html":{"url":"directives/DateCellControlValueAccessor.html","title":"directive - DateCellControlValueAccessor","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DateCellControlValueAccessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            core/src/control-value-accessors/date-cell-control-value-accessor.directive.ts\n        \n\n            \n                Description\n            \n            \n                The ControlValueAccessor that is instantiated for the following usage, with type='date'\n\n    ....\n    \n        \n    \n    ....\nDo not forget to put  inside the table elements. This is required because at this moment, it is not possible for the Angular renderer to insert elements into another element, only append as a sibling. It is thus not possible to insert into the nativeElement associated with and injected into the teCell directive.\nFor this reason, we need to create a ViewContainer inside the HTMLTableCellElement and get a reference to it, which is done by NgContainer and teAnchor respecively. See this issue for a lengthy discussion.\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                TE_DATE_CELL_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        td[type=date][teCell][ngModel],td[type=date][teCell][formControl],td[type=date][teCell][formControlName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                date-format\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        date-format\n                    \n                    \n                        Set a desired date string representation using the Angular formatDate method. The default settings are 'yyyy-MM-dd' with locale: 'en-US'.\n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in core/src/control-value-accessors/date-cell-control-value-accessor.directive.ts:34\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, forwardRef, OnInit, Input } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { formatDate } from '@angular/common';\nimport { AbstractTableCell } from './abstract-table-cell';\n\nconst TE_DATE_CELL_ACCESSOR = {\n\tprovide: NG_VALUE_ACCESSOR,\n\tuseExisting: forwardRef(() => DateCellControlValueAccessor),\n\tmulti: true\n};\n\n/**\n * The ControlValueAccessor that is instantiated for the following usage, with `type='date'`\n * ```html\n\n\t....\n\t\n\t\t\n\t\n\t....\n\n```\n * Do not forget to put `` inside the table elements. This is required because at this moment, it is not possible for the Angular renderer to **insert** elements into another element, only append as a sibling. It is thus not possible to insert into the `nativeElement` associated with and injected into the `teCell` directive.\n * For this reason, we need to create a `ViewContainer` inside the `HTMLTableCellElement` and get a reference to it, which is done by `NgContainer` and `teAnchor` respecively. [See this issue for a lengthy discussion]{@link https://github.com/angular/angular/issues/9035}.\n *\n */\n@Directive({\n\tselector: 'td[type=date][teCell][ngModel],td[type=date][teCell][formControl],td[type=date][teCell][formControlName]',\n\tproviders: [TE_DATE_CELL_ACCESSOR]\n})\nexport class DateCellControlValueAccessor extends AbstractTableCell implements OnInit {\n\t/** Set a desired date string representation using the Angular [formatDate]{@link https://angular.io/api/common/formatDate} method. The default settings are `'yyyy-MM-dd'` with locale: `'en-US'`.*/\n\t@Input('date-format')\n\tpublic dateFormat: string;\n\n\t/** @internal for documentation see {@link AbstractTableCell} */\n\tpublic writeValue(modelVal: Date): void {\n\t\tsuper.setCellValue(modelVal);\n\t}\n\t/** @internal for documentation see {@link AbstractTableCell} */\n\tpublic registerOnChange(fn: any): void {}\n\t/** @internal for documentation see {@link AbstractTableCell} */\n\tpublic registerOnTouched(fn: any): void {}\n\t/** @internal for documentation see {@link AbstractTableCell} */\n\tpublic parser(value: any) {\n\t\treturn new Date(value);\n\t}\n\t/** @internal for documentation see {@link AbstractTableCell} */\n\tpublic cellValueFormatter(value: any) {\n\t\tvalue = value === null ? '' : formatDate(value, this.dateFormat || 'dd-MM-yyyy', 'en-US');\n\t\treturn value;\n\t}\n\t/** @internal for documentation see {@link AbstractTableCell} */\n\tpublic inputValueFormatter(value: any) {\n\t\treturn formatDate(value, 'yyyy-MM-dd', 'en-US');\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HTMLInputElementStyle.html":{"url":"interfaces/HTMLInputElementStyle.html","title":"interface - HTMLInputElementStyle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HTMLInputElementStyle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            core/src/utils/config.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        height\n                                \n                                \n                                        left\n                                \n                                \n                                        top\n                                \n                                \n                                        width\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                    \n                                \n                                \n                                    \n                                        height:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                    \n                                \n                                \n                                    \n                                        left:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                    \n                                \n                                \n                                    \n                                        top:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                    \n                                \n                                \n                                    \n                                        width:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface HTMLInputElementStyle {\n\theight: number;\n\twidth: number;\n\ttop: number;\n\tleft: number;\n}\n\n/**\n * Global configuration service for the Table Editor directive.\n * You can inject this service, typically in your root component, and customize the values of its\n * properties in order to provide default values for all the table editors used in the application.\n */\n@Injectable()\nexport class TableEditorConfig {\n\t/**\n\t * An array of class names that will be added to the class attribute on the `HTMLInputElement`, when a table cell is [inputitifed]{@link documentation/injectables/AbstractTableCell.html#source}. Note that it is an array, so do not assign a string to it.\n\t */\n\tpublic classes: Array = [];\n\t/**\n\t * A function that overrides the default method of the used control value accessor to display the model in the table cell. If the function relies on `this`, be aware that only using a normal function declaration, i.e. no arrow function, will set the `this` context to the control value accessor instance.\n\t *  For instance in `config.cellValueFormatter = () => {}` this will refer to the instance of TableEditorConfig.\n\t * @param  any value The value as stored in NgModel.\n\t * @returns string The desired output, to be displayed in the `td` element.\n\t */\n\tpublic cellValueFormatter: (value: any) => string;\n\n\t/**\n\t * @param  HTMLTableCellElement cellElement The live element which is about to be inputified\n\t * @returns HTMLInputElementStyle An object that implements [HTMLInputElementStyle interface]{@link HTMLInputElementStyle} that contains height, width, top and left attributes, which will be used to programatically set the offset and dimensions of the input element and table cell. For more information see `AbstractTableCell#formatCell`.\n\t */\n\tpublic inputElementFormatter(cellElement: HTMLTableCellElement): HTMLInputElementStyle {\n\t\treturn {\n\t\t\theight: cellElement.offsetHeight,\n\t\t\twidth: cellElement.offsetWidth,\n\t\t\ttop: cellElement.offsetTop,\n\t\t\tleft: cellElement.offsetLeft - 1\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputTemplateComponent.html":{"url":"components/InputTemplateComponent.html","title":"component - InputTemplateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputTemplateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    core/src/utils/input.component.ts\n\n\n    \n        Description\n    \n    \n        A component used internally to acquire a reference to a TemplateRef, which is used to inputify a table cell.\n\n    \n\n    \n        Extends\n    \n    \n            TemplateExtractor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                te-input-template\n            \n\n\n\n            \n                template\n                \n\n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                innerTemplate\n                            \n                            \n                                    Private\n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getTemplateRef\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTemplateRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTemplateRef()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TemplateExtractor\n\n                                \n                            \n                        \n                            \n                                    Defined in TemplateExtractor:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable>\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     TemplateExtractor\n\n                                \n                            \n                        \n                            \n                                    Defined in TemplateExtractor:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            innerTemplate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        innerTemplate:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                            \n                                \n                                    Inherited from     TemplateExtractor\n\n                                \n                            \n                        \n                            \n                                    Defined in TemplateExtractor:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     Subject>\n\n                    \n                \n                    \n                        \n                            Type :     Subject>\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from     TemplateExtractor\n\n                                \n                            \n                        \n                            \n                                    Defined in TemplateExtractor:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { TemplateRef, AfterViewInit, ViewChild } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * A utility class used internally as a base class for an input component, allowing to publically expose the\n * a `TemplateRef` and programmatically extract it from the inheriting component.\n */\nexport class TemplateExtractor implements AfterViewInit {\n\t@ViewChild(TemplateRef)\n\tprivate innerTemplate: TemplateRef;\n\tprivate template: Subject> = new Subject();\n\tpublic getTemplateRef(): Observable> {\n\t\treturn this.template.asObservable();\n\t}\n\tngAfterViewInit(): void {\n\t\tif (this.innerTemplate) {\n\t\t\tthis.template.next(this.innerTemplate);\n\t\t\tthis.template.complete();\n\t\t}\n\t}\n}\n\n/**\n * A component used internally to acquire a reference to a `TemplateRef`, which is used to [inputify]{@link documentation/injectables/AbstractTableCell.html#source} a table cell.\n */\n@Component({\n\tselector: `te-input-template`,\n\ttemplate: `\n\t\n\t\n\t\n\t`\n})\nexport class InputTemplateComponent extends TemplateExtractor {}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'InputTemplateComponent', 'selector': 'te-input-template'}];\n    var DIRECTIVES = [{'name': 'AnchorDirective', 'selector': '[teAnchor]'},{'name': 'DateCellControlValueAccessor', 'selector': 'td[type=date][teCell][ngModel],td[type=date][teCell][formControl],td[type=date][teCell][formControlName]'},{'name': 'NumberCellControlValueAccessor', 'selector': 'td[type=number][teCell][ngModel],td[type=number][teCell][formControl],td[type=number][teCell][formControlName]'},{'name': 'OnInitDirective', 'selector': '[teOnInit]'},{'name': 'TableEditorDirective', 'selector': 'table[tableEditor]'},{'name': 'TableEditorRowDirective', 'selector': 'tr[teRow]'},{'name': 'TextCellControlValueAccessor', 'selector': 'td[type=text][teCell][ngModel],td:not([type])[teCell][ngModel],td[type=text][teCell][formControl],td:not([type])[teCell][formControl],td[type=text][teCell][formControlName],td:not([type])[teCell][formControlName]'},{'name': 'TypeaheadCellControlValueAccessor', 'selector': 'td[type=typeahead][ngModel]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputTemplateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyboardNavigator.html":{"url":"classes/KeyboardNavigator.html","title":"class - KeyboardNavigator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyboardNavigator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            core/src/navigators/keyboard-navigator.ts\n        \n\n            \n                Description\n            \n            \n                An implementation of AbstractNavigator that is responsible for\nparsing keyboard input, allowing for navigation similar to that of excel.\nSee the README of AbstractNavigator for a instruction on how to implement a custom navigator.\n\n            \n\n            \n                Extends\n            \n            \n                    AbstractNavigator\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                keyCodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                actionGenerator\n                            \n                            \n                                    Public\n                                listener\n                            \n                            \n                                    Protected\n                                execute\n                            \n                            \n                                    Abstract\n                                listener\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            keyCodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        keyCodes:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [38, 40, 9, 13, 27]\n                        \n                    \n                        \n                            \n                                    Defined in core/src/navigators/keyboard-navigator.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            actionGenerator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        actionGenerator(event: KeyboardEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in core/src/navigators/keyboard-navigator.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    KeyboardEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listener\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        listener()\n                    \n                \n\n\n                        \n                            \n                                    Defined in core/src/navigators/keyboard-navigator.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            execute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        execute(action: NavigationAction | undefined)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractNavigator\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractNavigator:29\n                            \n                        \n\n\n                \n                    \n                            A method that should be called to instruct the Table Editor to move in a certain direction.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                        \n                                                                    NavigationAction | undefined\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    void\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            listener\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        listener()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AbstractNavigator\n\n                                \n                            \n                        \n                            \n                                    Defined in AbstractNavigator:36\n                            \n                        \n\n\n                \n                    \n                            When a TableEditorDirective is instantiated, it will call (in the onInit lifecycle) listener of all navigators associated with the instance.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    () => void the unregister function for the listeners that have been registered.\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { ElementRef, Renderer2 } from '@angular/core';\nimport { AbstractNavigator, NavigationAction } from './navigator';\n\n/**\n * An implementation of [AbstractNavigator]{@link AbstractNavigator} that is responsible for\n * parsing keyboard input, allowing for navigation similar to that of excel.\n *\n * See the [README]{@link /documentation/classes/AbstractNavigator.html#readme} of [AbstractNavigator]{@link AbstractNavigator} for a instruction on how to implement a custom navigator.\n */\nexport class KeyboardNavigator extends AbstractNavigator {\n\tpublic keyCodes = [38, 40, 9, 13, 27];\n\tpublic listener(): () => void {\n\t\tconst unlistenKeyDown = this.renderer.listen(this.tableElementRef.nativeElement, 'keydown', event => {\n\t\t\tif (this.keyCodes.includes(event.which)) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t});\n\t\tconst unlistenKeyUp = this.renderer.listen(this.tableElementRef.nativeElement, 'keyup', this.actionGenerator.bind(this));\n\t\treturn () => {\n\t\t\tunlistenKeyDown();\n\t\t\tunlistenKeyUp();\n\t\t};\n\t}\n\tprivate actionGenerator(event: KeyboardEvent) {\n\t\tif (this.keyCodes.includes(event.which)) {\n\t\t\tlet action: NavigationAction | undefined;\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tif (event.which === 9) {\n\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\taction = NavigationAction.Left;\n\t\t\t\t} else {\n\t\t\t\t\taction = NavigationAction.Right;\n\t\t\t\t}\n\t\t\t} else if (event.which === 38) {\n\t\t\t\taction = NavigationAction.Up;\n\t\t\t} else if (event.which === 40) {\n\t\t\t\taction = NavigationAction.Down;\n\t\t\t} else if (event.which === 13 || event.which === 27) {\n\t\t\t\taction = NavigationAction.Exit;\n\t\t\t}\n\t\t\tthis.execute(action);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NumberCellControlValueAccessor.html":{"url":"directives/NumberCellControlValueAccessor.html","title":"directive - NumberCellControlValueAccessor","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NumberCellControlValueAccessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            core/src/control-value-accessors/number-cell-control-value-accessor.directive.ts\n        \n\n            \n                Description\n            \n            \n                The ControlValueAccessor that is instantiated for the following usage, with type='number':\n\n    ....\n    \n        \n    \n    ....\nDo not forget to put  inside the table elements. This is required because at this moment, it is not possible for the Angular renderer to insert elements into another element, only append as a sibling. It is thus not possible to insert into the nativeElement associated with and injected into the teCell directive.\nFor this reason, we need to create a ViewContainer inside the HTMLTableCellElement and get a reference to it, which is done by NgContainer and teAnchor respecively. See this issue for a lengthy discussion.\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                TE_NUMBER_CELL_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        td[type=number][teCell][ngModel],td[type=number][teCell][formControl],td[type=number][teCell][formControlName]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, forwardRef, OnInit } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AbstractTableCell } from './abstract-table-cell';\n\nconst TE_NUMBER_CELL_ACCESSOR = {\n\tprovide: NG_VALUE_ACCESSOR,\n\tuseExisting: forwardRef(() => NumberCellControlValueAccessor),\n\tmulti: true\n};\n\n/**\n * The ControlValueAccessor that is instantiated for the following usage, with `type='number'`:\n\n * ```html\n\n\t....\n\t\n\t\t\n\t\n\t....\n\n```\n * Do not forget to put `` inside the table elements. This is required because at this moment, it is not possible for the Angular renderer to **insert** elements into another element, only append as a sibling. It is thus not possible to insert into the `nativeElement` associated with and injected into the `teCell` directive.\n * For this reason, we need to create a `ViewContainer` inside the `HTMLTableCellElement` and get a reference to it, which is done by `NgContainer` and `teAnchor` respecively. [See this issue for a lengthy discussion]{@link https://github.com/angular/angular/issues/9035}.\n *\n */\n@Directive({\n\tselector: 'td[type=number][teCell][ngModel],td[type=number][teCell][formControl],td[type=number][teCell][formControlName]',\n\tproviders: [TE_NUMBER_CELL_ACCESSOR]\n})\nexport class NumberCellControlValueAccessor extends AbstractTableCell implements OnInit {\n\t/** @internal for documentation see {@link AbstractTableCell} */\n\tpublic writeValue(modelVal: number): void {\n\t\tsuper.setCellValue(modelVal);\n\t}\n\t/** @internal for documentation see {@link AbstractTableCell} */\n\tpublic registerOnChange(fn: any): void {\n\t\t//\n\t}\n\t/** @internal for documentation see {@link AbstractTableCell} */\n\tpublic registerOnTouched(fn: any): void {\n\t\t//\n\t}\n\t/** @internal for documentation see {@link AbstractTableCell} */\n\tpublic parser(value: any) {\n\t\treturn value;\n\t}\n\t/** @internal for documentation see {@link AbstractTableCell} */\n\tpublic cellValueFormatter(value: any) {\n\t\treturn (value = value === null ? '' : value);\n\t}\n\t/** @internal for documentation see {@link AbstractTableCell} */\n\tpublic inputValueFormatter(value: any) {\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/OnInitDirective.html":{"url":"directives/OnInitDirective.html","title":"directive - OnInitDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  OnInitDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            core/src/utils/on-init.directive.ts\n        \n\n            \n                Description\n            \n            \n                A utility directive used internally in InputComponent to fire code in a template-driven way during the OnInit lifecycle.\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [teOnInit]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                teOnInit\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in core/src/utils/on-init.directive.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        teOnInit\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in core/src/utils/on-init.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in core/src/utils/on-init.directive.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, Input, OnInit, ElementRef } from '@angular/core';\n\n/**\n * A utility directive used internally in [InputComponent]{@link InputComponent} to fire code in a template-driven way during the OnInit lifecycle.\n */\n@Directive({ selector: '[teOnInit]' })\nexport class OnInitDirective implements OnInit {\n\t@Input('teOnInit') public teOnInit: any;\n\tconstructor(private el: ElementRef) {}\n\tngOnInit(): void {\n\t\tthis.teOnInit(this.el);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RowChangeContext.html":{"url":"interfaces/RowChangeContext.html","title":"interface - RowChangeContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RowChangeContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            core/src/utils/row-change-event.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        context\n                                \n                                \n                                        row\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        context\n                                    \n                                \n                                \n                                    \n                                        context:     T | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        row\n                                    \n                                \n                                \n                                    \n                                        row:     TableEditorRowDirective | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TableEditorRowDirective | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TableEditorRowDirective } from '../table/row.directive';\nimport { NavigationAction } from '../navigators/navigator';\n\n/** This event is emitted by {@link TableEditorRowDirective} when a row transition occurs.\n * @param T ContextType The type of the context field.\n */\nexport class RowChangeEvent {\n\t/** A {@link RowChangeContext} of the row that is being transitioned from. */\n\tpublic previous: RowChangeContext = { row: null, context: null };\n\t/** A {@link RowChangeContext} of the row that is being transitioned from. */\n\tpublic next: RowChangeContext = { row: null, context: null };\n\t/** The [navigation action]{@link NavigationAction} associated that caused the `RowChangeEvent` */\n\tpublic action: NavigationAction | null;\n\t/** @internal  */\n\tconstructor(prevRow: TableEditorRowDirective | null = null, nextRow: TableEditorRowDirective | null = null, action: NavigationAction | null = null) {\n\t\tif (prevRow != null) {\n\t\t\tthis.previous.row = prevRow;\n\t\t\tthis.previous.context = prevRow.context;\n\t\t}\n\t\tif (nextRow != null) {\n\t\t\tthis.next.row = nextRow;\n\t\t\tthis.next.context = nextRow.context;\n\t\t}\n\t\tthis.action = action;\n\t}\n}\n\nexport interface RowChangeContext {\n\trow: TableEditorRowDirective | null;\n\tcontext: T | null;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RowChangeEvent.html":{"url":"classes/RowChangeEvent.html","title":"class - RowChangeEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RowChangeEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            core/src/utils/row-change-event.ts\n        \n\n            \n                Description\n            \n            \n                This event is emitted by TableEditorRowDirective when a row transition occurs.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                action\n                            \n                            \n                                    Public\n                                next\n                            \n                            \n                                    Public\n                                previous\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            action\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        action:     NavigationAction | null\n\n                    \n                \n                    \n                        \n                            Type :     NavigationAction | null\n\n                        \n                    \n                        \n                            \n                                    Defined in core/src/utils/row-change-event.ts:13\n                            \n                        \n\n                \n                    \n                        The navigation action associated that caused the RowChangeEvent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            next\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        next:     RowChangeContext\n\n                    \n                \n                    \n                        \n                            Type :     RowChangeContext\n\n                        \n                    \n                    \n                        \n                            Default value : { row: null, context: null }\n                        \n                    \n                        \n                            \n                                    Defined in core/src/utils/row-change-event.ts:11\n                            \n                        \n\n                \n                    \n                        A RowChangeContext of the row that is being transitioned from. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            previous\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        previous:     RowChangeContext\n\n                    \n                \n                    \n                        \n                            Type :     RowChangeContext\n\n                        \n                    \n                    \n                        \n                            Default value : { row: null, context: null }\n                        \n                    \n                        \n                            \n                                    Defined in core/src/utils/row-change-event.ts:9\n                            \n                        \n\n                \n                    \n                        A RowChangeContext of the row that is being transitioned from. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TableEditorRowDirective } from '../table/row.directive';\nimport { NavigationAction } from '../navigators/navigator';\n\n/** This event is emitted by {@link TableEditorRowDirective} when a row transition occurs.\n * @param T ContextType The type of the context field.\n */\nexport class RowChangeEvent {\n\t/** A {@link RowChangeContext} of the row that is being transitioned from. */\n\tpublic previous: RowChangeContext = { row: null, context: null };\n\t/** A {@link RowChangeContext} of the row that is being transitioned from. */\n\tpublic next: RowChangeContext = { row: null, context: null };\n\t/** The [navigation action]{@link NavigationAction} associated that caused the `RowChangeEvent` */\n\tpublic action: NavigationAction | null;\n\t/** @internal  */\n\tconstructor(prevRow: TableEditorRowDirective | null = null, nextRow: TableEditorRowDirective | null = null, action: NavigationAction | null = null) {\n\t\tif (prevRow != null) {\n\t\t\tthis.previous.row = prevRow;\n\t\t\tthis.previous.context = prevRow.context;\n\t\t}\n\t\tif (nextRow != null) {\n\t\t\tthis.next.row = nextRow;\n\t\t\tthis.next.context = nextRow.context;\n\t\t}\n\t\tthis.action = action;\n\t}\n}\n\nexport interface RowChangeContext {\n\trow: TableEditorRowDirective | null;\n\tcontext: T | null;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TableEditorConfig.html":{"url":"injectables/TableEditorConfig.html","title":"injectable - TableEditorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TableEditorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            core/src/utils/config.service.ts\n        \n\n            \n                Description\n            \n            \n                Global configuration service for the Table Editor directive.\nYou can inject this service, typically in your root component, and customize the values of its\nproperties in order to provide default values for all the table editors used in the application.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cellValueFormatter\n                            \n                            \n                                    Public\n                                classes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                inputElementFormatter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inputElementFormatter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        inputElementFormatter(cellElement: HTMLTableCellElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in core/src/utils/config.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cellElement\n                                                        \n                                                                    HTMLTableCellElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HTMLInputElementStyle\n\n                            \n                                \n                                    HTMLInputElementStyle An object that implements [HTMLInputElementStyle interface]{\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cellValueFormatter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cellValueFormatter:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in core/src/utils/config.service.ts:28\n                            \n                        \n\n                \n                    \n                        A function that overrides the default method of the used control value accessor to display the model in the table cell. If the function relies on this, be aware that only using a normal function declaration, i.e. no arrow function, will set the this context to the control value accessor instance.\n  For instance in config.cellValueFormatter = () => {} this will refer to the instance of TableEditorConfig.\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        any\n                                                        \n                                                                value The value as stored in NgModel.\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            classes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        classes:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in core/src/utils/config.service.ts:21\n                            \n                        \n\n                \n                    \n                        An array of class names that will be added to the class attribute on the HTMLInputElement, when a table cell is inputitifed. Note that it is an array, so do not assign a string to it.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport interface HTMLInputElementStyle {\n\theight: number;\n\twidth: number;\n\ttop: number;\n\tleft: number;\n}\n\n/**\n * Global configuration service for the Table Editor directive.\n * You can inject this service, typically in your root component, and customize the values of its\n * properties in order to provide default values for all the table editors used in the application.\n */\n@Injectable()\nexport class TableEditorConfig {\n\t/**\n\t * An array of class names that will be added to the class attribute on the `HTMLInputElement`, when a table cell is [inputitifed]{@link documentation/injectables/AbstractTableCell.html#source}. Note that it is an array, so do not assign a string to it.\n\t */\n\tpublic classes: Array = [];\n\t/**\n\t * A function that overrides the default method of the used control value accessor to display the model in the table cell. If the function relies on `this`, be aware that only using a normal function declaration, i.e. no arrow function, will set the `this` context to the control value accessor instance.\n\t *  For instance in `config.cellValueFormatter = () => {}` this will refer to the instance of TableEditorConfig.\n\t * @param  any value The value as stored in NgModel.\n\t * @returns string The desired output, to be displayed in the `td` element.\n\t */\n\tpublic cellValueFormatter: (value: any) => string;\n\n\t/**\n\t * @param  HTMLTableCellElement cellElement The live element which is about to be inputified\n\t * @returns HTMLInputElementStyle An object that implements [HTMLInputElementStyle interface]{@link HTMLInputElementStyle} that contains height, width, top and left attributes, which will be used to programatically set the offset and dimensions of the input element and table cell. For more information see `AbstractTableCell#formatCell`.\n\t */\n\tpublic inputElementFormatter(cellElement: HTMLTableCellElement): HTMLInputElementStyle {\n\t\treturn {\n\t\t\theight: cellElement.offsetHeight,\n\t\t\twidth: cellElement.offsetWidth,\n\t\t\ttop: cellElement.offsetTop,\n\t\t\tleft: cellElement.offsetLeft - 1\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TableEditorDirective.html":{"url":"directives/TableEditorDirective.html","title":"directive - TableEditorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  TableEditorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            core/src/table/table.directive.ts\n        \n\n            \n                Description\n            \n            \n                Place this directive on the top-level table element:\n\n            ....\nThis directive only works in combination with [teCell] directives placed on HTMLTableCellElements and [teRow] directives placed on HTMLTableRowElements. See the examples.\n\n            \n\n            \n                Implements\n            \n            \n                        AfterContentInit\n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        table[tableEditor]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                trigger\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                rowChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        rowChange\n                    \n                    \n                        Bind to the rowChange attribrute to listen to RowChangeEvents, see the details. \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in core/src/table/table.directive.ts:49\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            trigger\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        trigger(target: TeExecutor)\n                    \n                \n\n\n                        \n                            \n                                    Defined in core/src/table/table.directive.ts:91\n                            \n                        \n\n\n                \n                    \n                            Use this method to programatically control the movements in the table. See the guide in the README for an example.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        target\n                                                        \n                                                                    TeExecutor\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import {\n\tDirective,\n\tContentChildren,\n\tQueryList,\n\tAfterContentInit,\n\tIterableDiffer,\n\tIterableDiffers,\n\tElementRef,\n\tOutput,\n\tEventEmitter,\n\tOnInit,\n\tRenderer2,\n\tOnDestroy,\n\tViewContainerRef,\n\tInject,\n\tType\n} from '@angular/core';\nimport { TableEditorRowDirective } from './row.directive';\nimport { AbstractTableCell, CellDisabledState } from '../control-value-accessors/abstract-table-cell';\nimport { AbstractNavigator, NavigationAction, TE_NAVIGATORS } from '../navigators/navigator';\nimport { Subscription } from 'rxjs';\nimport { RowChangeEvent } from '../utils/row-change-event';\n\n/**\n * An interface implemented by an instruction set to trigger a movement in a {@link TableEditorDirective}. Both `row` and `cell` are optional. If both are left blank, the instruction set is interpreted as an exit command. If `cell` is left blank, the first enabled cell in the row will be selected. Only leaving `row` blank will throw an error.\n */\nexport interface TeExecutor {\n\trow: TableEditorRowDirective | null;\n\tcell: AbstractTableCell | null;\n}\n\n/**\n * Place this directive on the top-level `table` element:\n * ```html\n\n\t\t\t....\n\n```\n * This directive only works in combination with `[teCell]` directives placed on `HTMLTableCellElement`s and `[teRow]` directives placed on `HTMLTableRowElement`s. See the [examples]{@link ../../demo/#/examples/basic}.\n */\n@Directive({\n\tselector: 'table[tableEditor]'\n})\nexport class TableEditorDirective implements AfterContentInit, OnInit, OnDestroy {\n\t/** Bind to the `rowChange` attribrute to listen to `RowChangeEvent`s, see [the details]{@link RowChangeEvent}. */\n\t@Output('rowChange')\n\tpublic rowChange = new EventEmitter>();\n\t/** @internal  */\n\tprivate navigators: Array;\n\t/** @internal  */\n\tprivate currentRow: TableEditorRowDirective | null = null;\n\t/** @internal  */\n\tprivate currentCell: AbstractTableCell | null = null;\n\t/** @internal  */\n\tprivate differ: IterableDiffer;\n\t/** @internal  */\n\tprivate subscriptions: Array = [];\n\t/** @internal  */\n\tprivate unlistenNavigators: Array void> = [];\n\t/** @internal  */\n\tprivate _blockNavigation = false;\n\t/** @internal  */\n\tprivate get blockNavigation() {\n\t\tconst rv = this._blockNavigation;\n\t\tthis._blockNavigation = false;\n\t\treturn rv;\n\t}\n\t/** @internal  */\n\tprivate set blockNavigation(value: boolean) {\n\t\tthis._blockNavigation = value;\n\t}\n\t/** @internal  */\n\t@ContentChildren(TableEditorRowDirective)\n\tprivate rows: QueryList;\n\t/** @internal  */\n\tconstructor(\n\t\tprivate element: ElementRef,\n\t\tprivate renderer: Renderer2,\n\t\tprivate differs: IterableDiffers,\n\t\tprivate vc: ViewContainerRef,\n\t\t@Inject(TE_NAVIGATORS) navigators: Array>\n\t) {\n\t\tthis.navigators = navigators.map(ctor => new ctor(renderer, element, this.actionParser.bind(this)));\n\t}\n\t/**\n\t * Use this method to programatically control the movements in the table. See the guide in the README for an example.\n\t * @param  TeExecutor target An instruction set that implements the [TeExecutor interface]{@link TeExecutor}.\n\t */\n\tpublic trigger(target: TeExecutor) {\n\t\tif (target.row != null && !target.cell) {\n\t\t\tif (target.row!.cells.length) {\n\t\t\t\ttarget.cell = target.row.cells[0];\n\t\t\t}\n\t\t}\n\t\tthis.executeFor(target);\n\t}\n\t/**\n\t * @internal @ignore\n\t * A method used internally to cellify and inputify specific rows based on an [instruction set]{@link TeExecutor}.\n\t * @param  TeExecutor target\n\t * @param  NavigationAction action\n\t */\n\tprivate executeFor(target: TeExecutor, action: NavigationAction | null = null) {\n\t\tif (target.row) {\n\t\t\tlet currentRow: TableEditorRowDirective | null = null;\n\t\t\tif (target.row !== this.currentRow) {\n\t\t\t\tif (this.currentRow) {\n\t\t\t\t\tcurrentRow = this.currentRow;\n\t\t\t\t\tthis.currentRow.cellify();\n\t\t\t\t}\n\t\t\t\ttarget.row.inputify();\n\t\t\t\tthis.rowChange.emit(new RowChangeEvent(currentRow, target.row, action));\n\t\t\t\tthis.currentRow = target.row;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.currentRow!.cellify();\n\t\t\tthis.rowChange.emit(new RowChangeEvent(this.currentRow, null, action));\n\t\t\tthis.currentRow = null;\n\t\t}\n\t\tif (target.cell && target.cell !== this.currentCell) {\n\t\t\ttarget.cell.focus();\n\t\t\tthis.currentCell = target.cell;\n\t\t}\n\t}\n\n\t/**\n\t * @internal @ignore\n\t * A method used internally to convert a {@link NavigationAction} into an [instruction set]{@link TeExecutor}\n\t * @param  NavigationAction action\n\t * @returns void\n\t */\n\tprivate actionParser(action: NavigationAction | undefined): void {\n\t\tconst _action = action;\n\t\tif (this.blockNavigation || (this.currentRow === null && action === NavigationAction.Exit)) return;\n\t\tconst executor: TeExecutor = { row: null, cell: null };\n\n\t\tconst currentRow = this.currentRow!;\n\t\tconst currentCells = currentRow.cells.filter(c => c.disabled === CellDisabledState.Enabled);\n\t\tconst cellIdx = currentCells.indexOf(this.currentCell!);\n\t\tlet absoluteIdx = currentRow.cells.indexOf(this.currentCell!);\n\t\tconst currentRows = this.rows.toArray();\n\t\tconst rowIdx = currentRows.indexOf(currentRow);\n\t\tlet nextCellIdx;\n\t\tlet nextCell;\n\t\tlet nextRowIdx;\n\t\tlet nextRow;\n\t\tif (action === NavigationAction.Right || action === NavigationAction.Left) {\n\t\t\tconst indexOperator = action === NavigationAction.Left ? '--' : '++';\n\t\t\tnextCellIdx = cellIdx;\n\t\t\teval('nextCellIdx' + indexOperator);\n\t\t\tnextCell = currentCells[nextCellIdx];\n\t\t\tif (nextCell) {\n\t\t\t\texecutor.cell = nextCell;\n\t\t\t\texecutor.row = this.currentRow;\n\t\t\t\treturn this.executeFor(executor, _action);\n\t\t\t} else {\n\t\t\t\taction = action === NavigationAction.Left ? NavigationAction.Up : NavigationAction.Down;\n\t\t\t\tcellIdx > 0 ? (absoluteIdx = 0) : (absoluteIdx = currentRow.cells.length - 1);\n\t\t\t}\n\t\t}\n\t\tif (action === NavigationAction.Up || action === NavigationAction.Down) {\n\t\t\tconst indexOperator = action === NavigationAction.Up ? '--' : '++';\n\t\t\tnextRowIdx = rowIdx;\n\t\t\twhile (nextCell === undefined) {\n\t\t\t\t/* assures that it will jump over a disabled row */\n\t\t\t\teval('nextRowIdx' + indexOperator);\n\t\t\t\tnextRow = currentRows[nextRowIdx];\n\t\t\t\tif (nextRow) {\n\t\t\t\t\tconst nextRowAllCells = nextRow.cells;\n\t\t\t\t\tconst nextRowEnabledCells = nextRowAllCells.filter(c => c.disabled === CellDisabledState.Enabled);\n\t\t\t\t\texecutor.row = nextRow;\n\n\t\t\t\t\tnextCell = nextRowAllCells[absoluteIdx];\n\t\t\t\t\tif (nextCell.disabled === CellDisabledState.Disabled) {\n\t\t\t\t\t\tif (absoluteIdx > nextRowEnabledCells.length - 1) {\n\t\t\t\t\t\t\tnextCell = nextRowEnabledCells[nextRowEnabledCells.length - 1];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnextCell = nextRowEnabledCells[absoluteIdx];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\texecutor.cell = nextCell;\n\t\t\t\t} else {\n\t\t\t\t\texecutor.row = null;\n\t\t\t\t\texecutor.cell = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this.executeFor(executor, _action);\n\t}\n\n\t/** @internal  */\n\tngOnDestroy() {\n\t\tif (this.currentRow) {\n\t\t\tthis.currentRow.cellify();\n\t\t}\n\t\tthis.subscriptions.forEach(s => s.unsubscribe());\n\t\tthis.unlistenNavigators.forEach(un => un());\n\t\tthis.vc.clear();\n\t}\n\t/** @internal  Instantiates the navigators. */\n\tngOnInit() {\n\t\tthis.navigators.forEach(nav => this.unlistenNavigators.push(nav.listener()));\n\t}\n\t/** @internal  Subcribing to the rows and managing rows that are added dynamically. */\n\tngAfterContentInit() {\n\t\tconst rows = this.rows.toArray();\n\t\trows.forEach(row => {\n\t\t\tthis.subscriptions.push(row.teCellClick.subscribe((executor: TeExecutor) => this.executeFor(executor)));\n\t\t\tthis.subscriptions.push(\n\t\t\t\trow.teBlockNavigationEventEmitter.subscribe(() => {\n\t\t\t\t\tthis.blockNavigation = true;\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t\tthis.differ = this.differs.find(rows).create();\n\t\tthis.differ.diff(rows);\n\t\tconst changesSubscription = this.rows.changes.subscribe((changes: QueryList) => {\n\t\t\tconst newRows = this.rows.toArray();\n\t\t\tconst diff = this.differ.diff(newRows)!;\n\t\t\tdiff.forEachAddedItem(r => {\n\t\t\t\tr.item.teCellClick.subscribe((executor: TeExecutor) => this.executeFor(executor));\n\t\t\t\tr.item.teBlockNavigationEventEmitter.subscribe(() => {\n\t\t\t\t\tthis.blockNavigation = true;\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\t// keeping the subsriptions in once place to make it easier to unregister everything upon destroy\n\t\tthis.subscriptions.push(changesSubscription);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableEditorModule.html":{"url":"modules/TableEditorModule.html","title":"module - TableEditorModule","body":"\n                   \n\n\n\n\n  Modules\n  TableEditorModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TableEditorModule\n\n\n\ncluster_TableEditorModule_declarations\n\n\n\ncluster_TableEditorModule_exports\n\n\n\ncluster_TableEditorModule_providers\n\n\n\n\nAnchorDirective\n\nAnchorDirective\n\n\n\nTableEditorModule\n\nTableEditorModule\n\nTableEditorModule -->\n\nAnchorDirective->TableEditorModule\n\n\n\n\n\nDateCellControlValueAccessor\n\nDateCellControlValueAccessor\n\nTableEditorModule -->\n\nDateCellControlValueAccessor->TableEditorModule\n\n\n\n\n\nInputTemplateComponent\n\nInputTemplateComponent\n\nTableEditorModule -->\n\nInputTemplateComponent->TableEditorModule\n\n\n\n\n\nNumberCellControlValueAccessor\n\nNumberCellControlValueAccessor\n\nTableEditorModule -->\n\nNumberCellControlValueAccessor->TableEditorModule\n\n\n\n\n\nOnInitDirective\n\nOnInitDirective\n\nTableEditorModule -->\n\nOnInitDirective->TableEditorModule\n\n\n\n\n\nTableEditorDirective\n\nTableEditorDirective\n\nTableEditorModule -->\n\nTableEditorDirective->TableEditorModule\n\n\n\n\n\nTableEditorRowDirective\n\nTableEditorRowDirective\n\nTableEditorModule -->\n\nTableEditorRowDirective->TableEditorModule\n\n\n\n\n\nTextCellControlValueAccessor\n\nTextCellControlValueAccessor\n\nTableEditorModule -->\n\nTextCellControlValueAccessor->TableEditorModule\n\n\n\n\n\nAnchorDirective \n\nAnchorDirective \n\nAnchorDirective  -->\n\nTableEditorModule->AnchorDirective \n\n\n\n\n\nDateCellControlValueAccessor \n\nDateCellControlValueAccessor \n\nDateCellControlValueAccessor  -->\n\nTableEditorModule->DateCellControlValueAccessor \n\n\n\n\n\nInputTemplateComponent \n\nInputTemplateComponent \n\nInputTemplateComponent  -->\n\nTableEditorModule->InputTemplateComponent \n\n\n\n\n\nNumberCellControlValueAccessor \n\nNumberCellControlValueAccessor \n\nNumberCellControlValueAccessor  -->\n\nTableEditorModule->NumberCellControlValueAccessor \n\n\n\n\n\nOnInitDirective \n\nOnInitDirective \n\nOnInitDirective  -->\n\nTableEditorModule->OnInitDirective \n\n\n\n\n\nTableEditorDirective \n\nTableEditorDirective \n\nTableEditorDirective  -->\n\nTableEditorModule->TableEditorDirective \n\n\n\n\n\nTableEditorRowDirective \n\nTableEditorRowDirective \n\nTableEditorRowDirective  -->\n\nTableEditorModule->TableEditorRowDirective \n\n\n\n\n\nTextCellControlValueAccessor \n\nTextCellControlValueAccessor \n\nTextCellControlValueAccessor  -->\n\nTableEditorModule->TextCellControlValueAccessor \n\n\n\n\n\nTableEditorConfig\n\nTableEditorConfig\n\nTableEditorModule -->\n\nTableEditorConfig->TableEditorModule\n\n\n\n\n\nTemplateService\n\nTemplateService\n\nTableEditorModule -->\n\nTemplateService->TableEditorModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            core/src/table-editor.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AnchorDirective\n                            \n                            \n                                DateCellControlValueAccessor\n                            \n                            \n                                InputTemplateComponent\n                            \n                            \n                                NumberCellControlValueAccessor\n                            \n                            \n                                OnInitDirective\n                            \n                            \n                                TableEditorDirective\n                            \n                            \n                                TableEditorRowDirective\n                            \n                            \n                                TextCellControlValueAccessor\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                InputTemplateComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     TableEditorConfig\n                            \n                            \n                                     TemplateService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AnchorDirective\n                            \n                            \n                                    DateCellControlValueAccessor\n                            \n                            \n                                    InputTemplateComponent\n                            \n                            \n                                    NumberCellControlValueAccessor\n                            \n                            \n                                    OnInitDirective\n                            \n                            \n                                    TableEditorDirective\n                            \n                            \n                                    TableEditorRowDirective\n                            \n                            \n                                    TextCellControlValueAccessor\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AbstractTableCell } from './control-value-accessors/abstract-table-cell';\nimport { TextCellControlValueAccessor } from './control-value-accessors/text-cell-control-value-accessor.directive';\nimport { NumberCellControlValueAccessor } from './control-value-accessors/number-cell-control-value-accessor.directive';\nimport { DateCellControlValueAccessor } from './control-value-accessors/date-cell-control-value-accessor.directive';\nimport { TableEditorDirective } from './table/table.directive';\nimport { TableEditorRowDirective } from './table/row.directive';\nimport { InputTemplateComponent } from './utils/input.component';\nimport { AnchorDirective } from './utils/anchor.directive';\nimport { OnInitDirective } from './utils/on-init.directive';\nimport { CommonModule } from '@angular/common';\nimport { TE_NAVIGATORS, AbstractNavigator, NavigationAction } from './navigators/navigator';\nimport { KeyboardNavigator } from './navigators/keyboard-navigator';\nimport { TemplateService } from './utils/template.service';\nimport { TableEditorConfig } from './utils/config.service';\nimport { RowChangeEvent } from './utils/row-change-event';\n\nconst TABLE_EDITOR_DIRECTIVE_DECLARATIONS = [\n\tTableEditorDirective,\n\tTextCellControlValueAccessor,\n\tDateCellControlValueAccessor,\n\tNumberCellControlValueAccessor,\n\tTableEditorRowDirective,\n\tInputTemplateComponent,\n\tOnInitDirective,\n\tAnchorDirective\n];\nconst TABLE_EDITOR_DIRECTIVE_EXPORTS = [\n\tTableEditorDirective,\n\tTextCellControlValueAccessor,\n\tDateCellControlValueAccessor,\n\tNumberCellControlValueAccessor,\n\tTableEditorRowDirective,\n\tInputTemplateComponent,\n\tOnInitDirective,\n\tAnchorDirective,\n\t// TemplateService\n];\n@NgModule({\n\timports: [FormsModule, ReactiveFormsModule, CommonModule],\n\tdeclarations: TABLE_EDITOR_DIRECTIVE_DECLARATIONS,\n\texports: TABLE_EDITOR_DIRECTIVE_EXPORTS,\n\tentryComponents: [InputTemplateComponent],\n\tproviders: [{ provide: TE_NAVIGATORS, useValue: KeyboardNavigator, multi: true }, TemplateService, TableEditorConfig]\n})\nclass TableEditorModule {\n\tconstructor() {}\n}\n\nexport {\n\tTableEditorModule,\n\tTableEditorRowDirective,\n\tTableEditorDirective,\n\tTextCellControlValueAccessor,\n\tDateCellControlValueAccessor,\n\tNumberCellControlValueAccessor,\n\tAbstractTableCell,\n\tRowChangeEvent,\n\tTableEditorConfig,\n\tNavigationAction,\n\tAbstractNavigator,\n\tKeyboardNavigator,\n\tTE_NAVIGATORS,\n\tTemplateService\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TableEditorRowDirective.html":{"url":"directives/TableEditorRowDirective.html","title":"directive - TableEditorRowDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  TableEditorRowDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            core/src/table/row.directive.ts\n        \n\n            \n                Description\n            \n            \n                Place this directive on the 'tr' elements in a table that has a tableEditor directive:\n....\n\n    \n            ....\n    \n\n....This directive only works in combination with [teCell] directives placed on HTMLTableCellElements and [tableEditor] directive placed on HTMLTablelements. See the examples for a guide how to use it.\n\n            \n\n            \n                Implements\n            \n            \n                        AfterContentInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        tr[teRow]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cells\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                teContext\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        teContext\n                    \n                    \n                        Use this input attribute to pass along any context variable in a RowChangeEvent \n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in core/src/table/row.directive.ts:26\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cells\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cells:     AbstractTableCell[]\n\n                    \n                \n                    \n                        \n                            Type :     AbstractTableCell[]\n\n                        \n                    \n                        \n                            \n                                    Defined in core/src/table/row.directive.ts:30\n                            \n                        \n\n                \n                    \n                        All CellControlValueAccessors within a row. \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ContentChildren, QueryList, AfterContentInit, EventEmitter, Input, ViewContainerRef, OnDestroy } from '@angular/core';\nimport { AbstractTableCell } from '../control-value-accessors/abstract-table-cell';\nimport { TeExecutor } from './table.directive';\nimport { NgControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\n/**\n * Place this directive on the 'tr' elements in a table that has a `tableEditor` directive:\n* ```html\n....\n\n\t\n\t\t\t....\n\t\n\n....\n```\n * This directive only works in combination with `[teCell]` directives placed on `HTMLTableCellElement`s and `[tableEditor]` directive placed on `HTMLTablelement`s. See the [examples]{@link ../../demo/#/examples/basic} for a guide how to use it.\n */\n@Directive({\n\tselector: 'tr[teRow]'\n})\nexport class TableEditorRowDirective implements AfterContentInit, OnDestroy {\n\t/** Use this input attribute to pass along any context variable in a {@link RowChangeEvent} */\n\t@Input('teContext')\n\tpublic context: any;\n\t/** @internal An `EventEmitter` used internally to progagate a `TeCellClick` event to {@link TableEditorDirective} */\n\tpublic teCellClick: EventEmitter = new EventEmitter();\n\t/** All CellControlValueAccessors within a row. */\n\tpublic cells: AbstractTableCell[];\n\t/** @internal An `EventEmitter` used internally to progagate a TeBlockNavigation event to {@link TableEditorDirective} */\n\tpublic teBlockNavigationEventEmitter: EventEmitter = new EventEmitter();\n\t/** @internal */\n\t@ContentChildren(NgControl)\n\tprivate _cells: QueryList;\n\t/** @internal */\n\tprivate subscriptions: Array = [];\n\t/** @internal */\n\tconstructor(private vc: ViewContainerRef) {}\n\t/** @internal */\n\tpublic ngAfterContentInit(): void {\n\t\tthis.cells = this._cells.toArray().map((c: NgControl) => c.valueAccessor as AbstractTableCell);\n\t\tthis.cells.forEach(cell => {\n\t\t\tconst clickSubscriber = cell.teCellClick.subscribe((triggeredCell: AbstractTableCell) => {\n\t\t\t\tconst executor: TeExecutor = {row: null, cell: null};\n\t\t\t\texecutor.row = this;\n\t\t\t\texecutor.cell = triggeredCell;\n\t\t\t\tthis.teCellClick.emit(executor);\n\t\t\t});\n\t\t\tconst blockSubscriber = cell.teBlockNavigationEventEmitter.subscribe(() => {\n\t\t\t\tthis.teBlockNavigationEventEmitter.emit();\n\t\t\t});\n\t\t\tthis.subscriptions.push(clickSubscriber);\n\t\t\tthis.subscriptions.push(blockSubscriber);\n\t\t});\n\t}\n\n\t/** @internal */\n\tpublic ngOnDestroy() {\n\t\tif (this.subscriptions) this.subscriptions.forEach(s => s.unsubscribe());\n\t\tthis.teCellClick.complete();\n\t\tthis.vc.clear();\n\t}\n\t/** @internal This method is exposed publically because it is used by {@link TableEditorDirective}. Do not call it manually. */\n\tpublic inputify() {\n\t\tthis.cells.forEach(c => {\n\t\t\tc.inputify();\n\t\t});\n\t}\n\t/** @internal This method is exposed publically because it is used by {@link TableEditorDirective}. Do not call it manually. */\n\tpublic cellify() {\n\t\tthis.cells.forEach(c => {\n\t\t\tc.cellify();\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeExecutor.html":{"url":"interfaces/TeExecutor.html","title":"interface - TeExecutor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TeExecutor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            core/src/table/table.directive.ts\n        \n\n            \n                Description\n            \n            \n                An interface implemented by an instruction set to trigger a movement in a TableEditorDirective. Both row and cell are optional. If both are left blank, the instruction set is interpreted as an exit command. If cell is left blank, the first enabled cell in the row will be selected. Only leaving row blank will throw an error.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cell\n                                \n                                \n                                        row\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cell\n                                    \n                                \n                                \n                                    \n                                        cell:     AbstractTableCell | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AbstractTableCell | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        row\n                                    \n                                \n                                \n                                    \n                                        row:     TableEditorRowDirective | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TableEditorRowDirective | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n\tDirective,\n\tContentChildren,\n\tQueryList,\n\tAfterContentInit,\n\tIterableDiffer,\n\tIterableDiffers,\n\tElementRef,\n\tOutput,\n\tEventEmitter,\n\tOnInit,\n\tRenderer2,\n\tOnDestroy,\n\tViewContainerRef,\n\tInject,\n\tType\n} from '@angular/core';\nimport { TableEditorRowDirective } from './row.directive';\nimport { AbstractTableCell, CellDisabledState } from '../control-value-accessors/abstract-table-cell';\nimport { AbstractNavigator, NavigationAction, TE_NAVIGATORS } from '../navigators/navigator';\nimport { Subscription } from 'rxjs';\nimport { RowChangeEvent } from '../utils/row-change-event';\n\n/**\n * An interface implemented by an instruction set to trigger a movement in a {@link TableEditorDirective}. Both `row` and `cell` are optional. If both are left blank, the instruction set is interpreted as an exit command. If `cell` is left blank, the first enabled cell in the row will be selected. Only leaving `row` blank will throw an error.\n */\nexport interface TeExecutor {\n\trow: TableEditorRowDirective | null;\n\tcell: AbstractTableCell | null;\n}\n\n/**\n * Place this directive on the top-level `table` element:\n * ```html\n\n\t\t\t....\n\n```\n * This directive only works in combination with `[teCell]` directives placed on `HTMLTableCellElement`s and `[teRow]` directives placed on `HTMLTableRowElement`s. See the [examples]{@link ../../demo/#/examples/basic}.\n */\n@Directive({\n\tselector: 'table[tableEditor]'\n})\nexport class TableEditorDirective implements AfterContentInit, OnInit, OnDestroy {\n\t/** Bind to the `rowChange` attribrute to listen to `RowChangeEvent`s, see [the details]{@link RowChangeEvent}. */\n\t@Output('rowChange')\n\tpublic rowChange = new EventEmitter>();\n\t/** @internal  */\n\tprivate navigators: Array;\n\t/** @internal  */\n\tprivate currentRow: TableEditorRowDirective | null = null;\n\t/** @internal  */\n\tprivate currentCell: AbstractTableCell | null = null;\n\t/** @internal  */\n\tprivate differ: IterableDiffer;\n\t/** @internal  */\n\tprivate subscriptions: Array = [];\n\t/** @internal  */\n\tprivate unlistenNavigators: Array void> = [];\n\t/** @internal  */\n\tprivate _blockNavigation = false;\n\t/** @internal  */\n\tprivate get blockNavigation() {\n\t\tconst rv = this._blockNavigation;\n\t\tthis._blockNavigation = false;\n\t\treturn rv;\n\t}\n\t/** @internal  */\n\tprivate set blockNavigation(value: boolean) {\n\t\tthis._blockNavigation = value;\n\t}\n\t/** @internal  */\n\t@ContentChildren(TableEditorRowDirective)\n\tprivate rows: QueryList;\n\t/** @internal  */\n\tconstructor(\n\t\tprivate element: ElementRef,\n\t\tprivate renderer: Renderer2,\n\t\tprivate differs: IterableDiffers,\n\t\tprivate vc: ViewContainerRef,\n\t\t@Inject(TE_NAVIGATORS) navigators: Array>\n\t) {\n\t\tthis.navigators = navigators.map(ctor => new ctor(renderer, element, this.actionParser.bind(this)));\n\t}\n\t/**\n\t * Use this method to programatically control the movements in the table. See the guide in the README for an example.\n\t * @param  TeExecutor target An instruction set that implements the [TeExecutor interface]{@link TeExecutor}.\n\t */\n\tpublic trigger(target: TeExecutor) {\n\t\tif (target.row != null && !target.cell) {\n\t\t\tif (target.row!.cells.length) {\n\t\t\t\ttarget.cell = target.row.cells[0];\n\t\t\t}\n\t\t}\n\t\tthis.executeFor(target);\n\t}\n\t/**\n\t * @internal @ignore\n\t * A method used internally to cellify and inputify specific rows based on an [instruction set]{@link TeExecutor}.\n\t * @param  TeExecutor target\n\t * @param  NavigationAction action\n\t */\n\tprivate executeFor(target: TeExecutor, action: NavigationAction | null = null) {\n\t\tif (target.row) {\n\t\t\tlet currentRow: TableEditorRowDirective | null = null;\n\t\t\tif (target.row !== this.currentRow) {\n\t\t\t\tif (this.currentRow) {\n\t\t\t\t\tcurrentRow = this.currentRow;\n\t\t\t\t\tthis.currentRow.cellify();\n\t\t\t\t}\n\t\t\t\ttarget.row.inputify();\n\t\t\t\tthis.rowChange.emit(new RowChangeEvent(currentRow, target.row, action));\n\t\t\t\tthis.currentRow = target.row;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.currentRow!.cellify();\n\t\t\tthis.rowChange.emit(new RowChangeEvent(this.currentRow, null, action));\n\t\t\tthis.currentRow = null;\n\t\t}\n\t\tif (target.cell && target.cell !== this.currentCell) {\n\t\t\ttarget.cell.focus();\n\t\t\tthis.currentCell = target.cell;\n\t\t}\n\t}\n\n\t/**\n\t * @internal @ignore\n\t * A method used internally to convert a {@link NavigationAction} into an [instruction set]{@link TeExecutor}\n\t * @param  NavigationAction action\n\t * @returns void\n\t */\n\tprivate actionParser(action: NavigationAction | undefined): void {\n\t\tconst _action = action;\n\t\tif (this.blockNavigation || (this.currentRow === null && action === NavigationAction.Exit)) return;\n\t\tconst executor: TeExecutor = { row: null, cell: null };\n\n\t\tconst currentRow = this.currentRow!;\n\t\tconst currentCells = currentRow.cells.filter(c => c.disabled === CellDisabledState.Enabled);\n\t\tconst cellIdx = currentCells.indexOf(this.currentCell!);\n\t\tlet absoluteIdx = currentRow.cells.indexOf(this.currentCell!);\n\t\tconst currentRows = this.rows.toArray();\n\t\tconst rowIdx = currentRows.indexOf(currentRow);\n\t\tlet nextCellIdx;\n\t\tlet nextCell;\n\t\tlet nextRowIdx;\n\t\tlet nextRow;\n\t\tif (action === NavigationAction.Right || action === NavigationAction.Left) {\n\t\t\tconst indexOperator = action === NavigationAction.Left ? '--' : '++';\n\t\t\tnextCellIdx = cellIdx;\n\t\t\teval('nextCellIdx' + indexOperator);\n\t\t\tnextCell = currentCells[nextCellIdx];\n\t\t\tif (nextCell) {\n\t\t\t\texecutor.cell = nextCell;\n\t\t\t\texecutor.row = this.currentRow;\n\t\t\t\treturn this.executeFor(executor, _action);\n\t\t\t} else {\n\t\t\t\taction = action === NavigationAction.Left ? NavigationAction.Up : NavigationAction.Down;\n\t\t\t\tcellIdx > 0 ? (absoluteIdx = 0) : (absoluteIdx = currentRow.cells.length - 1);\n\t\t\t}\n\t\t}\n\t\tif (action === NavigationAction.Up || action === NavigationAction.Down) {\n\t\t\tconst indexOperator = action === NavigationAction.Up ? '--' : '++';\n\t\t\tnextRowIdx = rowIdx;\n\t\t\twhile (nextCell === undefined) {\n\t\t\t\t/* assures that it will jump over a disabled row */\n\t\t\t\teval('nextRowIdx' + indexOperator);\n\t\t\t\tnextRow = currentRows[nextRowIdx];\n\t\t\t\tif (nextRow) {\n\t\t\t\t\tconst nextRowAllCells = nextRow.cells;\n\t\t\t\t\tconst nextRowEnabledCells = nextRowAllCells.filter(c => c.disabled === CellDisabledState.Enabled);\n\t\t\t\t\texecutor.row = nextRow;\n\n\t\t\t\t\tnextCell = nextRowAllCells[absoluteIdx];\n\t\t\t\t\tif (nextCell.disabled === CellDisabledState.Disabled) {\n\t\t\t\t\t\tif (absoluteIdx > nextRowEnabledCells.length - 1) {\n\t\t\t\t\t\t\tnextCell = nextRowEnabledCells[nextRowEnabledCells.length - 1];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnextCell = nextRowEnabledCells[absoluteIdx];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\texecutor.cell = nextCell;\n\t\t\t\t} else {\n\t\t\t\t\texecutor.row = null;\n\t\t\t\t\texecutor.cell = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this.executeFor(executor, _action);\n\t}\n\n\t/** @internal  */\n\tngOnDestroy() {\n\t\tif (this.currentRow) {\n\t\t\tthis.currentRow.cellify();\n\t\t}\n\t\tthis.subscriptions.forEach(s => s.unsubscribe());\n\t\tthis.unlistenNavigators.forEach(un => un());\n\t\tthis.vc.clear();\n\t}\n\t/** @internal  Instantiates the navigators. */\n\tngOnInit() {\n\t\tthis.navigators.forEach(nav => this.unlistenNavigators.push(nav.listener()));\n\t}\n\t/** @internal  Subcribing to the rows and managing rows that are added dynamically. */\n\tngAfterContentInit() {\n\t\tconst rows = this.rows.toArray();\n\t\trows.forEach(row => {\n\t\t\tthis.subscriptions.push(row.teCellClick.subscribe((executor: TeExecutor) => this.executeFor(executor)));\n\t\t\tthis.subscriptions.push(\n\t\t\t\trow.teBlockNavigationEventEmitter.subscribe(() => {\n\t\t\t\t\tthis.blockNavigation = true;\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t\tthis.differ = this.differs.find(rows).create();\n\t\tthis.differ.diff(rows);\n\t\tconst changesSubscription = this.rows.changes.subscribe((changes: QueryList) => {\n\t\t\tconst newRows = this.rows.toArray();\n\t\t\tconst diff = this.differ.diff(newRows)!;\n\t\t\tdiff.forEachAddedItem(r => {\n\t\t\t\tr.item.teCellClick.subscribe((executor: TeExecutor) => this.executeFor(executor));\n\t\t\t\tr.item.teBlockNavigationEventEmitter.subscribe(() => {\n\t\t\t\t\tthis.blockNavigation = true;\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\t// keeping the subsriptions in once place to make it easier to unregister everything upon destroy\n\t\tthis.subscriptions.push(changesSubscription);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TemplateExtractor.html":{"url":"classes/TemplateExtractor.html","title":"class - TemplateExtractor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TemplateExtractor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            core/src/utils/input.component.ts\n        \n\n            \n                Description\n            \n            \n                A utility class used internally as a base class for an input component, allowing to publically expose the\na TemplateRef and programmatically extract it from the inheriting component.\n\n            \n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                innerTemplate\n                            \n                            \n                                    Private\n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getTemplateRef\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            innerTemplate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        innerTemplate:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in core/src/utils/input.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     Subject>\n\n                    \n                \n                    \n                        \n                            Type :     Subject>\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in core/src/utils/input.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTemplateRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTemplateRef()\n                    \n                \n\n\n                        \n                            \n                                    Defined in core/src/utils/input.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable>\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in core/src/utils/input.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { TemplateRef, AfterViewInit, ViewChild } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * A utility class used internally as a base class for an input component, allowing to publically expose the\n * a `TemplateRef` and programmatically extract it from the inheriting component.\n */\nexport class TemplateExtractor implements AfterViewInit {\n\t@ViewChild(TemplateRef)\n\tprivate innerTemplate: TemplateRef;\n\tprivate template: Subject> = new Subject();\n\tpublic getTemplateRef(): Observable> {\n\t\treturn this.template.asObservable();\n\t}\n\tngAfterViewInit(): void {\n\t\tif (this.innerTemplate) {\n\t\t\tthis.template.next(this.innerTemplate);\n\t\t\tthis.template.complete();\n\t\t}\n\t}\n}\n\n/**\n * A component used internally to acquire a reference to a `TemplateRef`, which is used to [inputify]{@link documentation/injectables/AbstractTableCell.html#source} a table cell.\n */\n@Component({\n\tselector: `te-input-template`,\n\ttemplate: `\n\t\n\t\n\t\n\t`\n})\nexport class InputTemplateComponent extends TemplateExtractor {}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TemplateService.html":{"url":"injectables/TemplateService.html","title":"injectable - TemplateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TemplateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            core/src/utils/template.service.ts\n        \n\n            \n                Description\n            \n            \n                A utility service used internally to communicate the TemplateRef from anchor viewcontainer to the table cell\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setter\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        setter:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in core/src/utils/template.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, TemplateRef } from '@angular/core';\n\n/**\n * A utility service used internally to communicate the `TemplateRef` from [anchor viewcontainer]{@link AnchorDirective} to the [table cell]{@link AbstractTableCell}\n */\n@Injectable()\nexport class TemplateService {\n\tpublic setter: (tpl: TemplateRef) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TextCellControlValueAccessor.html":{"url":"directives/TextCellControlValueAccessor.html","title":"directive - TextCellControlValueAccessor","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  TextCellControlValueAccessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            core/src/control-value-accessors/text-cell-control-value-accessor.directive.ts\n        \n\n            \n                Description\n            \n            \n                The ControlValueAccessor that is instantiated for the following usage, with type='text' or omitting the type:\n\n    ....\n    \n        \n    \n    \n        \n    \n    ....\nDo not forget to put  inside the table elements. This is required because at this moment, it is not possible for the Angular renderer to insert elements into another element, only append as a sibling. It is thus not possible to insert into the nativeElement associated with and injected into the teCell directive.\nFor this reason, we need to create a ViewContainer inside the HTMLTableCellElement and get a reference to it, which is done by NgContainer and teAnchor respecively. See this issue for a lengthy discussion.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                TE_TEXT_CELL_ACCESSOR\n                            \n                        \n                    \n\n                    \n                        Selector\n                        td[type=text][teCell][ngModel],td:not([type])[teCell][ngModel],td[type=text][teCell][formControl],td:not([type])[teCell][formControl],td[type=text][teCell][formControlName],td:not([type])[teCell][formControlName]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AbstractTableCell } from './abstract-table-cell';\n\nconst TE_TEXT_CELL_ACCESSOR = {\n\tprovide: NG_VALUE_ACCESSOR,\n\tuseExisting: forwardRef(() => TextCellControlValueAccessor),\n\tmulti: true\n};\n\n/**\n * The ControlValueAccessor that is instantiated for the following usage, with `type='text'` or omitting the `type`:\n\n * ```html\n\n\t....\n\t\n\t\t\n\t\n\t\n\t\t\n\t\n\t....\n\n```\n * Do not forget to put `` inside the table elements. This is required because at this moment, it is not possible for the Angular renderer to **insert** elements into another element, only append as a sibling. It is thus not possible to insert into the `nativeElement` associated with and injected into the `teCell` directive.\n * For this reason, we need to create a `ViewContainer` inside the `HTMLTableCellElement` and get a reference to it, which is done by `NgContainer` and `teAnchor` respecively. [See this issue for a lengthy discussion]{@link https://github.com/angular/angular/issues/9035}.\n *\n */\n@Directive({\n\tselector:\n\t\t'td[type=text][teCell][ngModel],td:not([type])[teCell][ngModel],td[type=text][teCell][formControl],td:not([type])[teCell][formControl],td[type=text][teCell][formControlName],td:not([type])[teCell][formControlName]',\n\tproviders: [TE_TEXT_CELL_ACCESSOR],\n\thost: {\n\t\t'(input)': '$any(this).onChange($event.target.value)'\n\t}\n})\nexport class TextCellControlValueAccessor extends AbstractTableCell {\n\t/** @internal for documentation see {@link AbstractTableCell} */\n\tpublic onChange: (_: any) => void;\n\n\t/** @internal for documentation see {@link AbstractTableCell} */\n\tpublic writeValue(modelVal: any): void {\n\t\tsuper.setCellValue(modelVal);\n\t}\n\n\t/** @internal for documentation see {@link AbstractTableCell} */\n\tpublic registerOnChange(fn: (_: any) => void): void {\n\t\tthis.onChange = fn;\n\t}\n\t/** @internal for documentation see {@link AbstractTableCell} */\n\tpublic registerOnTouched(fn: () => void): void {\n\t\t// this.onTouched = fn;\n\t}\n\n\t/** @internal for documentation see {@link AbstractTableCell} */\n\tpublic parser(value: any) {\n\t\treturn value;\n\t}\n\t/** @internal for documentation see {@link AbstractTableCell} */\n\tpublic cellValueFormatter(value: any) {\n\t\treturn (value = value === null ? '' : value);\n\t}\n\t/** @internal for documentation see {@link AbstractTableCell} */\n\tpublic inputValueFormatter(value: any) {\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TypeaheadCellControlValueAccessor.html":{"url":"directives/TypeaheadCellControlValueAccessor.html","title":"directive - TypeaheadCellControlValueAccessor","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  TypeaheadCellControlValueAccessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            extras/src/typeahead/typeahead.directive.ts\n        \n\n            \n                Description\n            \n            \n                This is a fork of ngx-bootstrap typeahead. It has been adjusted to also accept in the NgModel binding references to objects instead of plain values, and typeaheadEditable is set to false (see this issue). Other than that, check out the ngx-bootstrap documentation for usage details, or check out the examples on how to use it.\n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TypeaheadCellControlValueAccessor), multi: true\n}\n                            \n                        \n                    \n\n                    \n                        Selector\n                        td[type=typeahead][ngModel]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n\tChangeDetectorRef,\n\tDirective,\n\tElementRef,\n\tEventEmitter,\n\tHostListener,\n\tInput,\n\tOnDestroy,\n\tOnInit,\n\tOutput,\n\tRenderer2,\n\tTemplateRef,\n\tViewContainerRef,\n\tforwardRef,\n\tInjector\n} from '@angular/core';\nimport { NgControl, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { from, Observable, Subscription } from 'rxjs';\nimport { ComponentLoader, } from './typeahead-dependencies/component-loader/component-loader.class';\nimport { ComponentLoaderFactory } from './typeahead-dependencies/component-loader/component-loader.factory';\nimport { TypeaheadContainerComponent } from './typeahead-dependencies/typeahead-container.component';\nimport { TypeaheadMatch } from './typeahead-dependencies/typeahead-match.class';\nimport { getValueFromObject, latinize, tokenize } from './typeahead-dependencies/typeahead-utils';\nimport { debounceTime, filter, mergeMap, switchMap, toArray } from 'rxjs/operators';\nimport { AbstractTableCell, TableEditorConfig, TemplateService } from '@ngx-table-editor/core';\n// import { AbstractTableCell, TableEditorConfig, TemplateService } from '../../../core/src/table-editor.module';\n\n/**\n * This is a fork of [ngx-bootstrap typeahead]{@link https://valor-software.com/ngx-bootstrap/#/typeahead}. It has been adjusted to also accept in the `NgModel` binding references to objects instead of plain values, and typeaheadEditable is set to false ([see this issue]{@link https://github.com/valor-software/ngx-bootstrap/issues/1894}). Other than that, check out the ngx-bootstrap documentation for usage details, or check out [the examples]{@link ../../demo/#/examples/supported-fields} on how to use it.\n */\n@Directive({\n\tselector: 'td[type=typeahead][ngModel]',\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: forwardRef(() => TypeaheadCellControlValueAccessor),\n\t\t\tmulti: true\n\t\t}\n\t],\n\texportAs: 'bs-typeahead',\n\thost: {\n\t\t'(input)': '$any(this)._handleInput($event.target.value)',\n\t\t'(blur)': 'onTouched()',\n\t\t'(compositionstart)': '$any(this)._compositionStart()',\n\t\t'(compositionend)': '$any(this)._compositionEnd($event.target.value)'\n\t}\n})\nexport class TypeaheadCellControlValueAccessor extends AbstractTableCell implements OnInit, OnDestroy {\n\t/** @ignore */\n\t@Input()\n\ttypeahead: any;\n\t/** @ignore */\n\t@Input()\n\ttypeaheadMinLength: number = void 0;\n\t/** @ignore */\n\t@Input()\n\ttypeaheadWaitMs: number;\n\t/** @ignore */\n\t@Input()\n\ttypeaheadOptionsLimit: number;\n\t/** @ignore */\n\t@Input()\n\ttypeaheadOptionField: string;\n\t/** @ignore */\n\t@Input()\n\ttypeaheadGroupField: string;\n\t/** @ignore */\n\t@Input()\n\ttypeaheadAsync: boolean = void 0;\n\t/** @ignore */\n\t@Input()\n\ttypeaheadLatinize = true;\n\n\t/** @ignore */\n\t@Input()\n\ttypeaheadSingleWords = true;\n\t/** @ignore */\n\t@Input()\n\ttypeaheadWordDelimiters = ' ';\n\t/** @ignore */\n\t@Input()\n\ttypeaheadPhraseDelimiters = '\\'\"';\n\t/** @ignore */\n\t@Input()\n\ttypeaheadItemTemplate: TemplateRef;\n\t/** @ignore */\n\t@Input()\n\toptionsListTemplate: TemplateRef;\n\t/** @ignore */\n\t@Input()\n\ttypeaheadScrollable = false;\n\t/** @ignore */\n\t@Input()\n\ttypeaheadOptionsInScrollableView = 5;\n\t/** @ignore */\n\t@Output()\n\ttypeaheadLoading = new EventEmitter();\n\t/** @ignore */\n\t@Output()\n\ttypeaheadNoResults = new EventEmitter();\n\t/** @ignore */\n\t@Output()\n\ttypeaheadOnSelect = new EventEmitter();\n\t/** @ignore */\n\t@Output()\n\ttypeaheadOnBlur = new EventEmitter();\n\t/** @ignore */\n\t@Input()\n\tcontainer: string;\n\t/** @ignore */\n\t@Input()\n\tdropup = false;\n\n\t/** @ignore */\n\t_container: TypeaheadContainerComponent;\n\t/** @ignore */\n\tisTypeaheadOptionsListActive = false;\n\n\t/** @ignore */\n\tprotected keyUpEventEmitter: EventEmitter = new EventEmitter();\n\t/** @ignore */\n\tprotected _matches: TypeaheadMatch[];\n\t/** @ignore */\n\tprotected placement = 'bottom-left';\n\t// protected popup:ComponentRef;\n\t/** @ignore */\n\tprivate _typeahead: ComponentLoader;\n\t/** @ignore */\n\tprivate _subscriptions: Subscription[] = [];\n\t/** @ignore */\n\tprivate _outsideClickListener: Function;\n\t/** @ignore */\n\tconstructor(\n\t\ttemplateBridge: TemplateService,\n\t\tconfig: TableEditorConfig,\n\t\tprivate element: ElementRef,\n\t\trenderer: Renderer2,\n\t\tviewContainerRef: ViewContainerRef,\n\t\tinjector: Injector,\n\t\tprivate cis: ComponentLoaderFactory,\n\t\tprivate changeDetection: ChangeDetectorRef\n\t) {\n\t\tsuper(templateBridge, config, element, renderer, viewContainerRef, injector);\n\t}\n\t/** @ignore */\n\tngOnInit(): void {\n\t\tsuper.ngOnInit();\n\t\tthis.ngControl = this.injector.get(NgControl);\n\t\tthis.typeaheadOptionsLimit = this.typeaheadOptionsLimit || 20;\n\t\tthis.typeaheadMinLength = this.typeaheadMinLength === void 0 ? 1 : this.typeaheadMinLength;\n\t\tthis.typeaheadWaitMs = this.typeaheadWaitMs || 0;\n\n\t\t// async should be false in case of array\n\t\tif (this.typeaheadAsync === undefined && !(this.typeahead instanceof Observable)) {\n\t\t\tthis.typeaheadAsync = false;\n\t\t}\n\n\t\tif (this.typeahead instanceof Observable) {\n\t\t\tthis.typeaheadAsync = true;\n\t\t}\n\n\t\tif (this.typeaheadAsync) {\n\t\t\tthis.asyncActions();\n\t\t} else {\n\t\t\tthis.syncActions();\n\t\t}\n\t\tthis.onBlurEventEmitter.subscribe((e: FocusEvent) => {\n\t\t\tconst value = this.inputValueFormatter(this.ngControl.control.value);\n\n\t\t\tthis.setInputValue(value);\n\t\t\tif (this._container && !this._container.isFocused) {\n\t\t\t\tthis.typeaheadOnBlur.emit(this._container.active);\n\t\t\t}\n\t\t});\n\n\t\t// this.onKeyUpEventEmitter.subscribe( (e) => {\n\t\t// \tthis._onChange(e);\n\t\t// });\n\t}\n\t/** @ignore */\n\t@HostListener('input', ['$event'])\n\tonInput(e: any): void {\n\t\t// For ``s, use the `value` property. For others that don't have a\n\t\t// `value` (such as ``), use either\n\t\t// `textContent` or `innerText` (depending on which one is supported, i.e.\n\t\t// Firefox or IE).;\n\t\t// if (this.hasMatches()) {\n\t\tif (!this.typeaheadGroupField) {\n\t\t\t// super.onChange(e.target.value);\n\t\t}\n\t\tconst value =\n\t\t\te.target.value !== undefined ? e.target.value : e.target.textContent !== undefined ? e.target.textContent : e.target.innerText;\n\t\tif (value != null && value.trim().length >= this.typeaheadMinLength) {\n\t\t\tthis.typeaheadLoading.emit(true);\n\t\t\tthis.keyUpEventEmitter.emit(e.target.value);\n\t\t} else {\n\t\t\tthis.typeaheadLoading.emit(false);\n\t\t\tthis.typeaheadNoResults.emit(false);\n\t\t\tthis.hide();\n\t\t}\n\t}\n\t/** @ignore */\n\t@HostListener('keyup', ['$event'])\n\t_onChange(e: any): void {\n\t\tif (this._container) {\n\t\t\tif (e.keyCode === 27) {\n\t\t\t\tthis.teBlockNavigationEventEmitter.emit();\n\t\t\t\tconst value = this.inputValueFormatter(this.ngControl.control.value);\n\t\t\t\tthis.setInputValue(value);\n\t\t\t\tthis.hide();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// up\n\t\t\tif (e.keyCode === 38) {\n\t\t\t\tthis.teBlockNavigationEventEmitter.emit();\n\t\t\t\tthis._container.prevActiveMatch();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// down\n\t\t\tif (e.keyCode === 40) {\n\t\t\t\tthis.teBlockNavigationEventEmitter.emit();\n\t\t\t\tthis._container.nextActiveMatch();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// enter, tab\n\t\t\tif (e.keyCode === 13) {\n\t\t\t\tthis.teBlockNavigationEventEmitter.emit();\n\t\t\t\tconst active = this._container.active;\n\t\t\t\tthis.changeModel(active);\n\t\t\t\t// this._container.selectMatch(active);\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\t// @HostListener('click')\n\t// @HostListener('focus')\n\t// onFocus(): void {\n\t// \tif (this.typeaheadMinLength === 0) {\n\t// \t\tthis.typeaheadLoading.emit(true);\n\t// \t\t// NEED TO FIX\n\t// \t\t// this.keyUpEventEmitter.emit(this.element.nativeElement.value || '');\n\t// \t}\n\t// }\n\n\t// @HostListener('blur')\n\t// onBlur(): void {\n\t// \tthis.writeValue(this.ngControl.control.value);\n\t// \tif (this._container && !this._container.isFocused) {\n\t// \t\tthis.typeaheadOnBlur.emit(this._container.active);\n\t// \t}\n\t// }\n\t/** @ignore */\n\t@HostListener('keydown', ['$event'])\n\tonKeydown(e: any): void {\n\t\t// no container - no problems\n\t\tif (!this._container) {\n\t\t\treturn;\n\t\t}\n\n\t\t// if an item is visible - prevent form submission (enter)\n\t\tif (e.keyCode === 13) {\n\t\t\te.preventDefault();\n\t\t\treturn;\n\t\t}\n\t\t// if an item is visible - don't change focus (tab)\n\t\tif (e.keyCode === 9) {\n\t\t\tthis.teBlockNavigationEventEmitter.emit();\n\t\t\te.preventDefault();\n\t\t\tconst active = this._container.active;\n\t\t\tthis.changeModel(active);\n\t\t\treturn;\n\t\t}\n\t}\n\t/** @ignore */\n\tchangeModel(match: TypeaheadMatch): void {\n\t\t// const valueStr: string = match.value;\n\t\t// this.renderer.setProperty(this['inputElement'].nativeElement, 'value', match.value);\n\t\tthis.setInputValue(match.value);\n\t\tthis.ngControl.viewToModelUpdate(match.item);\n\t\tthis.ngControl.control.setValue(match.item);\n\t\tthis.changeDetection.markForCheck();\n\t\tthis.hide();\n\t}\n\t/** @ignore */\n\tget matches(): any[] {\n\t\treturn this._matches;\n\t}\n\t/** @ignore */\n\t@HostListener('click', ['$event'])\n\tonClick(event: MouseEvent) {\n\t\tsuper.onClick(event);\n\t}\n\t/** @ignore */\n\tpublic writeValue(modelVal: Date): void {\n\t\tsuper.setCellValue(modelVal);\n\t}\n\t/** @ignore */\n\tpublic registerOnChange(fn: any): void {}\n\t/** @ignore */\n\tpublic registerOnTouched(fn: any): void {}\n\t/** @ignore */\n\tpublic parser(value: any) {\n\t\treturn this.ngControl.control.value;\n\t\treturn value;\n\t\t// return new Date(value);\n\t}\n\t/** @ignore */\n\tteAfterInputify() {\n\t\tthis._typeahead = this.cis.createLoader(this.element, this['innerViewContainer'], this.renderer);\n\t}\n\t/** @ignore */\n\tpublic cellValueFormatter(value: any) {\n\t\tvalue = value === null ? '' : this.getOptionFromObject(value);\n\t\treturn value;\n\t}\n\t/** @ignore */\n\tpublic inputValueFormatter(value: any) {\n\t\tvalue = value === null ? '' : this.getOptionFromObject(value);\n\t\treturn value;\n\t}\n\t/** @ignore */\n\tshow(): void {\n\t\tthis._typeahead\n\t\t\t.attach(TypeaheadContainerComponent)\n\t\t\t// todo: add append to body, after updating positioning service\n\t\t\t.to(this.element)\n\t\t\t.position({ attachment: `${this.dropup ? 'top' : 'bottom'} left` })\n\t\t\t.show({\n\t\t\t\ttypeaheadRef: this,\n\t\t\t\tplacement: this.placement,\n\t\t\t\tanimation: false,\n\t\t\t\tdropup: this.dropup\n\t\t\t});\n\n\t\tthis._outsideClickListener = this.renderer.listen('document', 'click', (e: MouseEvent) => {\n\t\t\tif (this.typeaheadMinLength === 0 && (this.element.nativeElement as any).contains(e.target)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.onOutsideClick();\n\t\t});\n\n\t\tthis._container = this._typeahead.instance;\n\t\tthis._container.parent = this;\n\t\t// This improves the speed as it won't have to be done for each list item\n\t\tconst normalizedValue = this.getOptionFromObject(this.ngControl.control.value);\n\t\tconst normalizedQuery = (this.typeaheadLatinize ? latinize(normalizedValue) : normalizedValue).toString().toLowerCase();\n\t\tthis._container.query = this.typeaheadSingleWords\n\t\t\t? tokenize(normalizedQuery, this.typeaheadWordDelimiters, this.typeaheadPhraseDelimiters)\n\t\t\t: normalizedQuery;\n\t\tthis._container.matches = this._matches;\n\t\tthis.element.nativeElement.focus();\n\t}\n\t/** @ignore */\n\thide(): void {\n\t\tif (this._typeahead.isShown) {\n\t\t\tthis._typeahead.hide();\n\t\t\tthis._outsideClickListener();\n\t\t\tthis._container = null;\n\t\t}\n\t}\n\t/** @ignore */\n\tonOutsideClick(): void {\n\t\tif (this._container && !this._container.isFocused) {\n\t\t\tthis.hide();\n\t\t}\n\t}\n\t/** @ignore */\n\tngOnDestroy(): any {\n\t\tfor (const sub of this._subscriptions) {\n\t\t\tsub.unsubscribe();\n\t\t}\n\t\tif (this._typeahead) this._typeahead.dispose();\n\t}\n\t/** @ignore */\n\tprotected asyncActions(): void {\n\t\tthis._subscriptions.push(\n\t\t\tthis.keyUpEventEmitter\n\t\t\t\t.pipe(\n\t\t\t\t\tdebounceTime(this.typeaheadWaitMs),\n\t\t\t\t\tswitchMap(() => this.typeahead)\n\t\t\t\t)\n\t\t\t\t.subscribe((matches: any) => {\n\t\t\t\t\tthis.finalizeAsyncCall(matches);\n\t\t\t\t})\n\t\t);\n\t}\n\t/** @ignore */\n\tprotected syncActions(): void {\n\t\tthis._subscriptions.push(\n\t\t\tthis.keyUpEventEmitter\n\t\t\t\t.pipe(\n\t\t\t\t\tdebounceTime(this.typeaheadWaitMs),\n\t\t\t\t\tmergeMap((value: string) => {\n\t\t\t\t\t\tconst normalizedQuery = this.normalizeQuery(value);\n\t\t\t\t\t\treturn from(this.typeahead).pipe(\n\t\t\t\t\t\t\tfilter((option: any) => {\n\t\t\t\t\t\t\t\treturn option && this.testMatch(this.normalizeOption(option), normalizedQuery);\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\ttoArray()\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.subscribe((matches: any[]) => {\n\t\t\t\t\tthis.finalizeAsyncCall(matches);\n\t\t\t\t})\n\t\t);\n\t}\n\t/** @ignore */\n\tprotected normalizeOption(option: any): any {\n\t\tconst optionValue: string = getValueFromObject(option, this.typeaheadOptionField);\n\t\tconst normalizedOption = this.typeaheadLatinize ? latinize(optionValue) : optionValue;\n\n\t\treturn normalizedOption.toLowerCase();\n\t}\n\t/** @ignore */\n\tprotected normalizeQuery(value: string): any {\n\t\t// If singleWords, break model here to not be doing extra work on each\n\t\t// iteration\n\t\tlet normalizedQuery: any = (this.typeaheadLatinize ? latinize(value) : value).toString().toLowerCase();\n\t\tnormalizedQuery = this.typeaheadSingleWords\n\t\t\t? tokenize(normalizedQuery, this.typeaheadWordDelimiters, this.typeaheadPhraseDelimiters)\n\t\t\t: normalizedQuery;\n\n\t\treturn normalizedQuery;\n\t}\n\t/** @ignore */\n\tprotected testMatch(match: string, test: any): boolean {\n\t\tlet spaceLength: number;\n\n\t\tif (typeof test === 'object') {\n\t\t\tspaceLength = test.length;\n\t\t\tfor (let i = 0; i  0 && match.indexOf(test[i]) = 0;\n\t}\n\t/** @ignore */\n\tprotected finalizeAsyncCall(matches: any[]): void {\n\t\tthis.prepareMatches(matches);\n\t\tthis.typeaheadLoading.emit(false);\n\t\tthis.typeaheadNoResults.emit(!this.hasMatches());\n\n\t\tif (!this.hasMatches()) {\n\t\t\tthis.hide();\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._container) {\n\t\t\t// fix: remove usage of ngControl internals\n\t\t\tconst normalizedValue = this.getOptionFromObject(this.ngControl.control.value);\n\t\t\tconst _controlValue = (this.typeaheadLatinize ? latinize(normalizedValue) : normalizedValue) || '';\n\t\t\t// This improves the speed as it won't have to be done for each list item\n\t\t\tconst normalizedQuery = _controlValue.toString().toLowerCase();\n\t\t\tthis._container.query = this.typeaheadSingleWords\n\t\t\t\t? tokenize(normalizedQuery, this.typeaheadWordDelimiters, this.typeaheadPhraseDelimiters)\n\t\t\t\t: normalizedQuery;\n\t\t\tthis._container.matches = this._matches;\n\t\t} else {\n\t\t\tthis.show();\n\t\t}\n\t}\n\t/** @ignore */\n\tprotected prepareMatches(options: any[]): void {\n\t\tconst limited: any[] = options.slice(0, this.typeaheadOptionsLimit);\n\n\t\tif (this.typeaheadGroupField) {\n\t\t\tlet matches: TypeaheadMatch[] = [];\n\n\t\t\t// extract all group names\n\t\t\tconst groups = limited\n\t\t\t\t.map((option: any) => getValueFromObject(option, this.typeaheadGroupField))\n\t\t\t\t.filter((v: string, i: number, a: any[]) => a.indexOf(v) === i);\n\n\t\t\tgroups.forEach((group: string) => {\n\t\t\t\t// add group header to array of matches\n\t\t\t\tmatches.push(new TypeaheadMatch(group, group, true));\n\n\t\t\t\t// add each item of group to array of matches\n\t\t\t\tmatches = matches.concat(\n\t\t\t\t\tlimited\n\t\t\t\t\t\t.filter((option: any) => getValueFromObject(option, this.typeaheadGroupField) === group)\n\t\t\t\t\t\t.map((option: any) => new TypeaheadMatch(option, getValueFromObject(option, this.typeaheadOptionField)))\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tthis._matches = matches;\n\t\t} else {\n\t\t\tthis._matches = limited.map((option: any) => new TypeaheadMatch(option, getValueFromObject(option, this.typeaheadOptionField)));\n\t\t}\n\t}\n\t/** @ignore */\n\tprotected hasMatches(): boolean {\n\t\treturn this._matches.length > 0;\n\t}\n\t/** @ignore */\n\tprivate getOptionFromObject(ngControlValue: any) {\n\t\tif (!!ngControlValue && typeof ngControlValue === 'object') {\n\t\t\treturn ngControlValue[this.typeaheadOptionField];\n\t\t}\n\t\treturn ngControlValue;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TypeaheadModule.html":{"url":"modules/TypeaheadModule.html","title":"module - TypeaheadModule","body":"\n                   \n\n\n\n\n  Modules\n  TypeaheadModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TypeaheadModule\n\n\n\ncluster_TypeaheadModule_declarations\n\n\n\ncluster_TypeaheadModule_TypeaheadCellControlValueAccessor_providers\n\n\n\ncluster_TypeaheadModule_exports\n\n\n\n\nTypeaheadCellControlValueAccessor\n\nTypeaheadCellControlValueAccessor\n\n\n\nTypeaheadModule\n\nTypeaheadModule\n\nTypeaheadModule -->\n\nTypeaheadCellControlValueAccessor->TypeaheadModule\n\n\n\n\n\nTypeaheadCellControlValueAccessor \n\nTypeaheadCellControlValueAccessor \n\nTypeaheadCellControlValueAccessor  -->\n\nTypeaheadModule->TypeaheadCellControlValueAccessor \n\n\n\n TypeaheadCellControlValueAccessor), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TypeaheadCellControlValueAccessor), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TypeaheadCellControlValueAccessor), multi: true\n}\n\n TypeaheadCellControlValueAccessor), multi: true\n}->TypeaheadCellControlValueAccessor -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TypeaheadCellControlValueAccessor), multi: true\n}->TypeaheadCellControlValueAccessor\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            extras/src/typeahead/typeahead.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module is part of ngx-table-editor/extras. To use it, run\n      npm install --save ngx-table-editor/extrasand import the desired module. You can also import TableEditorExtrasModule to import everything.\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TypeaheadCellControlValueAccessor\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TypeaheadContainerComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TypeaheadCellControlValueAccessor\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { TypeaheadContainerComponent } from './typeahead-dependencies/typeahead-container.component';\nimport { TypeaheadCellControlValueAccessor } from './typeahead.directive';\nimport { ComponentLoaderFactory } from './typeahead-dependencies/component-loader/component-loader.factory';\nimport { PositioningService } from './typeahead-dependencies/positioning/positioning.service';\n\n/** This module is part of `ngx-table-editor/extras`. To use it, run\n *\n * ```console\n  \tnpm install --save ngx-table-editor/extras\n```\n * and import the desired module. You can also import `TableEditorExtrasModule` to import everything.\n*/\n@NgModule({\n\timports: [CommonModule],\n\tdeclarations: [TypeaheadContainerComponent, TypeaheadCellControlValueAccessor],\n\texports: [TypeaheadContainerComponent, TypeaheadCellControlValueAccessor],\n\tentryComponents: [TypeaheadContainerComponent]\n})\nexport class TypeaheadModule {\n\tstatic forRoot(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: TypeaheadModule,\n\t\t\tproviders: [ComponentLoaderFactory, PositioningService]\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                core/src/control-value-accessors/abstract-table-cell.ts\n            \n            \n                injectable\n            \n            \n                AbstractTableCell\n            \n            \n                58 %\n                (10/17)\n            \n        \n        \n            \n                \n                core/src/control-value-accessors/date-cell-control-value-accessor.directive.ts\n            \n            \n                directive\n            \n            \n                DateCellControlValueAccessor\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                core/src/control-value-accessors/date-cell-control-value-accessor.directive.ts\n            \n            \n                variable\n            \n            \n                TE_DATE_CELL_ACCESSOR\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                core/src/control-value-accessors/number-cell-control-value-accessor.directive.ts\n            \n            \n                directive\n            \n            \n                NumberCellControlValueAccessor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                core/src/control-value-accessors/number-cell-control-value-accessor.directive.ts\n            \n            \n                variable\n            \n            \n                TE_NUMBER_CELL_ACCESSOR\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                core/src/control-value-accessors/text-cell-control-value-accessor.directive.ts\n            \n            \n                directive\n            \n            \n                TextCellControlValueAccessor\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                core/src/control-value-accessors/text-cell-control-value-accessor.directive.ts\n            \n            \n                variable\n            \n            \n                TE_TEXT_CELL_ACCESSOR\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                core/src/navigators/keyboard-navigator.ts\n            \n            \n                class\n            \n            \n                KeyboardNavigator\n            \n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                core/src/navigators/navigator.ts\n            \n            \n                class\n            \n            \n                AbstractNavigator\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                core/src/navigators/navigator.ts\n            \n            \n                variable\n            \n            \n                TE_NAVIGATORS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                core/src/table-editor.module.ts\n            \n            \n                variable\n            \n            \n                TABLE_EDITOR_DIRECTIVE_DECLARATIONS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                core/src/table-editor.module.ts\n            \n            \n                variable\n            \n            \n                TABLE_EDITOR_DIRECTIVE_EXPORTS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                core/src/table/row.directive.ts\n            \n            \n                directive\n            \n            \n                TableEditorRowDirective\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                core/src/table/table.directive.ts\n            \n            \n                directive\n            \n            \n                TableEditorDirective\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                core/src/table/table.directive.ts\n            \n            \n                interface\n            \n            \n                TeExecutor\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                core/src/utils/anchor.directive.ts\n            \n            \n                directive\n            \n            \n                AnchorDirective\n            \n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                core/src/utils/config.service.ts\n            \n            \n                injectable\n            \n            \n                TableEditorConfig\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                core/src/utils/config.service.ts\n            \n            \n                interface\n            \n            \n                HTMLInputElementStyle\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                core/src/utils/input.component.ts\n            \n            \n                component\n            \n            \n                InputTemplateComponent\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                core/src/utils/input.component.ts\n            \n            \n                class\n            \n            \n                TemplateExtractor\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                core/src/utils/on-init.directive.ts\n            \n            \n                directive\n            \n            \n                OnInitDirective\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                core/src/utils/row-change-event.ts\n            \n            \n                class\n            \n            \n                RowChangeEvent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                core/src/utils/row-change-event.ts\n            \n            \n                interface\n            \n            \n                RowChangeContext\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                core/src/utils/template.service.ts\n            \n            \n                injectable\n            \n            \n                TemplateService\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                extras/src/typeahead/typeahead-dependencies/positioning/ng-positioning.ts\n            \n            \n                variable\n            \n            \n                positionService\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                extras/src/typeahead/typeahead-dependencies/utils/facade/browser.ts\n            \n            \n                variable\n            \n            \n                document\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                extras/src/typeahead/typeahead-dependencies/utils/facade/browser.ts\n            \n            \n                variable\n            \n            \n                Event\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                extras/src/typeahead/typeahead-dependencies/utils/facade/browser.ts\n            \n            \n                variable\n            \n            \n                EventListener\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                extras/src/typeahead/typeahead-dependencies/utils/facade/browser.ts\n            \n            \n                variable\n            \n            \n                EventTarget\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                extras/src/typeahead/typeahead-dependencies/utils/facade/browser.ts\n            \n            \n                variable\n            \n            \n                gc\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                extras/src/typeahead/typeahead-dependencies/utils/facade/browser.ts\n            \n            \n                variable\n            \n            \n                History\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                extras/src/typeahead/typeahead-dependencies/utils/facade/browser.ts\n            \n            \n                variable\n            \n            \n                KeyboardEvent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                extras/src/typeahead/typeahead-dependencies/utils/facade/browser.ts\n            \n            \n                variable\n            \n            \n                location\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                extras/src/typeahead/typeahead-dependencies/utils/facade/browser.ts\n            \n            \n                variable\n            \n            \n                Location\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                extras/src/typeahead/typeahead-dependencies/utils/facade/browser.ts\n            \n            \n                variable\n            \n            \n                MouseEvent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                extras/src/typeahead/typeahead-dependencies/utils/facade/browser.ts\n            \n            \n                variable\n            \n            \n                performance\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                extras/src/typeahead/typeahead-dependencies/utils/facade/browser.ts\n            \n            \n                variable\n            \n            \n                win\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                extras/src/typeahead/typeahead-dependencies/utils/theme-provider.ts\n            \n            \n                variable\n            \n            \n                guessedVersion\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                extras/src/typeahead/typeahead-dependencies/utils/triggers.ts\n            \n            \n                variable\n            \n            \n                DEFAULT_ALIASES\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                extras/src/typeahead/typeahead.directive.ts\n            \n            \n                directive\n            \n            \n                TypeaheadCellControlValueAccessor\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CellDisabledState   (core/.../abstract-table-cell.ts)\n                        \n                        \n                            CellState   (core/.../abstract-table-cell.ts)\n                        \n                        \n                            NavigationAction   (core/.../navigator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    core/src/control-value-accessors/abstract-table-cell.ts\n    \n        \n            \n                \n                    \n                        \n                        CellDisabledState\n                    \n                \n                        \n                            \n                                 Disabled\n                            \n                        \n                        \n                            \n                                 Enabled\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        CellState\n                    \n                \n                        \n                            \n                                 Inputified\n                            \n                        \n                        \n                            \n                                 Cellified\n                            \n                        \n            \n        \n\n    core/src/navigators/navigator.ts\n    \n        \n            \n                \n                    \n                        \n                        NavigationAction\n                    \n                \n                    \n                        \n                            An enumerator that reflect the possible movements that happen within a table.\n\n                        \n                    \n                        \n                            \n                                 Up\n                            \n                        \n                        \n                            \n                                Value : up\n                            \n                        \n                        \n                            \n                                 Right\n                            \n                        \n                        \n                            \n                                Value : right\n                            \n                        \n                        \n                            \n                                 Down\n                            \n                        \n                        \n                            \n                                Value : down\n                            \n                        \n                        \n                            \n                                 Left\n                            \n                        \n                        \n                            \n                                Value : left\n                            \n                        \n                        \n                            \n                                 Exit\n                            \n                        \n                        \n                            \n                                Value : exit\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TableEditorModule\n\n\n\ncluster_TableEditorModule_declarations\n\n\n\ncluster_TableEditorModule_exports\n\n\n\ncluster_TableEditorModule_providers\n\n\n\ncluster_TypeaheadModule\n\n\n\ncluster_TypeaheadModule_declarations\n\n\n\ncluster_TypeaheadModule_TypeaheadCellControlValueAccessor_providers\n\n\n\ncluster_TypeaheadModule_exports\n\n\n\n\nAnchorDirective\n\nAnchorDirective\n\n\n\nTableEditorModule\n\nTableEditorModule\n\nTableEditorModule -->\n\nAnchorDirective->TableEditorModule\n\n\n\n\n\nDateCellControlValueAccessor\n\nDateCellControlValueAccessor\n\nTableEditorModule -->\n\nDateCellControlValueAccessor->TableEditorModule\n\n\n\n\n\nInputTemplateComponent\n\nInputTemplateComponent\n\nTableEditorModule -->\n\nInputTemplateComponent->TableEditorModule\n\n\n\n\n\nNumberCellControlValueAccessor\n\nNumberCellControlValueAccessor\n\nTableEditorModule -->\n\nNumberCellControlValueAccessor->TableEditorModule\n\n\n\n\n\nOnInitDirective\n\nOnInitDirective\n\nTableEditorModule -->\n\nOnInitDirective->TableEditorModule\n\n\n\n\n\nTableEditorDirective\n\nTableEditorDirective\n\nTableEditorModule -->\n\nTableEditorDirective->TableEditorModule\n\n\n\n\n\nTableEditorRowDirective\n\nTableEditorRowDirective\n\nTableEditorModule -->\n\nTableEditorRowDirective->TableEditorModule\n\n\n\n\n\nTextCellControlValueAccessor\n\nTextCellControlValueAccessor\n\nTableEditorModule -->\n\nTextCellControlValueAccessor->TableEditorModule\n\n\n\n\n\nAnchorDirective \n\nAnchorDirective \n\nAnchorDirective  -->\n\nTableEditorModule->AnchorDirective \n\n\n\n\n\nDateCellControlValueAccessor \n\nDateCellControlValueAccessor \n\nDateCellControlValueAccessor  -->\n\nTableEditorModule->DateCellControlValueAccessor \n\n\n\n\n\nInputTemplateComponent \n\nInputTemplateComponent \n\nInputTemplateComponent  -->\n\nTableEditorModule->InputTemplateComponent \n\n\n\n\n\nNumberCellControlValueAccessor \n\nNumberCellControlValueAccessor \n\nNumberCellControlValueAccessor  -->\n\nTableEditorModule->NumberCellControlValueAccessor \n\n\n\n\n\nOnInitDirective \n\nOnInitDirective \n\nOnInitDirective  -->\n\nTableEditorModule->OnInitDirective \n\n\n\n\n\nTableEditorDirective \n\nTableEditorDirective \n\nTableEditorDirective  -->\n\nTableEditorModule->TableEditorDirective \n\n\n\n\n\nTableEditorRowDirective \n\nTableEditorRowDirective \n\nTableEditorRowDirective  -->\n\nTableEditorModule->TableEditorRowDirective \n\n\n\n\n\nTextCellControlValueAccessor \n\nTextCellControlValueAccessor \n\nTextCellControlValueAccessor  -->\n\nTableEditorModule->TextCellControlValueAccessor \n\n\n\n\n\nTableEditorConfig\n\nTableEditorConfig\n\nTableEditorModule -->\n\nTableEditorConfig->TableEditorModule\n\n\n\n\n\nTemplateService\n\nTemplateService\n\nTableEditorModule -->\n\nTemplateService->TableEditorModule\n\n\n\n\n\nTypeaheadCellControlValueAccessor\n\nTypeaheadCellControlValueAccessor\n\n\n\nTypeaheadModule\n\nTypeaheadModule\n\nTypeaheadModule -->\n\nTypeaheadCellControlValueAccessor->TypeaheadModule\n\n\n\n\n\nTypeaheadCellControlValueAccessor \n\nTypeaheadCellControlValueAccessor \n\nTypeaheadCellControlValueAccessor  -->\n\nTypeaheadModule->TypeaheadCellControlValueAccessor \n\n\n\n TypeaheadCellControlValueAccessor), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TypeaheadCellControlValueAccessor), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TypeaheadCellControlValueAccessor), multi: true\n}\n\n TypeaheadCellControlValueAccessor), multi: true\n}->TypeaheadCellControlValueAccessor -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TypeaheadCellControlValueAccessor), multi: true\n}->TypeaheadCellControlValueAccessor\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    8 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        TableEditorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TypeaheadModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_ALIASES   (extras/.../triggers.ts)\n                        \n                        \n                            document   (extras/.../browser.ts)\n                        \n                        \n                            Event   (extras/.../browser.ts)\n                        \n                        \n                            EventListener   (extras/.../browser.ts)\n                        \n                        \n                            EventTarget   (extras/.../browser.ts)\n                        \n                        \n                            gc   (extras/.../browser.ts)\n                        \n                        \n                            guessedVersion   (extras/.../theme-provider.ts)\n                        \n                        \n                            History   (extras/.../browser.ts)\n                        \n                        \n                            KeyboardEvent   (extras/.../browser.ts)\n                        \n                        \n                            location   (extras/.../browser.ts)\n                        \n                        \n                            Location   (extras/.../browser.ts)\n                        \n                        \n                            MouseEvent   (extras/.../browser.ts)\n                        \n                        \n                            performance   (extras/.../browser.ts)\n                        \n                        \n                            positionService   (extras/.../ng-positioning.ts)\n                        \n                        \n                            TABLE_EDITOR_DIRECTIVE_DECLARATIONS   (core/.../table-editor.module.ts)\n                        \n                        \n                            TABLE_EDITOR_DIRECTIVE_EXPORTS   (core/.../table-editor.module.ts)\n                        \n                        \n                            TE_DATE_CELL_ACCESSOR   (core/.../date-cell-control-value-accessor.directive.ts)\n                        \n                        \n                            TE_NAVIGATORS   (core/.../navigator.ts)\n                        \n                        \n                            TE_NUMBER_CELL_ACCESSOR   (core/.../number-cell-control-value-accessor.directive.ts)\n                        \n                        \n                            TE_TEXT_CELL_ACCESSOR   (core/.../text-cell-control-value-accessor.directive.ts)\n                        \n                        \n                            win   (extras/.../browser.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    extras/src/typeahead/typeahead-dependencies/utils/triggers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_ALIASES\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULT_ALIASES:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\thover: ['mouseover', 'mouseout'],\n\tfocus: ['focusin', 'focusout']\n}\n                        \n                    \n\n\n            \n        \n\n    extras/src/typeahead/typeahead-dependencies/utils/facade/browser.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            document\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        document:     \n\n                    \n                \n                    \n                        \n                            Default value : win.document\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Event\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Event:     \n\n                    \n                \n                    \n                        \n                            Default value : win['Event']\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EventListener\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        EventListener:     \n\n                    \n                \n                    \n                        \n                            Default value : win['EventListener']\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            EventTarget\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        EventTarget:     \n\n                    \n                \n                    \n                        \n                            Default value : win['EventTarget']\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gc:     \n\n                    \n                \n                    \n                        \n                            Default value : win['gc'] ? () => win['gc']() : (): any => null\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            History\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        History:     \n\n                    \n                \n                    \n                        \n                            Default value : win['History']\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            KeyboardEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        KeyboardEvent:     \n\n                    \n                \n                    \n                        \n                            Default value : win['KeyboardEvent']\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        location:     \n\n                    \n                \n                    \n                        \n                            Default value : win.location\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Location\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Location:     \n\n                    \n                \n                    \n                        \n                            Default value : win['Location']\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MouseEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MouseEvent:     \n\n                    \n                \n                    \n                        \n                            Default value : win['MouseEvent']\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            performance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        performance:     \n\n                    \n                \n                    \n                        \n                            Default value : win['performance'] ? win['performance'] : null\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            win\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        win:     \n\n                    \n                \n                    \n                        \n                            Default value : (typeof window !== 'undefined' && window) || {}\n                        \n                    \n\n\n            \n        \n\n    extras/src/typeahead/typeahead-dependencies/utils/theme-provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            guessedVersion\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        guessedVersion:     \"bs3\" | \"bs4\"\n\n                    \n                \n                    \n                        \n                            Type :     \"bs3\" | \"bs4\"\n\n                        \n                    \n\n\n            \n        \n\n    extras/src/typeahead/typeahead-dependencies/positioning/ng-positioning.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            positionService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        positionService:     \n\n                    \n                \n                    \n                        \n                            Default value : new Positioning()\n                        \n                    \n\n\n            \n        \n\n    core/src/table-editor.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TABLE_EDITOR_DIRECTIVE_DECLARATIONS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TABLE_EDITOR_DIRECTIVE_DECLARATIONS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n\tTableEditorDirective,\n\tTextCellControlValueAccessor,\n\tDateCellControlValueAccessor,\n\tNumberCellControlValueAccessor,\n\tTableEditorRowDirective,\n\tInputTemplateComponent,\n\tOnInitDirective,\n\tAnchorDirective\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TABLE_EDITOR_DIRECTIVE_EXPORTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TABLE_EDITOR_DIRECTIVE_EXPORTS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n\tTableEditorDirective,\n\tTextCellControlValueAccessor,\n\tDateCellControlValueAccessor,\n\tNumberCellControlValueAccessor,\n\tTableEditorRowDirective,\n\tInputTemplateComponent,\n\tOnInitDirective,\n\tAnchorDirective,\n\t// TemplateService\n]\n                        \n                    \n\n\n            \n        \n\n    core/src/control-value-accessors/date-cell-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TE_DATE_CELL_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TE_DATE_CELL_ACCESSOR:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tprovide: NG_VALUE_ACCESSOR,\n\tuseExisting: forwardRef(() => DateCellControlValueAccessor),\n\tmulti: true\n}\n                        \n                    \n\n\n            \n        \n\n    core/src/navigators/navigator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TE_NAVIGATORS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TE_NAVIGATORS:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('TeNavigators')\n                        \n                    \n\n\n            \n        \n\n    core/src/control-value-accessors/number-cell-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TE_NUMBER_CELL_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TE_NUMBER_CELL_ACCESSOR:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tprovide: NG_VALUE_ACCESSOR,\n\tuseExisting: forwardRef(() => NumberCellControlValueAccessor),\n\tmulti: true\n}\n                        \n                    \n\n\n            \n        \n\n    core/src/control-value-accessors/text-cell-control-value-accessor.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TE_TEXT_CELL_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TE_TEXT_CELL_ACCESSOR:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tprovide: NG_VALUE_ACCESSOR,\n\tuseExisting: forwardRef(() => TextCellControlValueAccessor),\n\tmulti: true\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
